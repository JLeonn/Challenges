<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" />
<title>Letter frequency - Rosetta Code</title>
<script src="/cdn-cgi/apps/head/7qaJovFEYxjqsAZAxmfekTkNrFg.js"></script><script type="text/javascript">
//<![CDATA[
window.__cfRocketOptions = {byc:0,p:0,petok:"ebdc5c0cdc6d28a559dd9b90c0f2cb509334061d-1517628647-1800"};
//]]>
</script>
<script type="text/javascript" src="https://ajax.cloudflare.com/cdn-cgi/scripts/b7ef205d/cloudflare-static/rocket.min.js"></script>
<script type="text/rocketscript">document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script type="text/rocketscript">window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"Letter_frequency","wgTitle":"Letter frequency","wgCurRevisionId":258219,"wgRevisionId":258219,"wgArticleId":10543,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Programming Tasks","Probability and statistics","Randomness","ACL2","Ada","Aikido","ALGOL 68","APL","AutoHotkey","AutoIt","AWK","BaCon","BBC BASIC","Bracmat","C","C sharp","C++","Common Lisp","Clojure","Component Pascal","D","EchoLisp","Eiffel","Elixir","Erlang","ERRE","Euphoria","F Sharp","FBSL","Factor","Forth","Fortran","FreeBASIC","Gambas","Go","Groovy","Harbour","Haskell","Icon","Unicon","Icon Programming Library","J","Java","JavaScript","Jq","Julia","K","Kotlin","Liberty BASIC","Lasso","Lua","Maple","Mathematica","Wolfram Language","MATLAB","Octave","NetRexx","Nim","Objeck","Objective-C","OCaml","OxygenBasic","PARI/GP","Pascal","Perl","Perl 6",
"Phix","PHP","PicoLisp","PL/I","PowerShell","Prolog","PureBasic","Python","R","Racket","Raven","REXX","Ring","Ruby","Run BASIC","Rust","Scala","Scheme","Seed7","Sidef","SIMPOL","Tcl","TUSCRIPT","TXR","Vala","Gee","VBA","VBScript","Vedit macro language","Whitespace","XPL0","Zkl"],"wgBreakFrames":!1,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Letter_frequency","wgRelevantArticleId":10543,"wgIsProbablyEditable":!0,"wgRestrictionEdit":[],"wgRestrictionMove":[],"sfgAutocompleteValues":[],"sfgAutocompleteOnAllChars":!1,"sfgFieldProperties":[],"sfgDependentFields":[],"sfgShowOnSelect":[],"sfgScriptPath":
"/mw/extensions/SemanticForms","sdgDownArrowImage":"/mw/extensions/SemanticDrilldown/skins/down-arrow.png","sdgRightArrowImage":"/mw/extensions/SemanticDrilldown/skins/right-arrow.png"});mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\"});});mw.loader.load(["ext.smw.style","ext.smw.tooltips","mediawiki.page.startup","mediawiki.legacy.wikibits"]);
} );</script>
<link rel="stylesheet" href="/mw/load.php?debug=false&amp;lang=en&amp;modules=ext.bootstrap.styles&amp;only=styles&amp;skin=chameleon" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="/mw/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=chameleon" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}</style>
<script async="" data-rocketsrc="/mw/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=chameleon" type="text/rocketscript"></script>
<meta name="generator" content="MediaWiki 1.26.2" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="ExportRDF" type="application/rdf+xml" title="Letter frequency" href="/mw/index.php?title=Special:ExportRDF/Letter_frequency&amp;xmlmime=rdf" />
<link rel="alternate" type="application/x-wiki" title="Edit" href="/mw/index.php?title=Letter_frequency&amp;action=edit" />
<link rel="edit" title="Edit" href="/mw/index.php?title=Letter_frequency&amp;action=edit" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/mw/opensearch_desc.php" title="Rosetta Code (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://rosettacode.org/mw/api.php?action=rsd" />
<link rel="copyright" href="http://www.gnu.org/licenses/fdl-1.2.html" />
<link rel="alternate" type="application/atom+xml" title="Rosetta Code Atom feed" href="/mw/index.php?title=Special:RecentChanges&amp;feed=atom" />
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Letter_frequency layout-standard skin-chameleon action-view">
<div class="container">
<div class="row">
<div class="col-lg-3">

<div id="p-logo" class="p-logo" role="banner">
<a href="/wiki/Rosetta_Code" title="Visit the main page"><img src="/mw/title.png" alt="Rosetta Code" /></a>
</div>
</div>
<div class="col-lg-9">
<div class="row">
<div class="col-lg-12">

<div class="p-personal pull-right" id="p-personal">
<ul class="p-personal-tools list-inline pull-right">
<li id="pt-createaccount"><a href="/mw/index.php?title=Special:UserLogin&amp;returnto=Letter+frequency&amp;type=signup" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li>
<li id="pt-login"><a href="/mw/index.php?title=Special:UserLogin&amp;returnto=Letter+frequency" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
</ul>
<div class="newtalk-notifier">
</div>
</div>
</div>
</div>
<div class="row">
<div class="col-lg-12">

<div id="p-search" class="p-search pull-right" role="search">
<form id="searchform" class="mw-search form-inline" action="/mw/index.php">
<input type="hidden" name="title" value="Special:Search" />
<div class="input-group">
<input name="search" placeholder="Search" title="Search Rosetta Code [f]" accesskey="f" id="searchInput" class="form-control" />
<div class="input-group-btn">
<button value="Go" id="searchGoButton" name="go" title="Go to a page with this exact name if it exists" type="submit" class="searchGoButton btn btn-default"><span class="glyphicon glyphicon-share-alt"></span></button><button value="Search" id="mw-searchButton" name="fulltext" title="Search the pages for this text" type="submit" class="mw-searchButton btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
</div>
</div>
</form>
</div>
</div>
</div>
</div>
</div>
<div class="row">
<div class="col-lg-12">

<nav class="navbar navbar-default p-navbar" role="navigation" id="mw-navigation">
<div class="container-fluid"><div class="navbar-header">
<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#mw-navigation-collapse">
<span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
</div>
<div class="collapse navbar-collapse" id="mw-navigation-collapse"><ul class="nav navbar-nav">

<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown">Community <b class="caret"></b></a>
<ul class="dropdown-menu p-Community" id="p-Community">
<li id="n-Twitter"><a href="http://twitter.com/rosettacode" rel="nofollow">Twitter</a></li>
<li id="n-Chat.2FIRC"><a href="/wiki/Special:WebChat">Chat/IRC</a></li>
<li id="n-Planet"><a href="http://rosettacode.org/planet" rel="nofollow">Planet</a></li>
<li id="n-The-Village-Pump"><a href="/wiki/Rosetta_Code:Village_Pump">The Village Pump</a></li>
<li id="n-Finances"><a href="/wiki/Rosetta_Code:Finances">Finances</a></li>
</ul>
</li>

<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown">Explore <b class="caret"></b></a>
<ul class="dropdown-menu p-Explore" id="p-Explore">
<li id="n-Languages"><a href="/wiki/Category:Programming_Languages">Languages</a></li>
<li id="n-Tasks"><a href="/wiki/Category:Programming_Tasks">Tasks</a></li>
<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
<li id="n-Similar-sites"><a href="/wiki/Help:Similar_Sites">Similar sites</a></li>
<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
</ul>
</li></ul>
</div>
</div>
</nav>
</div>
</div>
<div class="row">
<div class="col-lg-12">

<ul class="p-contentnavigation list-inline text-center" id="p-contentnavigation">

<li id="p-namespaces">
<ul class="list-inline">
<li id="ca-nstab-main" class="selected"><a href="/wiki/Letter_frequency" title="View the content page [c]" accesskey="c" class="selected">Page</a></li>
<li id="ca-talk"><a href="/wiki/Talk:Letter_frequency" rel="discussion" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
</ul>
</li>

<li id="p-views">
<ul class="list-inline">
<li id="ca-edit"><a href="/mw/index.php?title=Letter_frequency&amp;action=edit" title="Edit this page [e]" accesskey="e">Edit</a></li>
<li id="ca-history"><a href="/mw/index.php?title=Letter_frequency&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div class="row">
<div class="col-lg-12">
</div>
</div>
<div class="row">
<div class="col-lg-12">

<div id="content" class="mw-body"><a id="top"></a>
<div id="mw-js-message" style="display:none;"></div>
<div class="contentHeader">

<h1 id="firstHeading" class="firstHeading">Letter frequency</h1>

<div id="siteSub">From Rosetta Code</div><div id="jump-to-nav" class="mw-jump">Jump to:<a href="#mw-navigation">navigation</a>, <a href="#p-search">search</a></div>
</div><div id="bodyContent">

<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="infobox" style="width: 2in"><div class="floatleft"><a href="/wiki/Category:Solutions_by_Programming_Task" title="Category:Solutions by Programming Task"><img alt="Task" src="/mw/images/thumb/b/ba/Rcode-button-task-crushed.png/64px-Rcode-button-task-crushed.png" width="64" height="64" srcset="/mw/images/thumb/b/ba/Rcode-button-task-crushed.png/96px-Rcode-button-task-crushed.png 1.5x, /mw/images/thumb/b/ba/Rcode-button-task-crushed.png/128px-Rcode-button-task-crushed.png 2x" /></a></div><b>Letter frequency</b><br />
You are encouraged to <a href="/wiki/Rosetta_Code:Solve_a_Task" title="Rosetta Code:Solve a Task">solve this task</a> according to the task description, using any language you may know.</div>
<dl><dt>Task</dt>
<dd></dd></dl>
<p>Open a text file and count the occurrences of each letter.
</p><p>Some of these programs count all characters (including punctuation),
but some only count letters A to Z.
<br /><br />
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#ACL2"><span class="tocnumber">1</span> <span class="toctext">ACL2</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Ada"><span class="tocnumber">2</span> <span class="toctext">Ada</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Aikido"><span class="tocnumber">3</span> <span class="toctext">Aikido</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#ALGOL_68"><span class="tocnumber">4</span> <span class="toctext">ALGOL 68</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#APL"><span class="tocnumber">5</span> <span class="toctext">APL</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#AutoHotkey"><span class="tocnumber">6</span> <span class="toctext">AutoHotkey</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#AutoIt"><span class="tocnumber">7</span> <span class="toctext">AutoIt</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#AWK"><span class="tocnumber">8</span> <span class="toctext">AWK</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#BaCon"><span class="tocnumber">9</span> <span class="toctext">BaCon</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#BBC_BASIC"><span class="tocnumber">10</span> <span class="toctext">BBC BASIC</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Bracmat"><span class="tocnumber">11</span> <span class="toctext">Bracmat</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#C"><span class="tocnumber">12</span> <span class="toctext">C</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#C.23"><span class="tocnumber">13</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#C.2B.2B"><span class="tocnumber">14</span> <span class="toctext">C++</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#Common_Lisp"><span class="tocnumber">15</span> <span class="toctext">Common Lisp</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="#Clojure"><span class="tocnumber">16</span> <span class="toctext">Clojure</span></a></li>
<li class="toclevel-1 tocsection-17"><a href="#Component_Pascal"><span class="tocnumber">17</span> <span class="toctext">Component Pascal</span></a></li>
<li class="toclevel-1 tocsection-18"><a href="#D"><span class="tocnumber">18</span> <span class="toctext">D</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#EchoLisp"><span class="tocnumber">19</span> <span class="toctext">EchoLisp</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#Eiffel"><span class="tocnumber">20</span> <span class="toctext">Eiffel</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#Elixir"><span class="tocnumber">21</span> <span class="toctext">Elixir</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#Erlang"><span class="tocnumber">22</span> <span class="toctext">Erlang</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#ERRE"><span class="tocnumber">23</span> <span class="toctext">ERRE</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#Euphoria"><span class="tocnumber">24</span> <span class="toctext">Euphoria</span></a></li>
<li class="toclevel-1 tocsection-25"><a href="#F.23"><span class="tocnumber">25</span> <span class="toctext">F#</span></a></li>
<li class="toclevel-1 tocsection-26"><a href="#FBSL"><span class="tocnumber">26</span> <span class="toctext">FBSL</span></a></li>
<li class="toclevel-1 tocsection-27"><a href="#Factor"><span class="tocnumber">27</span> <span class="toctext">Factor</span></a></li>
<li class="toclevel-1 tocsection-28"><a href="#Forth"><span class="tocnumber">28</span> <span class="toctext">Forth</span></a></li>
<li class="toclevel-1 tocsection-29"><a href="#Fortran"><span class="tocnumber">29</span> <span class="toctext">Fortran</span></a></li>
<li class="toclevel-1 tocsection-30"><a href="#FreeBASIC"><span class="tocnumber">30</span> <span class="toctext">FreeBASIC</span></a></li>
<li class="toclevel-1 tocsection-31"><a href="#Gambas"><span class="tocnumber">31</span> <span class="toctext">Gambas</span></a></li>
<li class="toclevel-1 tocsection-32"><a href="#Go"><span class="tocnumber">32</span> <span class="toctext">Go</span></a></li>
<li class="toclevel-1 tocsection-33"><a href="#Groovy"><span class="tocnumber">33</span> <span class="toctext">Groovy</span></a></li>
<li class="toclevel-1 tocsection-34"><a href="#Harbour"><span class="tocnumber">34</span> <span class="toctext">Harbour</span></a></li>
<li class="toclevel-1 tocsection-35"><a href="#Haskell"><span class="tocnumber">35</span> <span class="toctext">Haskell</span></a></li>
<li class="toclevel-1 tocsection-36"><a href="#Icon_and_Unicon"><span class="tocnumber">36</span> <span class="toctext">Icon and Unicon</span></a></li>
<li class="toclevel-1 tocsection-37"><a href="#J"><span class="tocnumber">37</span> <span class="toctext">J</span></a></li>
<li class="toclevel-1 tocsection-38"><a href="#Java"><span class="tocnumber">38</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-1 tocsection-39"><a href="#JavaScript"><span class="tocnumber">39</span> <span class="toctext">JavaScript</span></a></li>
<li class="toclevel-1 tocsection-40"><a href="#jq"><span class="tocnumber">40</span> <span class="toctext">jq</span></a></li>
<li class="toclevel-1 tocsection-41"><a href="#Julia"><span class="tocnumber">41</span> <span class="toctext">Julia</span></a></li>
<li class="toclevel-1 tocsection-42"><a href="#K"><span class="tocnumber">42</span> <span class="toctext">K</span></a></li>
<li class="toclevel-1 tocsection-43"><a href="#Kotlin"><span class="tocnumber">43</span> <span class="toctext">Kotlin</span></a></li>
<li class="toclevel-1 tocsection-44"><a href="#Liberty_BASIC"><span class="tocnumber">44</span> <span class="toctext">Liberty BASIC</span></a></li>
<li class="toclevel-1 tocsection-45"><a href="#Lasso"><span class="tocnumber">45</span> <span class="toctext">Lasso</span></a></li>
<li class="toclevel-1 tocsection-46"><a href="#Lua"><span class="tocnumber">46</span> <span class="toctext">Lua</span></a></li>
<li class="toclevel-1 tocsection-47"><a href="#Maple"><span class="tocnumber">47</span> <span class="toctext">Maple</span></a></li>
<li class="toclevel-1 tocsection-48"><a href="#Mathematica_.2F_Wolfram_Language"><span class="tocnumber">48</span> <span class="toctext">Mathematica / Wolfram Language</span></a></li>
<li class="toclevel-1 tocsection-49"><a href="#MATLAB_.2F_Octave"><span class="tocnumber">49</span> <span class="toctext">MATLAB / Octave</span></a></li>
<li class="toclevel-1 tocsection-50"><a href="#NetRexx"><span class="tocnumber">50</span> <span class="toctext">NetRexx</span></a></li>
<li class="toclevel-1 tocsection-51"><a href="#Nim"><span class="tocnumber">51</span> <span class="toctext">Nim</span></a></li>
<li class="toclevel-1 tocsection-52"><a href="#Objeck"><span class="tocnumber">52</span> <span class="toctext">Objeck</span></a></li>
<li class="toclevel-1 tocsection-53"><a href="#Objective-C"><span class="tocnumber">53</span> <span class="toctext">Objective-C</span></a></li>
<li class="toclevel-1 tocsection-54"><a href="#OCaml"><span class="tocnumber">54</span> <span class="toctext">OCaml</span></a></li>
<li class="toclevel-1 tocsection-55"><a href="#OxygenBasic"><span class="tocnumber">55</span> <span class="toctext">OxygenBasic</span></a></li>
<li class="toclevel-1 tocsection-56"><a href="#PARI.2FGP"><span class="tocnumber">56</span> <span class="toctext">PARI/GP</span></a></li>
<li class="toclevel-1 tocsection-57"><a href="#Pascal"><span class="tocnumber">57</span> <span class="toctext">Pascal</span></a></li>
<li class="toclevel-1 tocsection-58"><a href="#Perl"><span class="tocnumber">58</span> <span class="toctext">Perl</span></a></li>
<li class="toclevel-1 tocsection-59"><a href="#Perl_6"><span class="tocnumber">59</span> <span class="toctext">Perl 6</span></a></li>
<li class="toclevel-1 tocsection-60"><a href="#Phix"><span class="tocnumber">60</span> <span class="toctext">Phix</span></a></li>
<li class="toclevel-1 tocsection-61"><a href="#PHP"><span class="tocnumber">61</span> <span class="toctext">PHP</span></a></li>
<li class="toclevel-1 tocsection-62"><a href="#PicoLisp"><span class="tocnumber">62</span> <span class="toctext">PicoLisp</span></a></li>
<li class="toclevel-1 tocsection-63"><a href="#PL.2FI"><span class="tocnumber">63</span> <span class="toctext">PL/I</span></a></li>
<li class="toclevel-1 tocsection-64"><a href="#PowerShell"><span class="tocnumber">64</span> <span class="toctext">PowerShell</span></a></li>
<li class="toclevel-1 tocsection-65"><a href="#Prolog"><span class="tocnumber">65</span> <span class="toctext">Prolog</span></a></li>
<li class="toclevel-1 tocsection-66"><a href="#PureBasic"><span class="tocnumber">66</span> <span class="toctext">PureBasic</span></a></li>
<li class="toclevel-1 tocsection-67"><a href="#Python"><span class="tocnumber">67</span> <span class="toctext">Python</span></a>
<ul>
<li class="toclevel-2 tocsection-68"><a href="#Using_collections.Counter"><span class="tocnumber">67.1</span> <span class="toctext">Using collections.Counter</span></a></li>
<li class="toclevel-2 tocsection-69"><a href="#Not_using_collections.Counter"><span class="tocnumber">67.2</span> <span class="toctext">Not using collections.Counter</span></a></li>
<li class="toclevel-2 tocsection-70"><a href="#Using_defaultdict"><span class="tocnumber">67.3</span> <span class="toctext">Using defaultdict</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-71"><a href="#R"><span class="tocnumber">68</span> <span class="toctext">R</span></a></li>
<li class="toclevel-1 tocsection-72"><a href="#Racket"><span class="tocnumber">69</span> <span class="toctext">Racket</span></a></li>
<li class="toclevel-1 tocsection-73"><a href="#Raven"><span class="tocnumber">70</span> <span class="toctext">Raven</span></a></li>
<li class="toclevel-1 tocsection-74"><a href="#REXX"><span class="tocnumber">71</span> <span class="toctext">REXX</span></a>
<ul>
<li class="toclevel-2 tocsection-75"><a href="#version_1"><span class="tocnumber">71.1</span> <span class="toctext">version 1</span></a></li>
<li class="toclevel-2 tocsection-76"><a href="#Version_2_.28for_TSO.29"><span class="tocnumber">71.2</span> <span class="toctext">Version 2 (for TSO)</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-77"><a href="#Ring"><span class="tocnumber">72</span> <span class="toctext">Ring</span></a></li>
<li class="toclevel-1 tocsection-78"><a href="#Ruby"><span class="tocnumber">73</span> <span class="toctext">Ruby</span></a>
<ul>
<li class="toclevel-2 tocsection-79"><a href="#Ruby_2.0"><span class="tocnumber">73.1</span> <span class="toctext">Ruby 2.0</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-80"><a href="#Run_BASIC"><span class="tocnumber">74</span> <span class="toctext">Run BASIC</span></a></li>
<li class="toclevel-1 tocsection-81"><a href="#Rust"><span class="tocnumber">75</span> <span class="toctext">Rust</span></a></li>
<li class="toclevel-1 tocsection-82"><a href="#Scala"><span class="tocnumber">76</span> <span class="toctext">Scala</span></a></li>
<li class="toclevel-1 tocsection-83"><a href="#Scheme"><span class="tocnumber">77</span> <span class="toctext">Scheme</span></a></li>
<li class="toclevel-1 tocsection-84"><a href="#Seed7"><span class="tocnumber">78</span> <span class="toctext">Seed7</span></a></li>
<li class="toclevel-1 tocsection-85"><a href="#Sidef"><span class="tocnumber">79</span> <span class="toctext">Sidef</span></a></li>
<li class="toclevel-1 tocsection-86"><a href="#SIMPOL"><span class="tocnumber">80</span> <span class="toctext">SIMPOL</span></a></li>
<li class="toclevel-1 tocsection-87"><a href="#Tcl"><span class="tocnumber">81</span> <span class="toctext">Tcl</span></a></li>
<li class="toclevel-1 tocsection-88"><a href="#TUSCRIPT"><span class="tocnumber">82</span> <span class="toctext">TUSCRIPT</span></a></li>
<li class="toclevel-1 tocsection-89"><a href="#TXR"><span class="tocnumber">83</span> <span class="toctext">TXR</span></a>
<ul>
<li class="toclevel-2 tocsection-90"><a href="#TXR_Extraction_Language_plus_TXR_Lisp"><span class="tocnumber">83.1</span> <span class="toctext">TXR Extraction Language plus TXR Lisp</span></a></li>
<li class="toclevel-2 tocsection-91"><a href="#TXR_Lisp"><span class="tocnumber">83.2</span> <span class="toctext">TXR Lisp</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-92"><a href="#Vala"><span class="tocnumber">84</span> <span class="toctext">Vala</span></a></li>
<li class="toclevel-1 tocsection-93"><a href="#VBA"><span class="tocnumber">85</span> <span class="toctext">VBA</span></a></li>
<li class="toclevel-1 tocsection-94"><a href="#VBScript"><span class="tocnumber">86</span> <span class="toctext">VBScript</span></a></li>
<li class="toclevel-1 tocsection-95"><a href="#Vedit_macro_language"><span class="tocnumber">87</span> <span class="toctext">Vedit macro language</span></a></li>
<li class="toclevel-1 tocsection-96"><a href="#Whitespace"><span class="tocnumber">88</span> <span class="toctext">Whitespace</span></a></li>
<li class="toclevel-1 tocsection-97"><a href="#XPL0"><span class="tocnumber">89</span> <span class="toctext">XPL0</span></a></li>
<li class="toclevel-1 tocsection-98"><a href="#zkl"><span class="tocnumber">90</span> <span class="toctext">zkl</span></a></li>
</ul>
</div>
<h2><span class="mw-headline" id="ACL2"><a href="/wiki/Category:ACL2" title="Category:ACL2">ACL2</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=1" title="Edit section: ACL2">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="lisp highlighted_source"><span class="br0">&#40;</span><span class="kw1">defun</span> increment-alist <span class="br0">&#40;</span>tbl key<span class="br0">&#41;</span><br />   <span class="br0">&#40;</span><span class="kw1">cond</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>endp tbl<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">list</span> <span class="br0">&#40;</span><span class="kw1">cons</span> key <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />         <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw1">eql</span> <span class="br0">&#40;</span><span class="kw1">car</span> <span class="br0">&#40;</span>first tbl<span class="br0">&#41;</span><span class="br0">&#41;</span> key<span class="br0">&#41;</span><br />          <span class="br0">&#40;</span><span class="kw1">cons</span> <span class="br0">&#40;</span><span class="kw1">cons</span> key <span class="br0">&#40;</span><span class="nu0">1</span>+ <span class="br0">&#40;</span><span class="kw1">cdr</span> <span class="br0">&#40;</span>first tbl<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />                <span class="br0">&#40;</span>rest tbl<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />         <span class="br0">&#40;</span>t <span class="br0">&#40;</span><span class="kw1">cons</span> <span class="br0">&#40;</span>first tbl<span class="br0">&#41;</span><br />                  <span class="br0">&#40;</span>increment-alist <span class="br0">&#40;</span>rest tbl<span class="br0">&#41;</span> key<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">defun</span> freq-table <span class="br0">&#40;</span>xs<span class="br0">&#41;</span><br />   <span class="br0">&#40;</span><span class="kw1">if</span> <span class="br0">&#40;</span>endp xs<span class="br0">&#41;</span><br />       <span class="kw1">nil</span><br />       <span class="br0">&#40;</span>increment-alist <span class="br0">&#40;</span>freq-table <span class="br0">&#40;</span>rest xs<span class="br0">&#41;</span><span class="br0">&#41;</span><br />                        <span class="br0">&#40;</span>first xs<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">defun</span> letter-freq <span class="br0">&#40;</span>str<span class="br0">&#41;</span><br />   <span class="br0">&#40;</span>freq-table <span class="br0">&#40;</span>coerce str '<span class="kw1">list</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span></pre>
<h2><span class="mw-headline" id="Ada"><a href="/wiki/Category:Ada" title="Category:Ada">Ada</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=2" title="Edit section: Ada">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="ada highlighted_source"><span class="kw3">with</span> Ada.<span class="me1">Text_IO</span>;<br />&#160;<br /><span class="kw3">procedure</span> Letter_Frequency <span class="kw1">is</span><br />   Counters: <span class="kw3">array</span> <span class="br0">&#40;</span>Character<span class="br0">&#41;</span> <span class="kw3">of</span> Natural&#160;:= <span class="br0">&#40;</span><span class="kw3">others</span> =&gt; <span class="nu0">0</span><span class="br0">&#41;</span>; <span class="co1">-- initialize all Counters to 0</span><br />   C:        Character;<br />   File:     Ada.<span class="me1">Text_IO</span>.<span class="me1">File_Type</span>;<br />&#160;<br /><span class="kw1">begin</span><br />   Ada.<span class="me1">Text_IO</span>.<span class="me1">Open</span><span class="br0">&#40;</span>File, Mode =&gt; Ada.<span class="me1">Text_IO</span>.<span class="me1">In_File</span>, Name =&gt; <span class="st0">&quot;letter_frequency.adb&quot;</span><span class="br0">&#41;</span>;<br />   <span class="kw1">while</span> <span class="kw2">not</span> Ada.<span class="me1">Text_IO</span>.<span class="me1">End_Of_File</span><span class="br0">&#40;</span>File<span class="br0">&#41;</span> <span class="kw1">loop</span><br />      Ada.<span class="me1">Text_IO</span>.<span class="me1">Get</span><span class="br0">&#40;</span>File, C<span class="br0">&#41;</span>;<br />      Counters<span class="br0">&#40;</span>C<span class="br0">&#41;</span>&#160;:= Counters<span class="br0">&#40;</span>C<span class="br0">&#41;</span> + <span class="nu0">1</span>;<br />   <span class="kw1">end</span> <span class="kw1">loop</span>;<br />&#160;<br />   <span class="kw1">for</span> I <span class="kw3">in</span> Counters'<span class="kw3">Range</span> <span class="kw1">loop</span><br />      <span class="kw1">if</span> Counters<span class="br0">&#40;</span>I<span class="br0">&#41;</span> &gt; <span class="nu0">0</span> <span class="kw1">then</span><br />            Ada.<span class="me1">Text_IO</span>.<span class="me1">Put_Line</span><span class="br0">&#40;</span><span class="st0">&quot;'&quot;</span> &amp; I &amp; <span class="st0">&quot;':&quot;</span> &amp; Integer'Image<span class="br0">&#40;</span>Counters<span class="br0">&#40;</span>I<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />      <span class="kw1">end</span> <span class="kw1">if</span>;<br />   <span class="kw1">end</span> <span class="kw1">loop</span>;<br /><span class="kw1">end</span> Letter_Frequency;</pre>
<div>
<dl><dt>Output:</div> (counting the characters of its own source code):</dt></dl>
<pre>&gt;./letter_frequency
' ': 122
'&quot;': 6
'&amp;': 3

... [a lot of lines omitted]

'x': 7
'y': 5
'z': 1</pre>
<h2><span class="mw-headline" id="Aikido"><a href="/wiki/Category:Aikido" title="Category:Aikido">Aikido</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=3" title="Edit section: Aikido">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">import ctype<br />&#160;<br />var letters = new int [26]<br />&#160;<br />var s = openin (args[0])<br />while (!s.eof()) {<br />    var ch = s.getchar()<br />    if (s.eof()) {<br />        break<br />    }<br />    if (ctype.isalpha (ch)) {<br />        var n = cast&lt;int&gt;(ctype.tolower(ch) - 'a')<br />        ++letters[n]<br />    }<br />}<br />&#160;<br />foreach i letters.size() {<br />    println (cast&lt;char&gt;('a' + i) + &quot; &quot; + letters[i])<br />}</pre>
<h2><span class="mw-headline" id="ALGOL_68"><a href="/wiki/Category:ALGOL_68" title="Category:ALGOL 68">ALGOL 68</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=4" title="Edit section: ALGOL 68">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="algol68 highlighted_source">&#160;<br /><span class="kw2">BEGIN</span><br />   <span class="br0">&#91;</span>0<span class="sy1">:</span><span class="kw20">max abs char</span><span class="br0">&#93;</span><span class="kw3">INT</span> histogram<span class="sy1">;</span><br />   <span class="kw2">FOR</span> i <span class="kw2">FROM</span> 0 <span class="kw2">TO</span> <span class="kw20">max abs char</span> <span class="kw2">DO</span> histogram<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">:=</span> 0 <span class="kw2">OD</span><span class="sy1">;</span><br />   <span class="kw6">FILE</span> input file<span class="sy1">;</span><br />   <span class="kw3">STRING</span> input file name <span class="sy1">=</span> <span class="st0">&quot;Letter_frequency.a68&quot;</span><span class="sy1">;</span><br />   <span class="kw2">IF</span> <span class="kw22">open</span> <span class="br0">&#40;</span>input file<span class="sy1">,</span> input file name<span class="sy1">,</span> <span class="kw21">stand in channel</span><span class="br0">&#41;</span> <span class="sy1">/=</span> 0 <span class="kw2">THEN</span><br />      put <span class="br0">&#40;</span>stand error<span class="sy1">,</span> <span class="br0">&#40;</span><span class="st0">&quot;Cannot open &quot;</span><span class="sy1">,</span> input file name<span class="sy1">,</span> <span class="kw22">newline</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy1">;</span><br />      stop<br />   <span class="kw2">ELSE</span><br />      on file end <span class="br0">&#40;</span>input file<span class="sy1">,</span> <span class="br0">&#40;</span><span class="kw4">REF</span> <span class="kw6">FILE</span> f<span class="br0">&#41;</span> <span class="kw3">BOOL</span><span class="sy1">:</span> <span class="br0">&#40;</span><span class="kw22">close</span> <span class="br0">&#40;</span>f<span class="br0">&#41;</span><span class="sy1">;</span> <span class="kw2">GOTO</span> finished<span class="br0">&#41;</span><span class="br0">&#41;</span><br />   <span class="kw2">FI</span><span class="sy1">;</span><br />   <span class="kw2">DO</span><br />      <span class="kw3">STRING</span> s<span class="sy1">;</span><br />      get <span class="br0">&#40;</span>input file<span class="sy1">,</span> <span class="br0">&#40;</span>s<span class="sy1">,</span> <span class="kw22">newline</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy1">;</span><br />      <span class="kw2">FOR</span> i <span class="kw2">TO</span> <span class="kw8">UPB</span> s <span class="kw2">DO</span><br />	 <span class="kw3">CHAR</span> c <span class="sy1">=</span> s<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy1">;</span><br />	 <span class="kw2">IF</span> <span class="st0">&quot;A&quot;</span> <span class="sy1">&lt;=</span> c <span class="kw16">AND</span> c <span class="sy1">&lt;=</span> <span class="st0">&quot;Z&quot;</span> <span class="kw16">OR</span> <span class="st0">&quot;a&quot;</span> <span class="sy1">&lt;=</span> c <span class="kw16">AND</span> c <span class="sy1">&lt;=</span> <span class="st0">&quot;z&quot;</span> <span class="kw2">THEN</span><br />	    histogram<span class="br0">&#91;</span><span class="kw8">ABS</span> c<span class="br0">&#93;</span> <span class="kw17">PLUSAB</span> 1<br />	 <span class="kw2">FI</span><br />     <span class="kw2">OD</span><br />   <span class="kw2">OD</span><span class="sy1">;</span><br />   <span class="kw22">close</span> <span class="br0">&#40;</span>input file<span class="br0">&#41;</span><span class="sy1">;</span><br />finished<span class="sy1">:</span><br />   <span class="kw2">FOR</span> i <span class="kw2">FROM</span> <span class="kw8">ABS</span> <span class="st0">&quot;A&quot;</span> <span class="kw2">TO</span> <span class="kw8">ABS</span> <span class="st0">&quot;Z&quot;</span> <span class="kw2">DO</span> <span class="kw22">printf</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>$a3xg<span class="br0">&#40;</span>0<span class="br0">&#41;</span>l$<span class="sy1">,</span> <span class="kw8">REPR</span> i<span class="sy1">,</span> histogram<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw2">OD</span><span class="sy1">;</span><br />   <span class="kw2">FOR</span> i <span class="kw2">FROM</span> <span class="kw8">ABS</span> <span class="st0">&quot;a&quot;</span> <span class="kw2">TO</span> <span class="kw8">ABS</span> <span class="st0">&quot;z&quot;</span> <span class="kw2">DO</span> <span class="kw22">printf</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>$a3xg<span class="br0">&#40;</span>0<span class="br0">&#41;</span>l$<span class="sy1">,</span> <span class="kw8">REPR</span> i<span class="sy1">,</span> histogram<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw2">OD</span><br /><span class="kw2">END</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div> Counting letters in its own source code:</dt></dl>
<pre>A   11
B   9
C   2
D   13
E   11
F   14
G   4
H   3
I   10
J   0
[[ Omitted for K – Z and a – p ]]
q   1
r   15
s   19
t   24
u   10
v   0
w   3
x   4
y   1
z   2
</pre>
<h2><span class="mw-headline" id="APL"><a href="/wiki/Category:APL" title="Category:APL">APL</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=5" title="Edit section: APL">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />      freq←{(⍪∪⍵),+/(∪⍵)∘.⍷⍵}<br />&#160;<br />      freq 0 1 2 3 2 3 4 3 4 4 4<br />0 1<br />1 1<br />2 2<br />3 3<br />4 4              <br />&#160;<br />      freq 'balloon'<br />b 1<br />a 1<br />l 2<br />o 2<br />n 1<br />&#160;</pre>
<h2><span class="mw-headline" id="AutoHotkey"><a href="/wiki/Category:AutoHotkey" title="Category:AutoHotkey">AutoHotkey</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=6" title="Edit section: AutoHotkey">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="autohotkey highlighted_source">OpenFile <span class="sy0">=</span> <span class="re0">%A_ScriptFullPath%</span> <span class="co1">; use own source code</span><br /><a href="http://www.autohotkey.com/docs/commands/FileRead.htm"><span class="kw3">FileRead</span></a><span class="sy0">,</span> FileText<span class="sy0">,</span> <span class="re0">%OpenFile%</span><br /><a href="http://www.autohotkey.com/docs/commands/Loop.htm"><span class="kw3">Loop</span></a> <span class="nu0">26</span><br /><span class="br0">&#123;</span><br />	<a href="http://www.autohotkey.com/docs/commands/StringReplace.htm"><span class="kw3">StringReplace</span></a><span class="sy0">,</span> junk<span class="sy0">,</span> FileText<span class="sy0">,</span>&#160;% <a href="http://www.autohotkey.com/docs/Functions.htm#BuiltIn"><span class="kw4">Chr</span></a><span class="br0">&#40;</span><span class="nu0">96</span><span class="sy0">+</span><a href="http://www.autohotkey.com/docs/Variables.htm#A_Index"><span class="kw2">A_Index</span></a><span class="br0">&#41;</span><span class="sy0">,,</span> UseErrorLevel<br />	out <span class="sy0">.=</span> <a href="http://www.autohotkey.com/docs/Functions.htm#BuiltIn"><span class="kw4">Chr</span></a><span class="br0">&#40;</span><span class="nu0">96</span><span class="sy0">+</span><a href="http://www.autohotkey.com/docs/Variables.htm#A_Index"><span class="kw2">A_Index</span></a><span class="br0">&#41;</span> <span class="st0">&quot;: &quot;</span> <a href="http://www.autohotkey.com/docs/Variables.htm#ErrorLevel"><span class="kw2">ErrorLevel</span></a> <span class="st0">&quot;`n&quot;</span><br /><span class="br0">&#125;</span><br /><a href="http://www.autohotkey.com/docs/commands/MsgBox.htm"><span class="kw3">MsgBox</span></a>&#160;% out</pre>
<div>
<dl><dt>Output:</div> (using script's own file):</dt></dl>
<pre>a: 6
b: 1
c: 6
d: 4
e: 24
[several lines omitted]
x: 5
y: 0
z: 0</pre>
<h2><span class="mw-headline" id="AutoIt"><a href="/wiki/Category:AutoIt" title="Category:AutoIt">AutoIt</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=7" title="Edit section: AutoIt">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This function prints the Letter frequency of a given textfile.
You can choose to use case sensitive search and if special chars should be searched too.
</p>
<pre class="text highlighted_source">&#160;<br />Func _Letter_frequency($Path, $fcase = True, $fspecial_chars = True)<br />	Local $hFile, $sRead, $iupto, $iStart, $iCount<br />	If Not $fcase Then $fcase = False<br />	If Not $fspecial_chars Then<br />		$iStart = 64<br />		If Not $fcase Then<br />			$iupto = 26<br />		Else<br />			$iupto = 58<br />		EndIf<br />	Else<br />		$iStart = 31<br />		$iupto = 224<br />	EndIf<br />	$hFile = FileOpen($Path, 0)<br />	$sRead = FileRead($hFile)<br />	FileClose($hFile)<br />	For $i = 1 To $iupto<br />		If Not $fspecial_chars Then<br />			If $iStart + $i &gt; 90 And $iStart + $i &lt; 97 Then ContinueLoop<br />		EndIf<br />		$sRead = StringReplace($sRead, Chr($iStart + $i), &quot;&quot;, 0, $fcase)<br />		$iCount = @extended<br />		If $iCount &gt; 0 Then ConsoleWrite(Chr($iStart + $i) &amp; &quot;&#160;: &quot; &amp; $iCount &amp; @CRLF)<br />	Next<br />EndFunc  &#160;;==&gt;_Letter_frequency</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>A&#160;: 32
B&#160;: 2
C&#160;: 15
E&#160;: 31
F&#160;: 10
[several lines omitted]
u&#160;: 14
v&#160;: 1
w&#160;: 1
x&#160;: 14</pre>
<h2><span class="mw-headline" id="AWK"><a href="/wiki/Category:AWK" title="Category:AWK">AWK</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=8" title="Edit section: AWK">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="awk highlighted_source">&#160;<br /><span class="co1"># usage: awk -f letters.awk HolyBible.txt</span><br />&#160;<br /><span class="kw2">BEGIN</span> <span class="br0">&#123;</span> <span class="kw3">FS</span>=<span class="st0">&quot;&quot;</span> <span class="br0">&#125;</span><br />      <span class="br0">&#123;</span> <span class="kw1">for</span><span class="br0">&#40;</span>i=<span class="nu0">1</span>;i<span class="sy2">&lt;=</span><span class="kw3">NF</span>;i<span class="sy3">++</span><span class="br0">&#41;</span> m<span class="br0">&#91;</span><span class="re0">$i</span><span class="br0">&#93;</span><span class="sy3">++</span><span class="br0">&#125;</span><br /><span class="kw2">END</span>   <span class="br0">&#123;</span> <span class="kw1">for</span><span class="br0">&#40;</span>i <span class="kw1">in</span> m<span class="br0">&#41;</span> <span class="kw5">printf</span><span class="br0">&#40;</span><span class="st0">&quot;%9d&#160;%-14s<span class="es0">\n</span>&quot;</span>, m<span class="br0">&#91;</span>i<span class="br0">&#93;</span>,i<span class="br0">&#41;</span> <span class="br0">&#125;</span><br />&#160;</pre>
<h2><span class="mw-headline" id="BaCon"><a href="/wiki/Category:BaCon" title="Category:BaCon">BaCon</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=9" title="Edit section: BaCon">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="freebasic highlighted_source">txt$ = LOAD$<span class="br0">&#40;</span><span class="st0">&quot;bible.txt&quot;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="kw1">FOR</span> x = <span class="nu0">97</span> <span class="kw1">TO</span> <span class="nu0">122</span><br />    <span class="kw1">PRINT</span> <span class="kw1">CHR</span>$<span class="br0">&#40;</span>x-<span class="nu0">32</span><span class="br0">&#41;</span>, <span class="st0">&quot; &quot;</span>, <span class="kw1">CHR</span>$<span class="br0">&#40;</span>x<span class="br0">&#41;</span>, <span class="st0">&quot;&#160;: &quot;</span>, COUNT<span class="br0">&#40;</span>txt$, x-<span class="nu0">32</span><span class="br0">&#41;</span>, <span class="st0">&quot; - &quot;</span>, COUNT<span class="br0">&#40;</span>txt$, x<span class="br0">&#41;</span><br /><span class="kw1">NEXT</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>A a&#160;: 17915 - 257815
B b&#160;: 4714 - 44161
C c&#160;: 1698 - 53373
D d&#160;: 8782 - 149313
E e&#160;: 2710 - 409525
F f&#160;: 2386 - 81157
G g&#160;: 6206 - 49096
H h&#160;: 3208 - 279471
I i&#160;: 13302 - 180660
J j&#160;: 6374 - 2515
K k&#160;: 547 - 21745
L l&#160;: 9222 - 120716
M m&#160;: 3056 - 76884
N n&#160;: 1891 - 223166
O o&#160;: 8896 - 234290
P p&#160;: 1877 - 41377
Q q&#160;: 6 - 958
R r&#160;: 7568 - 162761
S s&#160;: 4906 - 185124
T t&#160;: 7763 - 309983
U u&#160;: 333 - 83140
V v&#160;: 107 - 30258
W w&#160;: 2408 - 63079
X x&#160;: 2 - 1476
Y y&#160;: 569 - 58007
Z z&#160;: 904 - 2068
</pre>
<h2><span class="mw-headline" id="BBC_BASIC"><a href="/wiki/Category:BBC_BASIC" title="Category:BBC BASIC">BBC BASIC</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=10" title="Edit section: BBC BASIC">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">      DIM cnt%(255)<br />&#160;<br />      file% = OPENIN(&quot;C:\unixdict.txt&quot;)<br />      IF file%=0 ERROR 100, &quot;Could not open file&quot;<br />&#160;<br />      REPEAT<br />        A$ = GET$#file%<br />        L% = LEN(A$)<br />        IF L% THEN<br />          FOR I% = 1 TO L%<br />            cnt%(ASCMID$(A$,I%)) += 1<br />          NEXT<br />        ENDIF<br />      UNTIL EOF#file%<br />      CLOSE #file%<br />&#160;<br />      FOR c% = &amp;41 TO &amp;5A<br />        PRINT CHR$(c%)CHR$(c%+32) &quot;: &quot; cnt%(c%)+cnt%(c%+32)<br />      NEXT</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>Aa:      16421
Bb:       4115
Cc:       8216
Dd:       5799
Ee:      20144
Ff:       2662
Gg:       4129
Hh:       5208
Ii:      13980
Jj:        430
Kk:       1925
Ll:      10061
Mm:       5828
Nn:      12097
Oo:      12738
Pp:       5516
Qq:        378
Rr:      13436
Ss:      10210
Tt:      12836
Uu:       6489
Vv:       1902
Ww:       1968
Xx:        617
Yy:       3633
Zz:        433
</pre>
<h2><span class="mw-headline" id="Bracmat"><a href="/wiki/Category:Bracmat" title="Category:Bracmat">Bracmat</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=11" title="Edit section: Bracmat">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">(lc=<br />  counts c<br />.     fil$(!arg,r)                        {open file for reading}<br />    &amp; 0:?counts<br />    &amp;   whl<br />      ' ( fil$:?c                         {read a byte}<br />        &amp;     (&#160;!c:(~&lt;A:~&gt;Z|~&lt;a:~&gt;z)<br />              | 0<br />              )<br />            +&#160;!counts<br />         &#160;:&#160;?counts                       {simply add any found letter to the sum}<br />        )<br />    &amp; fil$(,SET,-1)                       {close the file by seeking to impossible file position.}<br />  |&#160;!counts                               {return the sum}<br />);<br />&#160;<br />lc$&quot;valid.bra&quot;                            {example: count letters in Bracmat's validation suite.}<br />&#160;</pre>
<pre class="text highlighted_source">107*A<br />+ 33*B<br />+ 37*C<br />+ 39*D<br />+ 74*E<br />+ 50*F<br />+ 27*G<br />+ 28*H<br />+ 20*I<br />+ 55*J<br />+ 32*K<br />+ 112*L<br />+ 36*M<br />+ 32*N<br />+ 621*O<br />+ 43*P<br />+ 25*R<br />+ 67*S<br />+ 62*T<br />+ 64*U<br />+ 5*V<br />+ 26*W<br />+ 353*X<br />+ 248*Y<br />+ 70*Z<br />+ 2173*a<br />+ 840*b<br />+ 738*c<br />+ 639*d<br />+ 1345*e<br />+ 472*f<br />+ 372*g<br />+ 568*h<br />+ 91*j<br />+ 142*k<br />+ 529*l<br />+ 409*m<br />+ 941*n<br />+ 840*o<br />+ 336*p<br />+ 65*q<br />+ 993*r<br />+ 1018*s<br />+ 2097*t<br />+ 978*u<br />+ 122*v<br />+ 156*w<br />+ 909*x<br />+ 685*y<br />+ 211*z<br />+ 1035*i</pre>
<h2><span class="mw-headline" id="C"><a href="/wiki/Category:C" title="Category:C">C</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=12" title="Edit section: C">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="c highlighted_source"><span class="coMULTI">/* declare array */</span><br /><span class="kw4">int</span> frequency<span class="br0">&#91;</span><span class="nu0">26</span><span class="br0">&#93;</span><span class="sy0">;</span><br /><span class="kw4">int</span> ch<span class="sy0">;</span><br />FILE<span class="sy0">*</span> txt_file <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html"><span class="kw3">fopen</span></a> <span class="br0">&#40;</span><span class="st0">&quot;a_text_file.txt&quot;</span><span class="sy0">,</span> <span class="st0">&quot;rt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br /><span class="coMULTI">/* init the freq table: */</span><br /><span class="kw1">for</span> <span class="br0">&#40;</span>ch <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> ch <span class="sy0">&lt;</span> <span class="nu0">26</span><span class="sy0">;</span> ch<span class="sy0">++</span><span class="br0">&#41;</span><br />    frequency<span class="br0">&#91;</span>ch<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span><br />&#160;<br /><span class="kw1">while</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    ch <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fgetc.html"><span class="kw3">fgetc</span></a><span class="br0">&#40;</span>txt_file<span class="br0">&#41;</span><span class="sy0">;</span><br />    <span class="kw1">if</span> <span class="br0">&#40;</span>ch <span class="sy0">==</span> EOF<span class="br0">&#41;</span> <span class="kw2">break</span><span class="sy0">;</span> <span class="coMULTI">/* end of file or read error.  EOF is typically -1 */</span><br />&#160;<br />    <span class="coMULTI">/* assuming ASCII; &quot;letters&quot; means &quot;a to z&quot; */</span><br />    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="st0">'a'</span> <span class="sy0">&lt;=</span> ch <span class="sy0">&amp;&amp;</span> ch <span class="sy0">&lt;=</span> <span class="st0">'z'</span><span class="br0">&#41;</span>      <span class="coMULTI">/* lower case */</span><br />        frequency<span class="br0">&#91;</span>ch<span class="sy0">-</span><span class="st0">'a'</span><span class="br0">&#93;</span><span class="sy0">++;</span><br />    <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span><span class="st0">'A'</span> <span class="sy0">&lt;=</span> ch <span class="sy0">&amp;&amp;</span> ch <span class="sy0">&lt;=</span> <span class="st0">'Z'</span><span class="br0">&#41;</span> <span class="coMULTI">/* upper case */</span><br />        frequency<span class="br0">&#91;</span>ch<span class="sy0">-</span><span class="st0">'A'</span><span class="br0">&#93;</span><span class="sy0">++;</span><br /><span class="br0">&#125;</span></pre>
<h2><span class="mw-headline" id="C.23"><a href="/wiki/Category:C_sharp" title="Category:C sharp">C#</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=13" title="Edit section: C#">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="csharp highlighted_source"><span class="kw1">using</span> <span class="co3">System</span><span class="sy0">;</span><br /><span class="kw1">using</span> <span class="co3">System.Collections.Generic</span><span class="sy0">;</span><br /><span class="kw1">using</span> <span class="co3">System.IO</span><span class="sy0">;</span><br /><span class="kw1">using</span> <span class="co3">System.Linq</span><span class="sy0">;</span><br />&#160;<br /><span class="kw4">class</span> Program<br /><span class="br0">&#123;</span><br />    <span class="kw1">static</span> SortedDictionary<span class="sy0">&lt;</span>TItem, <span class="kw4">int</span><span class="sy0">&gt;</span> GetFrequencies<span class="sy0">&lt;</span>TItem<span class="sy0">&gt;</span><span class="br0">&#40;</span>IEnumerable<span class="sy0">&lt;</span>TItem<span class="sy0">&gt;</span> items<span class="br0">&#41;</span><br />    <span class="br0">&#123;</span><br />        <span class="kw1">var</span> dictionary <span class="sy0">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span class="kw3">new</span></a> SortedDictionary<span class="sy0">&lt;</span>TItem, <span class="kw4">int</span><span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />        <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw1">var</span> item <span class="kw1">in</span> items<span class="br0">&#41;</span><br />        <span class="br0">&#123;</span><br />            <span class="kw1">if</span> <span class="br0">&#40;</span>dictionary<span class="sy0">.</span><span class="me1">ContainsKey</span><span class="br0">&#40;</span>item<span class="br0">&#41;</span><span class="br0">&#41;</span><br />            <span class="br0">&#123;</span><br />                dictionary<span class="br0">&#91;</span>item<span class="br0">&#93;</span><span class="sy0">++;</span><br />            <span class="br0">&#125;</span><br />            <span class="kw1">else</span><br />            <span class="br0">&#123;</span><br />                dictionary<span class="br0">&#91;</span>item<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span><br />            <span class="br0">&#125;</span><br />        <span class="br0">&#125;</span><br />        <span class="kw1">return</span> dictionary<span class="sy0">;</span><br />    <span class="br0">&#125;</span><br />&#160;<br />    <span class="kw1">static</span> <span class="kw4">void</span> Main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> arguments<span class="br0">&#41;</span><br />    <span class="br0">&#123;</span><br />        <span class="kw1">var</span> file <span class="sy0">=</span> arguments<span class="sy0">.</span><span class="me1">FirstOrDefault</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />        <span class="kw1">if</span> <span class="br0">&#40;</span>File<span class="sy0">.</span><span class="me1">Exists</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="br0">&#41;</span><br />        <span class="br0">&#123;</span><br />            <span class="kw1">var</span> text <span class="sy0">=</span> File<span class="sy0">.</span><span class="me1">ReadAllText</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span><span class="sy0">;</span><br />            <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw1">var</span> entry <span class="kw1">in</span> GetFrequencies<span class="br0">&#40;</span>text<span class="br0">&#41;</span><span class="br0">&#41;</span><br />            <span class="br0">&#123;</span><br />                Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span><span class="st0">&quot;{0}: {1}&quot;</span>, entry<span class="sy0">.</span><span class="me1">Key</span>, entry<span class="sy0">.</span><span class="kw1">Value</span><span class="br0">&#41;</span><span class="sy0">;</span><br />            <span class="br0">&#125;</span><br />        <span class="br0">&#125;</span><br />    <span class="br0">&#125;</span><br /><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>&#160;: 1
!: 1
,: 1
H: 1
d: 1
e: 1
l: 3
o: 2
r: 1
w: 1</pre>
<p>Declarative approach:
</p>
<pre class="csharp highlighted_source">&#160;<br /><span class="kw1">var</span> freq <span class="sy0">=</span>  <span class="kw1">from</span> c <span class="kw1">in</span> str<br />            <span class="kw1">where</span> <span class="kw4">char</span><span class="sy0">.</span><span class="me1">IsLetter</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span><br />            orderby c<br />            <span class="kw1">group</span> c <span class="kw1">by</span> c <span class="kw1">into</span> g<br />            <span class="kw1">select</span> g<span class="sy0">.</span><span class="me1">Key</span> <span class="sy0">+</span> <span class="st0">&quot;:&quot;</span> <span class="sy0">+</span> g<span class="sy0">.</span><span class="me1">Count</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br /><span class="kw1">foreach</span><span class="br0">&#40;</span><span class="kw1">var</span> g <span class="kw1">in</span> freq<span class="br0">&#41;</span><br />    Console<span class="sy0">.</span><span class="me1">WriteLine</span><span class="br0">&#40;</span>g<span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;</pre>
<pre>C:2
I:1
K:1
L:2
W:1
a:4
...
y:2
</pre>
<h2><span class="mw-headline" id="C.2B.2B"><a href="/wiki/Category:C%2B%2B" title="Category:C++">C++</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=14" title="Edit section: C++">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="cpp highlighted_source"><span class="co2">#include &lt;fstream&gt;</span><br /><span class="co2">#include &lt;iostream&gt;</span><br />&#160;<br /><span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span><br /><span class="br0">&#123;</span><br />	std<span class="sy4">::</span><span class="me2">ifstream</span> input<span class="br0">&#40;</span><span class="st0">&quot;filename.txt&quot;</span>, std<span class="sy4">::</span><span class="me2">ios_base</span><span class="sy4">::</span><span class="me2">binary</span><span class="br0">&#41;</span><span class="sy4">;</span><br />	<span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>input<span class="br0">&#41;</span><br />	<span class="br0">&#123;</span><br />		std<span class="sy4">::</span><span class="kw3">cerr</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;error: can't open file<span class="es1">\n</span>&quot;</span><span class="sy4">;</span><br />		<span class="kw1">return</span> <span class="sy2">-</span><span class="nu0">1</span><span class="sy4">;</span><br />	<span class="br0">&#125;</span><br />&#160;<br />	<span class="kw4">size_t</span> count<span class="br0">&#91;</span><span class="nu0">256</span><span class="br0">&#93;</span><span class="sy4">;</span><br />	std<span class="sy4">::</span><span class="me2">fill_n</span><span class="br0">&#40;</span>count, <span class="nu0">256</span>, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span><br />&#160;<br />	<span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">char</span> c<span class="sy4">;</span> input.<span class="me1">get</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span><span class="sy4">;</span> <span class="sy2">++</span>count<span class="br0">&#91;</span><span class="kw4">uint8_t</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="co1">// process input file</span><br />		<span class="sy4">;</span> <span class="co1">// empty loop body</span><br />&#160;<br />	<span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">size_t</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">256</span><span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">&#41;</span><br />	<span class="br0">&#123;</span><br />		<span class="kw1">if</span> <span class="br0">&#40;</span>count<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy3">&amp;&amp;</span> <span class="kw3">isgraph</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="co1">// non-zero counts of printable characters</span><br />		<span class="br0">&#123;</span><br />			std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="kw4">char</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; = &quot;</span> <span class="sy1">&lt;&lt;</span> count<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">'<span class="es1">\n</span>'</span><span class="sy4">;</span><br />		<span class="br0">&#125;</span><br />	<span class="br0">&#125;</span><br /><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div> when file contains "Hello, world!" (without quotes):</dt></dl>
<pre>! = 1
, = 1
H = 1
d = 1
e = 1
l = 3
o = 2
r = 1
w = 1
</pre>
<h2><span class="mw-headline" id="Common_Lisp"><a href="/wiki/Category:Common_Lisp" title="Category:Common Lisp">Common Lisp</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=15" title="Edit section: Common Lisp">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="lisp highlighted_source"><span class="br0">&#40;</span><span class="kw1">defun</span> letter-freq <span class="br0">&#40;</span>file<span class="br0">&#41;</span><br />  <span class="br0">&#40;</span>with-open-file <span class="br0">&#40;</span>stream file<span class="br0">&#41;</span><br />    <span class="br0">&#40;</span><span class="kw1">let</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>str <span class="br0">&#40;</span>make-string <span class="br0">&#40;</span>file-<span class="kw1">length</span> stream<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />	  <span class="br0">&#40;</span>arr <span class="br0">&#40;</span>make-<span class="kw1">array</span> <span class="nu0">256</span> <span class="sy0">:</span><span class="me1">element-type</span> '<span class="kw1">integer</span> <span class="sy0">:</span><span class="me1">initial-element</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />      <span class="br0">&#40;</span>read-sequence str stream<span class="br0">&#41;</span><br />      <span class="br0">&#40;</span>loop for c across str <span class="kw1">do</span> <span class="br0">&#40;</span>incf <span class="br0">&#40;</span><span class="kw1">aref</span> arr <span class="br0">&#40;</span>char-code c<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />      <span class="br0">&#40;</span>loop for c from <span class="nu0">32</span> to <span class="nu0">126</span> for i from <span class="nu0">1</span> <span class="kw1">do</span><br />	    <span class="br0">&#40;</span>format t <span class="st0">&quot;~c: ~d~a&quot;</span><br />		    <span class="br0">&#40;</span>code-char c<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">aref</span> arr c<span class="br0">&#41;</span><br />		    <span class="br0">&#40;</span><span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">zerop</span> <span class="br0">&#40;</span><span class="kw1">rem</span> i <span class="nu0">8</span><span class="br0">&#41;</span><span class="br0">&#41;</span> #\newline #\tab<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span>letter-freq <span class="st0">&quot;test.lisp&quot;</span><span class="br0">&#41;</span></pre>
<h2><span class="mw-headline" id="Clojure"><a href="/wiki/Category:Clojure" title="Category:Clojure">Clojure</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=16" title="Edit section: Clojure">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="clojure highlighted_source"><span class="br0">&#40;</span>println <span class="br0">&#40;</span><span class="kw1">sort-by</span> second <span class="sy0">&gt;</span> <br />			<span class="br0">&#40;</span>frequencies <span class="br0">&#40;</span><span class="kw1">map</span> #<span class="br0">&#40;</span>java<span class="sy0">.</span>lang<span class="sy0">.</span>Character<span class="sy0">/</span>toUpperCase <span class="sy0">%</span><span class="br0">&#41;</span><br />					  <span class="br0">&#40;</span><span class="kw1">filter</span> #<span class="br0">&#40;</span>java<span class="sy0">.</span>lang<span class="sy0">.</span>Character<span class="sy0">/</span>isLetter <span class="sy0">%</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>slurp <span class="st0">&quot;text.txt&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span></pre>
<h2><span class="mw-headline" id="Component_Pascal"><a href="/wiki/Category:Component_Pascal" title="Category:Component Pascal">Component Pascal</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=17" title="Edit section: Component Pascal">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>BlackBox Component Builder
</p>
<pre class="oberon2 highlighted_source">&#160;<br /><span class="kw1">MODULE</span> LetterFrecuency;<br /><span class="kw1">IMPORT</span> Files<span class="sy0">,</span>StdLog<span class="sy0">,</span>Strings;<br />&#160;<br /><span class="kw1">PROCEDURE</span> Do<span class="sy0">*</span>;<br /><span class="kw1">VAR</span><br />	loc<span class="sy0">:</span> Files.<span class="me1">Locator</span>;<br />	fd<span class="sy0">:</span> Files.<span class="me1">File</span>;<br />	rd<span class="sy0">:</span> Files.<span class="me1">Reader</span>;<br />	x<span class="sy0">:</span> BYTE;<br />	frecuency<span class="sy0">:</span> <span class="kw1">ARRAY</span> <span class="nu0">26</span> <span class="kw1">OF</span> <span class="kw4">LONGINT</span>;<br />	c<span class="sy0">:</span> <span class="kw4">CHAR</span>;<br />	i<span class="sy0">:</span> <span class="kw4">INTEGER</span>;<br /><span class="kw1">BEGIN</span><br />	loc <span class="sy0">:=</span> Files.<span class="me1">dir</span>.<span class="me1">This</span><span class="br0">&#40;</span><span class="st0">&quot;BBTest/Mod&quot;</span><span class="br0">&#41;</span>;<br />	fd <span class="sy0">:=</span> Files.<span class="me1">dir</span>.<span class="me1">Old</span><span class="br0">&#40;</span>loc<span class="sy0">,</span><span class="st0">&quot;LetterFrecuency.odc&quot;</span><span class="sy0">,</span><span class="kw2">FALSE</span><span class="br0">&#41;</span>;<br />	rd <span class="sy0">:=</span> fd.<span class="me1">NewReader</span><span class="br0">&#40;</span><span class="kw2">NIL</span><span class="br0">&#41;</span>;<br />&#160;<br />	<span class="coMULTI">(* init the frecuency array *)</span><br />	<span class="kw1">FOR</span> i <span class="sy0">:=</span> <span class="nu0">0</span> <span class="kw1">TO</span> <span class="kw3">LEN</span><span class="br0">&#40;</span>frecuency<span class="br0">&#41;</span> <span class="sy0">-</span> <span class="nu0">1</span> <span class="kw1">DO</span> frecuency<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">:=</span> <span class="nu0">0</span> <span class="kw1">END</span>;<br />&#160;<br />	<span class="coMULTI">(* collect frecuencies *)</span><br />	<span class="kw1">WHILE</span> <span class="sy0">~</span>rd.<span class="me1">eof</span> <span class="kw1">DO</span><br />		rd.<span class="me1">ReadByte</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span>;c <span class="sy0">:=</span> <span class="kw3">CAP</span><span class="br0">&#40;</span><span class="kw3">CHR</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />		<span class="coMULTI">(* convert vowels with diacritics *)</span><br />		<span class="kw1">CASE</span> <span class="kw3">ORD</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span> <span class="kw1">OF</span><br />			 <span class="nu0">193</span><span class="sy0">:</span> c <span class="sy0">:=</span> <span class="st_h">'A'</span>;<br />			|<span class="nu0">201</span><span class="sy0">:</span> c <span class="sy0">:=</span> <span class="st_h">'E'</span>;<br />			|<span class="nu0">205</span><span class="sy0">:</span> c <span class="sy0">:=</span> <span class="st_h">'I'</span>;<br />			|<span class="nu0">211</span><span class="sy0">:</span> c <span class="sy0">:=</span> <span class="st_h">'O'</span>;<br />			|<span class="nu0">218</span><span class="sy0">:</span> c <span class="sy0">:=</span> <span class="st_h">'U'</span>;<br />			<span class="kw1">ELSE</span><br />		<span class="kw1">END</span>;<br />		<span class="kw1">IF</span> <span class="br0">&#40;</span>c &gt;<span class="sy0">=</span> <span class="st_h">'A'</span><span class="br0">&#41;</span> &amp; <span class="br0">&#40;</span>c &lt;<span class="sy0">=</span> <span class="st_h">'Z'</span><span class="br0">&#41;</span> <span class="kw1">THEN</span><br />			<span class="kw3">INC</span><span class="br0">&#40;</span>frecuency<span class="br0">&#91;</span><span class="kw3">ORD</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw3">ORD</span><span class="br0">&#40;</span><span class="st_h">'A'</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />		<span class="kw1">END</span><br />	<span class="kw1">END</span>;<br />&#160;<br />	<span class="coMULTI">(* show data *)</span><br />	<span class="kw1">FOR</span> i <span class="sy0">:=</span> <span class="nu0">0</span> <span class="kw1">TO</span> <span class="kw3">LEN</span><span class="br0">&#40;</span>frecuency<span class="br0">&#41;</span> <span class="sy0">-</span> <span class="nu0">1</span> <span class="kw1">DO</span><br />		StdLog.<span class="me1">Char</span><span class="br0">&#40;</span><span class="kw3">CHR</span><span class="br0">&#40;</span>i <span class="sy0">+</span> <span class="kw3">ORD</span><span class="br0">&#40;</span><span class="st_h">'A'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;StdLog.<span class="me1">String</span><span class="br0">&#40;</span><span class="st0">&quot;:&gt; &quot;</span><span class="br0">&#41;</span>;StdLog.<span class="me1">Int</span><span class="br0">&#40;</span>frecuency<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />		StdLog.<span class="me1">Ln</span><br />	<span class="kw1">END</span><br /><span class="kw1">END</span> Do;<br /><span class="kw1">END</span> LetterFrecuency.<br />&#160;</pre>
<p>Execute: ^Q LetterFrecuency.Do<br />
</p>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>A:&gt;  28
B:&gt;  7
C:&gt;  100
D:&gt;  94
E:&gt;  168
F:&gt;  30
G:&gt;  10
H:&gt;  11
I:&gt;  49
J:&gt;  0
K:&gt;  1
L:&gt;  67
M:&gt;  25
N:&gt;  57
O:&gt;  81
P:&gt;  3
Q:&gt;  0
R:&gt;  91
S:&gt;  90
T:&gt;  94
U:&gt;  32
V:&gt;  14
W:&gt;  15
X:&gt;  15
Y:&gt;  17
Z:&gt;  3
</pre>
<h2><span class="mw-headline" id="D"><a href="/wiki/Category:D" title="Category:D">D</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=18" title="Edit section: D">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="d highlighted_source"><span class="kw4">void</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    <span class="kw2">import</span> std.<span class="me1">stdio</span><span class="sy0">,</span> std.<span class="me1">ascii</span><span class="sy0">,</span> std.<span class="me1">algorithm</span><span class="sy0">,</span> std.<span class="me1">range</span><span class="sy0">;</span><br />&#160;<br />    <span class="kw4">uint</span><span class="br0">&#91;</span><span class="nu0">26</span><span class="br0">&#93;</span> frequency<span class="sy0">;</span><br />&#160;<br />    <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw4">const</span> buffer<span class="sy0">;</span> <span class="st0">&quot;unixdict.txt&quot;</span>.<span class="me1">File</span>.<span class="me1">byChunk</span><span class="br0">&#40;</span><span class="nu0">2</span> <span class="sy0">^^</span> <span class="nu0">15</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />        <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw4">immutable</span> c<span class="sy0">;</span> buffer.<span class="me1">filter</span><span class="sy0">!</span>isAlpha<span class="br0">&#41;</span><br />            frequency<span class="br0">&#91;</span>c.<span class="me1">toLower</span> <span class="sy0">-</span> <span class="st0">'a'</span><span class="br0">&#93;</span><span class="sy0">++;</span><br />&#160;<br />    writefln<span class="br0">&#40;</span><span class="st0">&quot;%(%(%s,&#160;%),<span class="es1">\n</span>%)&quot;</span><span class="sy0">,</span> frequency<span class="br0">&#91;</span><span class="br0">&#93;</span>.<span class="me1">chunks</span><span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br /><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>16421, 4115, 8216, 5799, 20144, 2662, 4129, 5208, 13980, 430,
1925, 10061, 5828, 12097, 12738, 5516, 378, 13436, 10210, 12836,
6489, 1902, 1968, 617, 3633, 433</pre>
<h2><span class="mw-headline" id="EchoLisp"><a href="/wiki/Category:EchoLisp" title="Category:EchoLisp">EchoLisp</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=19" title="Edit section: EchoLisp">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>We use a property list - plist for short - which is a hash table, to store the pairs ( letter . count) .
</p>
<pre class="lisp highlighted_source">&#160;<br /><span class="co1">;; bump count when letter added</span><br /><span class="br0">&#40;</span>define <span class="br0">&#40;</span>hash-counter <span class="kw1">hash</span> key <span class="br0">&#41;</span><br />		<span class="co1">;; (set! key (string-downcase key)) - if ignore case wanted</span><br />		<span class="br0">&#40;</span><span class="kw1">putprop</span> <span class="kw1">hash</span> <span class="br0">&#40;</span><span class="nu0">1</span>+ <span class="br0">&#40;</span><span class="kw1">or</span> <span class="br0">&#40;</span>getprop <span class="kw1">hash</span> key<span class="br0">&#41;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="br0">&#41;</span> key<span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="co1">;;  apply to exploded string</span><br /><span class="co1">;;  and sort result</span><br /><span class="br0">&#40;</span>define <span class="br0">&#40;</span>hash-compare a b<span class="br0">&#41;</span> <span class="br0">&#40;</span> <span class="sy0">&lt;</span> <span class="br0">&#40;</span>first a<span class="br0">&#41;</span> <span class="br0">&#40;</span>first b<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br /><span class="br0">&#40;</span>define <span class="br0">&#40;</span>count-letters <span class="kw1">hash</span> string<span class="br0">&#41;</span><br />		<span class="br0">&#40;</span>map <span class="br0">&#40;</span>curry hash-counter <span class="kw1">hash</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>string-<span class="sy0">&gt;</span><span class="kw1">list</span> string<span class="br0">&#41;</span><span class="br0">&#41;</span><br />		<span class="br0">&#40;</span>list-sort hash-compare <span class="br0">&#40;</span>symbol-<span class="kw1">plist</span> <span class="kw1">hash</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre class="lisp highlighted_source">&#160;<br /><span class="br0">&#40;</span>define <span class="br0">&#40;</span>file-stats file string<span class="br0">&#41;</span> <br />	<span class="br0">&#40;</span>set-<span class="kw1">plist</span><span class="sy0">!</span> 'file-stats <span class="kw1">null</span><span class="br0">&#41;</span> <span class="co1">; reset counters</span><br />	<span class="br0">&#40;</span>writeln <span class="br0">&#40;</span>count-letters 'file-stats string<span class="br0">&#41;</span><span class="br0">&#41;</span><br />	<span class="br0">&#40;</span>writeln <span class="st0">&quot;Total letters:&quot;</span> <span class="br0">&#40;</span>string-<span class="kw1">length</span> string<span class="br0">&#41;</span><span class="br0">&#41;</span><br />	<span class="br0">&#40;</span>writeln <span class="st0">&quot;Total lines:&quot;</span> <span class="br0">&#40;</span>getprop 'file-stats <span class="st0">&quot;#<span class="es0">\\</span>newline&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="co1">; frequency for 'help.html' file</span><br /><span class="br0">&#40;</span>file-<span class="sy0">&gt;</span>string file-stats<span class="br0">&#41;</span> <span class="co1">; browser 'open' dialog</span><br />&#160;<br />➛ help<span class="sy0">.</span>html -<span class="sy0">&gt;</span> string<br />➛ <span class="br0">&#40;</span><span class="br0">&#40;</span> <span class="nu0">28918</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">!</span> <span class="nu0">138</span><span class="br0">&#41;</span> <span class="br0">&#40;</span># <span class="nu0">1035</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>#\newline <span class="nu0">4539</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>#\tab <span class="nu0">409</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>$ <span class="nu0">7</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">%</span> <span class="nu0">24</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">&amp;</span> <span class="nu0">136</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>' <span class="nu0">1643</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3577</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="nu0">3583</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>* <span class="nu0">233</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>+ <span class="nu0">303</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">,</span> <span class="nu0">599</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>- <span class="nu0">3164</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">.</span> <span class="nu0">1454</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>/ <span class="nu0">5388</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">0</span> <span class="nu0">1567</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">1</span> <span class="nu0">1769</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">2</span> <span class="nu0">1258</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">3</span> <span class="nu0">857</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">4</span> <span class="nu0">1872</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">5</span> <span class="nu0">453</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">6</span> <span class="nu0">581</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">7</span> <span class="nu0">344</span><span class="br0">&#41;</span> <br /> <span class="br0">&#40;</span><span class="nu0">8</span> <span class="nu0">337</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="nu0">9</span> <span class="nu0">411</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">:</span> <span class="nu0">1235</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="co1">; 647) (&lt; 9951) (= 1834) (&gt; 10255) (? 392) (@ 11) (A 166) (B 92) (C 144) (D 72) (E 224)</span><br /> <span class="br0">&#40;</span>F <span class="nu0">52</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>G <span class="nu0">35</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>H <span class="nu0">42</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>I <span class="nu0">193</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>J <span class="nu0">31</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>K <span class="nu0">36</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">L</span> <span class="nu0">196</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>M <span class="nu0">82</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>N <span class="nu0">94</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>O <span class="nu0">132</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>P <span class="nu0">192</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>Q <span class="nu0">27</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>R <span class="nu0">56</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>S <span class="nu0">220</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>T <span class="nu0">226</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>U <span class="nu0">37</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>V <span class="nu0">51</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>W <span class="nu0">28</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>X <span class="nu0">6</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>Y <span class="nu0">38</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>Z <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span> <span class="nu0">237</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>\ <span class="nu0">12</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#93;</span> <span class="nu0">215</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">^</span> <span class="nu0">28</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>_ <span class="nu0">107</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>` <span class="nu0">7</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>a <span class="nu0">8420</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>b <span class="nu0">4437</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>c <span class="nu0">3879</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>d <span class="nu0">4201</span><span class="br0">&#41;</span> <br /> <span class="br0">&#40;</span>e <span class="nu0">11905</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>f <span class="nu0">2989</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>g <span class="nu0">2068</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>h <span class="nu0">3856</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>i <span class="nu0">11313</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>j <span class="nu0">334</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>k <span class="nu0">653</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">l</span> <span class="nu0">5748</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>m <span class="nu0">3048</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>n <span class="nu0">7020</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>o <span class="nu0">7207</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>p <span class="nu0">3585</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>q <span class="nu0">249</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>r <span class="nu0">8312</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>s <span class="nu0">8284</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>t <span class="nu0">8704</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>u <span class="nu0">3833</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>v <span class="nu0">1135</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>w <span class="nu0">861</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>x <span class="nu0">1172</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>y <span class="nu0">1451</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>z <span class="nu0">268</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#123;</span> <span class="nu0">123</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">|</span> <span class="nu0">62</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="br0">&#125;</span> <span class="nu0">123</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>~ <span class="nu0">7</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>§ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>© <span class="nu0">1</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>«&#160;<span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>» <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>É <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>à <span class="nu0">18</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>â <span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ç <span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>è <span class="nu0">6</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>é <span class="nu0">53</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>î <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ö <span class="nu0">9</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>û <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>œ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ε <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>λ <span class="nu0">12</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>μ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ο <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ς <span class="nu0">1</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>τ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>а <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>д <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>е <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>з <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>л <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>м <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>н <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>я <span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>ἄ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>— <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>“ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>” <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>… <span class="nu0">184</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>→ <span class="nu0">465</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>∅ <span class="nu0">57</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>∈ <span class="nu0">4</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>∏ <span class="nu0">1</span><span class="br0">&#41;</span><br /> <span class="br0">&#40;</span>∑ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>∘ <span class="nu0">6</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>√ <span class="nu0">4</span><span class="br0">&#41;</span><span class="br0">&#40;</span>∞ <span class="nu0">12</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>∫ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⌚ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⌛ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⏳ <span class="nu0">4</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>☕ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♠ <span class="nu0">7</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♡ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♢ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♣ <span class="nu0">6</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♤ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♥ <span class="nu0">8</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>♦ <span class="nu0">8</span><span class="br0">&#41;</span> <br /> <span class="br0">&#40;</span>♧ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⚁ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⚃ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⚪ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⛔ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>✋ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❄ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❅ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❆ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❇ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❈ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❉ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❊ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❋ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❌ <span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❍ <span class="nu0">1</span><span class="br0">&#41;</span> <br /> <span class="br0">&#40;</span>❎ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>❗ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>➛ <span class="nu0">900</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>➰ <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>⭕ <span class="nu0">2</span><span class="br0">&#41;</span> <span class="sy0">...</span> <span class="br0">&#41;</span>    <br />➛ Total letters<span class="sy0">:</span>     <span class="nu0">212631</span>    <br />➛ Total lines<span class="sy0">:</span>     <span class="nu0">4539</span>     <br />&#160;</pre>
<h2><span class="mw-headline" id="Eiffel"><a href="/wiki/Category:Eiffel" title="Category:Eiffel">Eiffel</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=20" title="Edit section: Eiffel">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="eiffel highlighted_source"><span class="kw1">class</span><br />	APPLICATION<br />&#160;<br /><span class="kw2">create</span><br />	make<br />&#160;<br /><span class="kw1">feature</span> <span class="br0">&#123;</span><a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">NONE</span></a><span class="br0">&#125;</span> <span class="co1">-- Initialization</span><br />&#160;<br />	make<br />			<span class="co1">-- Read from the file and print frequencies.</span><br />		<span class="kw2">local</span><br />			file<span class="sy0">:</span> <a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+plain_text_file&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">PLAIN_TEXT_FILE</span></a><br />		<span class="kw2">do</span><br />			<span class="kw2">create</span> file.<span class="me1">make_open_read</span><span class="br0">&#40;</span><span class="st0">&quot;input.txt&quot;</span><span class="br0">&#41;</span><br />			file.<span class="me1">read_stream</span><span class="br0">&#40;</span>file.<span class="me1">count</span><span class="br0">&#41;</span><br />			file.<span class="me1">close</span><br />			across get_frequencies<span class="br0">&#40;</span>file.<span class="me1">last_string</span><span class="br0">&#41;</span> <span class="kw2">as</span> f <span class="kw2">loop</span><br />				print<span class="br0">&#40;</span>f.<span class="me1">key</span>.<span class="me1">out</span> <span class="sy0">+</span> <span class="st0">&quot;: &quot;</span> <span class="sy0">+</span> f.<span class="me1">item</span>.<span class="me1">out</span> <span class="sy0">+</span> <span class="st0">&quot;<span class="es0">%N</span>&quot;</span><span class="br0">&#41;</span><br />			<span class="kw2">end</span><br />		<span class="kw2">end</span><br />&#160;<br /><span class="kw1">feature</span> <span class="co1">-- Access</span><br />&#160;<br />	get_frequencies <span class="br0">&#40;</span>s<span class="sy0">:</span> <a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">STRING</span></a><span class="br0">&#41;</span><span class="sy0">:</span> <a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+hash_table&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">HASH_TABLE</span></a><span class="br0">&#91;</span><a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">INTEGER</span></a>, <a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+character&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">CHARACTER</span></a><span class="br0">&#93;</span><br />			<span class="co1">-- Hash table of counts for alphabetic characters in `s'.</span><br />		<span class="kw2">local</span><br />			char<span class="sy0">:</span> <a href="http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+character&amp;btnI=I%27m+Feeling+Lucky"><span class="kw4">CHARACTER</span></a><br />		<span class="kw2">do</span><br />			<span class="kw2">create</span> <span class="kw3">Result</span>.<span class="me1">make</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />			across s.<span class="me1">area</span> <span class="kw2">as</span> st <span class="kw2">loop</span><br />				char <span class="sy0">:=</span> st.<span class="me1">item</span><br />				<span class="kw2">if</span> char.<span class="me1">is_alpha</span> <span class="kw2">then</span><br />					<span class="kw2">if</span> <span class="kw3">Result</span>.<span class="me1">has</span><span class="br0">&#40;</span>char<span class="br0">&#41;</span> <span class="kw2">then</span><br />						<span class="kw3">Result</span>.<span class="me1">force</span><span class="br0">&#40;</span><span class="kw3">Result</span>.<span class="me1">at</span><span class="br0">&#40;</span>char<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span>, char<span class="br0">&#41;</span><br />					<span class="kw2">else</span><br />						<span class="kw3">Result</span>.<span class="me1">put</span> <span class="br0">&#40;</span><span class="nu0">1</span>, char<span class="br0">&#41;</span><br />					<span class="kw2">end</span><br />				<span class="kw2">end</span><br />			<span class="kw2">end</span><br />		<span class="kw2">end</span><br /><span class="kw2">end</span></pre>
<div>
<dl><dt>Output:</div> when file contains "Hello, Eiffel world!":</dt></dl>
<pre>H: 1
e: 2
l: 4
o: 2
E: 1
i: 1
f: 2
w: 1
r: 1
d: 1</pre>
<h2><span class="mw-headline" id="Elixir"><a href="/wiki/Category:Elixir" title="Category:Elixir">Elixir</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=21" title="Edit section: Elixir">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">file = hd(System.argv)<br />&#160;<br />File.read!(file)<br />|&gt; String.upcase<br />|&gt; String.graphemes<br />|&gt; Enum.filter(fn c -&gt; c =~ ~r/[A-Z]/ end)<br />|&gt; Enum.reduce(Map.new, fn c,acc -&gt; Map.update(acc, c, 1, &amp;(&amp;1+1)) end)<br />|&gt; Enum.sort_by(fn {_k,v} -&gt; -v end)<br />|&gt; Enum.each(fn {k,v} -&gt; IO.puts &quot;#{k}  #{v}&quot; end)</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>C:\Elixir&gt;elixir letterfrequency.exs \work\unixdict.txt
E  20144
A  16421
I  13980
R  13436
T  12836
O  12738
N  12097
S  10210
L  10061
C  8216
U  6489
M  5828
D  5799
P  5516
H  5208
G  4129
B  4115
Y  3633
F  2662
W  1968
K  1925
V  1902
X  617
Z  433
J  430
Q  378
</pre>
<h2><span class="mw-headline" id="Erlang"><a href="/wiki/Category:Erlang" title="Category:Erlang">Erlang</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=22" title="Edit section: Erlang">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="erlang highlighted_source"><span class="co1">%% Implemented by Arjun Sunel</span><br /><span class="sy3">-</span><span class="re2">module</span><span class="br0">&#40;</span>letter_frequency<span class="br0">&#41;</span><span class="sy1">.</span><br /><span class="sy3">-</span><span class="re2">export</span><span class="br0">&#40;</span><span class="br0">&#91;</span>main<span class="sy3">/</span><span class="nu0">0</span><span class="sy1">,</span> letter_freq<span class="sy3">/</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">.</span><br /><span class="re3">main</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">-&gt;</span><br />	<span class="kw1">case</span>  <a href="http://erlang.org/doc/man/file.html"><span class="kw5">file</span></a>:<span class="re3">read_file</span><span class="br0">&#40;</span><span class="st0">&quot;file.txt&quot;</span><span class="br0">&#41;</span> <span class="kw1">of</span><br />		<span class="br0">&#123;</span>ok<span class="sy1">,</span> <span class="re5">FileData</span><span class="br0">&#125;</span> <span class="sy1">-&gt;</span><br />			<span class="re3">letter_freq</span><span class="br0">&#40;</span><span class="kw3">binary_to_list</span><span class="br0">&#40;</span><span class="re5">FileData</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy1">;</span><br />		<span class="re5">_FileNotExist</span> <span class="sy1">-&gt;</span><br />			<a href="http://erlang.org/doc/man/io.html"><span class="kw5">io</span></a>:<span class="re3">format</span><span class="br0">&#40;</span><span class="st0">&quot;File do not exist~n&quot;</span><span class="br0">&#41;</span><br />	<span class="kw1">end</span><span class="sy1">.</span><br />&#160;<br /><span class="re3">letter_freq</span><span class="br0">&#40;</span><span class="re5">Data</span><span class="br0">&#41;</span> <span class="sy1">-&gt;</span><br />	<a href="http://erlang.org/doc/man/lists.html"><span class="kw5">lists</span></a>:<span class="re3">foreach</span><span class="br0">&#40;</span><span class="kw1">fun</span><span class="br0">&#40;</span><span class="re5">Char</span><span class="br0">&#41;</span> <span class="sy1">-&gt;</span><br />					<span class="re5">LetterCount</span> <span class="sy3">=</span> <a href="http://erlang.org/doc/man/lists.html"><span class="kw5">lists</span></a>:<span class="re3">foldl</span><span class="br0">&#40;</span><span class="kw1">fun</span><span class="br0">&#40;</span><span class="re5">Element</span><span class="sy1">,</span> <span class="re5">Count</span><span class="br0">&#41;</span> <span class="sy1">-&gt;</span><br />											<span class="kw1">case</span> <span class="re5">Element</span> <span class="sy3">=:=</span> <span class="re5">Char</span> <span class="kw1">of</span><br />												true <span class="sy1">-&gt;</span><br />													<span class="re5">Count</span><span class="sy3">+</span><span class="nu0">1</span><span class="sy1">;</span><br />												false <span class="sy1">-&gt;</span><br />													<span class="re5">Count</span><br />											<span class="kw1">end</span>		<br />										<span class="kw1">end</span><span class="sy1">,</span> <span class="nu0">0</span><span class="sy1">,</span> <span class="re5">Data</span><span class="br0">&#41;</span><span class="sy1">,</span><br />&#160;<br />					<span class="kw1">case</span> <span class="re5">LetterCount</span> <span class="sy3">&gt;</span><span class="nu0">0</span> <span class="kw1">of</span><br />						true <span class="sy1">-&gt;</span>					<br />							<a href="http://erlang.org/doc/man/io.html"><span class="kw5">io</span></a>:<span class="re3">format</span><span class="br0">&#40;</span><span class="st0">&quot;~p	:	~p~n&quot;</span><span class="sy1">,</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="re5">Char</span><span class="br0">&#93;</span><span class="sy1">,</span> <span class="re5">LetterCount</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">;</span><br />						false <span class="sy1">-&gt;</span><br />							<a href="http://erlang.org/doc/man/io.html"><span class="kw5">io</span></a>:<span class="re3">format</span><span class="br0">&#40;</span><span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><br />					<span class="kw1">end</span>		<br />				<span class="kw1">end</span><span class="sy1">,</span>  <a href="http://erlang.org/doc/man/lists.html"><span class="kw5">lists</span></a>:<span class="re3">seq</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy1">,</span> <span class="nu0">222</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy1">.</span>															<br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>&quot;\n&quot;   &#160;:       5
&quot; &quot;    &#160;:       4
&quot;,&quot;    &#160;:       1
&quot;.&quot;    &#160;:       22
&quot;:&quot;    &#160;:       3
&quot;M&quot;    &#160;:       1
&quot;a&quot;    &#160;:       2
&quot;e&quot;    &#160;:       2
&quot;i&quot;    &#160;:       1
&quot;j&quot;    &#160;:       1
&quot;l&quot;    &#160;:       1
&quot;m&quot;    &#160;:       1
&quot;n&quot;    &#160;:       3
&quot;r&quot;    &#160;:       1
&quot;s&quot;    &#160;:       2
&quot;u&quot;    &#160;:       2
&quot;y&quot;    &#160;:       1
&quot;}&quot;    &#160;:       2
ok
</pre>
<p>Alternatively letter_freq/1 above can be replaced with
</p>
<pre class="erlang highlighted_source">&#160;<br /><span class="re3">letter_freq</span><span class="br0">&#40;</span> <span class="re5">Data</span> <span class="br0">&#41;</span> <span class="sy1">-&gt;</span><br />	<span class="re5">Dict</span> <span class="sy3">=</span> <a href="http://erlang.org/doc/man/lists.html"><span class="kw5">lists</span></a>:<span class="re3">foldl</span><span class="br0">&#40;</span> <span class="kw1">fun</span> <span class="br0">&#40;</span><span class="re5">Char</span><span class="sy1">,</span> <span class="re5">Dict</span><span class="br0">&#41;</span> <span class="sy1">-&gt;</span> <a href="http://erlang.org/doc/man/dict.html"><span class="kw5">dict</span></a>:<span class="re3">update_counter</span><span class="br0">&#40;</span> <span class="re5">Char</span><span class="sy1">,</span> <span class="nu0">1</span><span class="sy1">,</span> <span class="re5">Dict</span> <span class="br0">&#41;</span> <span class="kw1">end</span><span class="sy1">,</span> <a href="http://erlang.org/doc/man/dict.html"><span class="kw5">dict</span></a>:<span class="re3">new</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy1">,</span> <span class="re5">Data</span> <span class="br0">&#41;</span><span class="sy1">,</span><br />	<span class="br0">&#91;</span><a href="http://erlang.org/doc/man/io.html"><span class="kw5">io</span></a>:<span class="re3">fwrite</span><span class="br0">&#40;</span> <span class="st0">&quot;~p	:	~p~n&quot;</span><span class="sy1">,</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><span class="re5">X</span><span class="br0">&#93;</span><span class="sy1">,</span> <a href="http://erlang.org/doc/man/dict.html"><span class="kw5">dict</span></a>:<span class="re3">fetch</span><span class="br0">&#40;</span><span class="re5">X</span><span class="sy1">,</span> <span class="re5">Dict</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="sy3">||</span> <span class="re5">X</span> <span class="sy3">&lt;-</span> <a href="http://erlang.org/doc/man/dict.html"><span class="kw5">dict</span></a>:<span class="re3">fetch_keys</span><span class="br0">&#40;</span><span class="re5">Dict</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="sy1">.</span><br />&#160;</pre>
<p><br />
</p>
<h2><span class="mw-headline" id="ERRE"><a href="/wiki/Category:ERRE" title="Category:ERRE">ERRE</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=23" title="Edit section: ERRE">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Using ERRE help file for testing.
</p>
<pre class="text highlighted_source">PROGRAM LETTER<br />&#160;<br />DIM CNT[255]<br />&#160;<br />BEGIN<br />&#160;<br />      OPEN(&quot;I&quot;,1,&quot;f:\errev30\erre.hlp&quot;)<br />&#160;<br />      REPEAT<br />        GET(#1,A$)<br />        L%=LEN(A$)<br />        IF L%&gt;0 THEN<br />          FOR I%=1 TO L% DO<br />            A%=ASC(MID$(A$,I%))<br />            CNT[A%]+=1<br />          END FOR<br />        END IF<br />      UNTIL EOF(1)<br />      CLOSE(1)<br />&#160;<br />      FOR C%=$41 TO $5A DO<br />        PRINT(CHR$(C%);CHR$(C%+32);&quot;: &quot;;CNT[C%]+CNT[C%+32])<br />      END FOR<br />&#160;<br />END PROGRAM<br />&#160;</pre>
<h2><span class="mw-headline" id="Euphoria"><a href="/wiki/Category:Euphoria" title="Category:Euphoria">Euphoria</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=24" title="Edit section: Euphoria">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/mw/index.php?title=OpenEuphoria&amp;action=edit&amp;redlink=1" class="new" title="OpenEuphoria (page does not exist)">OpenEuphoria</a></div>
<pre class="euphoria highlighted_source">&#160;<br /><span class="co1">-- LetterFrequency.ex</span><br /><span class="co1">-- Count frequency of each letter in own source code.</span><br />&#160;<br /><span class="kw1">include</span> std<span class="sy1">/</span>console.e<br /><span class="kw1">include</span> std<span class="sy1">/</span>io.e<br /><span class="kw1">include</span> std<span class="sy1">/</span>text.e<br />&#160;<br /><span class="kw2">sequence</span> letters <span class="sy1">=</span> <span class="kw2">repeat</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="sy2">,</span><span class="nu0">26</span><span class="br0">&#41;</span><br />&#160;<br /><span class="kw2">sequence</span> content <span class="sy1">=</span> read_file<span class="br0">&#40;</span><span class="st0">&quot;LetterFrequency.ex&quot;</span><span class="br0">&#41;</span><br />&#160;<br />content <span class="sy1">=</span> lower<span class="br0">&#40;</span>content<span class="br0">&#41;</span><br />&#160;<br /><span class="kw1">for</span> i <span class="sy1">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="kw2">length</span><span class="br0">&#40;</span>content<span class="br0">&#41;</span> <span class="kw1">do</span><br />	<span class="kw1">if</span> content<span class="br0">&#91;</span>i<span class="br0">&#93;</span> &gt; <span class="nu0">96</span> <span class="kw1">and</span> content<span class="br0">&#91;</span>i<span class="br0">&#93;</span> &lt; <span class="nu0">123</span> <span class="kw1">then</span><br />		letters<span class="br0">&#91;</span>content<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy1">-</span><span class="nu0">96</span><span class="br0">&#93;</span> <span class="sy1">+=</span> <span class="nu0">1</span><br />	<span class="kw1">end</span> <span class="kw1">if</span><br /><span class="kw1">end</span> <span class="kw1">for</span><br />&#160;<br /><span class="kw1">for</span> i <span class="sy1">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="nu0">26</span> <span class="kw1">do</span><br />	<span class="kw2">printf</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="sy2">,</span><span class="st0">&quot;%s: &#160;%d<span class="es0">\n</span>&quot;</span><span class="sy2">,</span><span class="br0">&#123;</span>i<span class="sy1">+</span><span class="nu0">96</span><span class="sy2">,</span>letters<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#125;</span><span class="br0">&#41;</span><br /><span class="kw1">end</span> <span class="kw1">for</span><br />&#160;<br /><span class="kw1">if</span> <span class="kw2">getc</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span> <span class="kw1">then</span> <span class="kw1">end</span> <span class="kw1">if</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>a: 4
b: 0
c: 21
-snip
x: 3
y: 3
z: 0
</pre>
<h2><span class="mw-headline" id="F.23"><a href="/wiki/Category:F_Sharp" title="Category:F Sharp">F#</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=25" title="Edit section: F#">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="fsharp highlighted_source"><span class="kw1">let</span> alphabet <span class="sy0">=</span><br />    <span class="br0">&#91;</span><span class="st0">'A'</span>..<span class="st0">'Z'</span><span class="br0">&#93;</span> <span class="sy0">|&gt;</span> <a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html"><span class="kw2">Set</span></a>.<span class="me1">ofList</span><br />&#160;<br /><span class="kw1">let</span> letterFreq <span class="br0">&#40;</span>text&#160;: <span class="kw4">string</span><span class="br0">&#41;</span> <span class="sy0">=</span><br />    text.<span class="me1">ToUpper</span><span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="me1">ToCharArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />    <span class="sy0">|&gt;</span> <a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html"><span class="kw2">Array</span></a>.<span class="me1">filter</span> <span class="br0">&#40;</span><span class="kw1">fun</span> x <span class="sy0">-&gt;</span> alphabet.<span class="me1">Contains</span><span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="br0">&#41;</span><br />    <span class="sy0">|&gt;</span> <a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html"><span class="kw2">Seq</span></a>.<span class="me1">countBy</span> <span class="br0">&#40;</span><span class="kw1">fun</span> x <span class="sy0">-&gt;</span> x<span class="br0">&#41;</span><br />    <span class="sy0">|&gt;</span> <a href="http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html"><span class="kw2">Seq</span></a>.<span class="me1">sort</span><br />&#160;<br /><span class="kw1">let</span> v <span class="sy0">=</span> <span class="st0">&quot;Now is the time for all good men to come to the aid of the party&quot;</span><br />&#160;<br /><span class="kw1">let</span> res <span class="sy0">=</span> letterFreq v<br />&#160;<br /><span class="kw1">for</span> <span class="br0">&#40;</span>letter, freq<span class="br0">&#41;</span> <span class="kw1">in</span> res <span class="kw1">do</span><br />    printfn <span class="st0">&quot;%A,&#160;%A&quot;</span> letter freq</pre>
<h2><span class="mw-headline" id="FBSL"><a href="/wiki/Category:FBSL" title="Category:FBSL">FBSL</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=26" title="Edit section: FBSL">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The result of the first evaluation of ASC() is retained in the symbol ASC for later use. This is a standard feature of FBSL functions. The ascii array is dynamic. Command(1) is the name of the script file.
</p>
<pre class="qbasic highlighted_source">#APPTYPE CONSOLE<br />&#160;<br /><span class="co1">'Open a text file and count the occurrences of each letter.</span><br /><span class="kw1">FUNCTION</span> countBytes<span class="br0">&#40;</span>fileName <a href="http://www.qbasicnews.com/qboho/qckas.shtml"><span class="kw3">AS</span></a> <a href="http://www.qbasicnews.com/qboho/qckstring.shtml"><span class="kw3">STRING</span></a><span class="br0">&#41;</span><br />	<a href="http://www.qbasicnews.com/qboho/qckdim.shtml"><span class="kw3">DIM</span></a> c <a href="http://www.qbasicnews.com/qboho/qckas.shtml"><span class="kw3">AS</span></a> <a href="http://www.qbasicnews.com/qboho/qckstring.shtml"><span class="kw3">STRING</span></a><br />	<a href="http://www.qbasicnews.com/qboho/qckdim.shtml"><span class="kw3">DIM</span></a> ascii<span class="br0">&#91;</span><span class="br0">&#93;</span><br />	<a href="http://www.qbasicnews.com/qboho/qckdim.shtml"><span class="kw3">DIM</span></a> handle <a href="http://www.qbasicnews.com/qboho/qckas.shtml"><span class="kw3">AS</span></a> <a href="http://www.qbasicnews.com/qboho/qckinteger.shtml"><span class="kw3">INTEGER</span></a> <span class="sy0">=</span> FILEOPEN<span class="br0">&#40;</span>fileName<span class="sy0">,</span> <a href="http://www.qbasicnews.com/qboho/qckbinary.shtml"><span class="kw3">BINARY</span></a><span class="br0">&#41;</span><br />	<span class="kw1">WHILE</span> <a href="http://www.qbasicnews.com/qboho/qcknot.shtml"><span class="kw3">NOT</span></a> FILEEOF<span class="br0">&#40;</span>handle<span class="br0">&#41;</span><br />		c <span class="sy0">=</span> FILEGETC<span class="br0">&#40;</span>handle<span class="br0">&#41;</span><br />		<span class="kw1">IF</span> c <span class="sy0">=</span> <span class="st0">&quot;&quot;</span> <span class="kw1">THEN</span> <a href="http://www.qbasicnews.com/qboho/qckexit.shtml"><span class="kw3">EXIT</span></a> <span class="kw1">WHILE</span><br />		ascii<span class="br0">&#91;</span><a href="http://www.qbasicnews.com/qboho/qckasc.shtml"><span class="kw3">ASC</span></a><span class="br0">&#93;</span> <span class="sy0">=</span> ascii<span class="br0">&#91;</span><a href="http://www.qbasicnews.com/qboho/qckasc.shtml"><span class="kw3">ASC</span></a><span class="br0">&#40;</span>c<span class="br0">&#41;</span><span class="br0">&#93;</span> <span class="sy0">+</span> <span class="nu0">1</span><br />	<span class="kw1">WEND</span><br />	FILECLOSE<span class="br0">&#40;</span>handle<span class="br0">&#41;</span><br />	<span class="kw1">RETURN</span> ascii<br /><a href="http://www.qbasicnews.com/qboho/qckend.shtml"><span class="kw3">END</span></a> <span class="kw1">SUB</span><br />&#160;<br /><a href="http://www.qbasicnews.com/qboho/qckdim.shtml"><span class="kw3">DIM</span></a> counters <span class="sy0">=</span> countBytes<span class="br0">&#40;</span>COMMAND<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br /><span class="kw1">FOR</span> <a href="http://www.qbasicnews.com/qboho/qckdim.shtml"><span class="kw3">DIM</span></a> i <span class="sy0">=</span> <a href="http://www.qbasicnews.com/qboho/qcklbound.shtml"><span class="kw3">LBOUND</span></a><span class="br0">&#40;</span>counters<span class="br0">&#41;</span> <span class="kw1">TO</span> <a href="http://www.qbasicnews.com/qboho/qckubound.shtml"><span class="kw3">UBOUND</span></a><span class="br0">&#40;</span>counters<span class="br0">&#41;</span><br />	<a href="http://www.qbasicnews.com/qboho/qckprint.shtml"><span class="kw3">PRINT</span></a> i<span class="sy0">,</span> <a href="http://www.qbasicnews.com/qboho/qcktab.shtml"><span class="kw3">TAB</span></a><span class="sy0">,</span> IIF<span class="br0">&#40;</span>i <span class="sy0">&lt;=</span> <span class="nu0">32</span><span class="sy0">,</span> i<span class="sy0">,</span> CHR<span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">,</span> <a href="http://www.qbasicnews.com/qboho/qcktab.shtml"><span class="kw3">TAB</span></a><span class="sy0">,</span> counters<span class="br0">&#91;</span>i<span class="br0">&#93;</span><br /><span class="kw1">NEXT</span><br />&#160;<br />PAUSE<br />&#160;</pre>
<h2><span class="mw-headline" id="Factor"><a href="/wiki/Category:Factor" title="Category:Factor">Factor</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=27" title="Edit section: Factor">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">USING: hashtables locals io assocs kernel io.encodings.utf8 io.files formatting&#160;;<br />IN: count-letters<br />&#160;<br />&lt;PRIVATE<br />&#160;<br />: count-from-stream ( -- counts )<br />  52 &lt;hashtable&gt;<br />  [ read1 dup ] [ over inc-at ] while<br />  drop&#160;;<br />&#160;<br />: print-counts ( counts -- )<br />  [ &quot;%c:&#160;%d\n&quot; printf ] assoc-each&#160;;<br />&#160;<br />PRIVATE&gt;<br />&#160;<br />: count-letters ( filename -- )<br />  utf8 [ count-from-stream ] with-file-reader<br />    print-counts&#160;;<br />&#160;</pre>
<h2><span class="mw-headline" id="Forth"><a href="/wiki/Category:Forth" title="Category:Forth">Forth</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=28" title="Edit section: Forth">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">create counts 26 cells allot<br />&#160;<br />: freq ( filename -- )<br />  counts 26 cells erase<br />  slurp-file bounds do<br />    i <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="bbd8fb">[email&#160;protected]</a> 32 or 'a -<br />    dup 0 26 within if<br />      cells counts +<br />      1 swap +!<br />    else drop then<br />  loop<br />  26 0 do<br />    cr [char] ' emit  'a i + emit  .&quot; ': &quot;<br />    counts i cells + @ .<br />  loop&#160;;<br />&#160;<br />s&quot; example.txt&quot; freq</pre>
<h2><span class="mw-headline" id="Fortran"><a href="/wiki/Category:Fortran" title="Category:Fortran">Fortran</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=29" title="Edit section: Fortran">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Using the configuration file (which has changed since the example was documented) of the J example, compilation and output of this program on a gnu/linux system is
</p>
<pre class="fortran highlighted_source">&#160;<br /><span class="sy0">-*-</span> mode<span class="sy0">:</span> compilation; default<span class="sy0">-</span>directory<span class="sy0">:</span> <span class="st0">&quot;/tmp/&quot;</span> <span class="sy0">-*-</span><br /><span class="co1">Compilation started at Sat May 18 18:09:46</span><br />&#160;<br />a<span class="sy0">=</span>.<span class="sy0">/</span>F <span class="sy0">&amp;&amp;</span> make $a <span class="sy0">&amp;&amp;</span> $a &lt; configuration.<span class="kw1">file</span><br />f95 <span class="sy0">-</span>Wall <span class="sy0">-</span>ffree<span class="sy0">-</span><span class="kw1">form</span> F.<span class="me1">F</span> <span class="sy0">-</span>o F<br />          <span class="nu0">92</span>          <span class="nu0">21</span>          <span class="nu0">17</span>          <span class="nu0">24</span>          <span class="nu0">82</span>          <span class="nu0">19</span>          <span class="nu0">19</span>          <span class="nu0">22</span>          <span class="nu0">67</span>           <span class="nu0">0</span>           <span class="nu0">2</span>          <span class="nu0">27</span>          <span class="nu0">27</span>          <span class="nu0">57</span>          <span class="nu0">55</span>          <span class="nu0">31</span>           <span class="nu0">1</span>          <span class="nu0">61</span>          <span class="nu0">43</span>          <span class="nu0">60</span>          <span class="nu0">20</span>           <span class="nu0">6</span>           <span class="nu0">2</span>           <span class="nu0">0</span>          <span class="nu0">10</span>           <span class="nu0">0</span><br />&#160;<br /><span class="co1">Compilation finished at Sat May 18 18:09:46</span><br />&#160;</pre>
<p>And here's the FORTRAN90 program source. The program reads stdin and writes the result to stdout. Future enhancement: use block size records.
</p>
<pre class="fortran highlighted_source">&#160;<br /><span class="co1">! count letters from stdin</span><br /><span class="kw1">program</span> LetterFrequency<br />  <span class="kw3">implicit</span> <span class="kw3">none</span><br />  <span class="kw3">character</span> <span class="br0">&#40;</span><span class="kw4">len</span><span class="sy0">=</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">::</span> <span class="me2">s</span><br />  <span class="kw3">integer</span>, <span class="kw3">dimension</span><span class="br0">&#40;</span><span class="nu0">26</span><span class="br0">&#41;</span> <span class="sy0">::</span> <span class="me2">a</span><br />  <span class="kw3">integer</span> <span class="sy0">::</span> <span class="me2">ios</span>, i, t<br />  <span class="kw3">data</span> a<span class="sy0">/</span><span class="nu0">26</span><span class="sy0">*</span><span class="nu0">0</span><span class="sy0">/</span>,i<span class="sy0">/</span><span class="nu0">0</span><span class="sy0">/</span><br />  open<span class="br0">&#40;</span><span class="kw1">unit</span><span class="sy0">=</span><span class="nu0">7</span>, <span class="kw1">file</span><span class="sy0">=</span><span class="st0">'/dev/stdin'</span>, <span class="kw1">access</span><span class="sy0">=</span><span class="st0">'direct'</span>, <span class="kw1">form</span><span class="sy0">=</span><span class="st0">'formatted'</span>, <span class="kw1">recl</span><span class="sy0">=</span><span class="nu0">1</span>, <span class="kw1">status</span><span class="sy0">=</span><span class="st0">'old'</span>, <span class="kw1">iostat</span><span class="sy0">=</span>ios<span class="br0">&#41;</span><br />  <span class="kw1">if</span> <span class="br0">&#40;</span>ios <span class="kw2">.<span class="me1">ne</span>.</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="kw1">then</span><br />    write<span class="br0">&#40;</span><span class="nu0">0</span>,<span class="sy0">*</span><span class="br0">&#41;</span><span class="st0">'Opening stdin failed'</span><br />    <span class="kw1">stop</span><br />  <span class="kw1">endif</span><br />  <span class="kw1">do</span> i<span class="sy0">=</span><span class="nu0">1</span>, <span class="kw4">huge</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><br />    read<span class="br0">&#40;</span><span class="kw1">unit</span><span class="sy0">=</span><span class="nu0">7</span>, rec <span class="sy0">=</span> i, <span class="kw1">fmt</span> <span class="sy0">=</span> <span class="st0">'(a)'</span>, <span class="kw1">iostat</span> <span class="sy0">=</span> ios <span class="br0">&#41;</span> s<br />    <span class="kw1">if</span> <span class="br0">&#40;</span>ios <span class="kw2">.<span class="me1">ne</span>.</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="kw1">then</span><br />      <span class="co1">!write(0,*)'ios on failure is ',ios</span><br />      close<span class="br0">&#40;</span><span class="kw1">unit</span><span class="sy0">=</span><span class="nu0">7</span><span class="br0">&#41;</span><br />      <span class="kw1">exit</span><br />    <span class="kw1">endif</span><br />    t <span class="sy0">=</span> <span class="kw4">ior</span><span class="br0">&#40;</span><span class="kw4">iachar</span><span class="br0">&#40;</span>s<span class="br0">&#40;</span><span class="nu0">1</span><span class="sy0">:</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span>, <span class="nu0">32</span><span class="br0">&#41;</span> <span class="sy0">-</span> <span class="kw4">iachar</span><span class="br0">&#40;</span><span class="st0">'a'</span><span class="br0">&#41;</span><br />    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">0</span> <span class="kw2">.<span class="me1">le</span>.</span> t<span class="br0">&#41;</span> <span class="kw2">.<span class="me1">and</span>.</span> <span class="br0">&#40;</span>t <span class="kw2">.<span class="me1">le</span>.</span> <span class="kw4">iachar</span><span class="br0">&#40;</span><span class="st0">'z'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">then</span><br />      t <span class="sy0">=</span> t<span class="sy0">+</span><span class="nu0">1</span><br />      a<span class="br0">&#40;</span>t<span class="br0">&#41;</span> <span class="sy0">=</span> a<span class="br0">&#40;</span>t<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span><br />    <span class="kw1">endif</span><br />  <span class="kw1">end</span> <span class="kw1">do</span><br />  write<span class="br0">&#40;</span><span class="nu0">6</span>, <span class="sy0">*</span><span class="br0">&#41;</span> a<br /><span class="kw1">end</span> <span class="kw1">program</span> LetterFrequency<br />&#160;</pre>
<h2><span class="mw-headline" id="FreeBASIC"><a href="/wiki/Category:FreeBASIC" title="Category:FreeBASIC">FreeBASIC</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=30" title="Edit section: FreeBASIC">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="freebasic highlighted_source"><span class="co1">' FB 1.05.0 Win64</span><br />&#160;<br /><span class="kw1">Dim</span> a<span class="br0">&#40;</span><span class="nu0">65</span> <span class="kw1">to</span> <span class="nu0">90</span><span class="br0">&#41;</span> <span class="kw1">As</span> <span class="kw1">Integer</span>  <span class="co1">' array to hold frequency of each letter, all elements zero initially</span><br /><span class="kw1">Dim</span> fileName <span class="kw1">As</span> <span class="kw1">String</span> = <span class="st0">&quot;input.txt&quot;</span><br /><span class="kw1">Dim</span> s <span class="kw1">As</span> <span class="kw1">String</span><br /><span class="kw1">Dim</span> i <span class="kw1">As</span> <span class="kw1">Integer</span><br /><span class="kw1">Open</span> fileName <span class="kw1">For</span> <span class="kw1">Input</span> <span class="kw1">As</span> <span class="co2">#1</span><br />&#160;<br /><span class="kw1">While</span> <span class="kw1">Not</span> <span class="kw1">Eof</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><br />  <span class="kw1">Line</span> <span class="kw1">Input</span> <span class="co2">#1, s</span><br />  s = <span class="kw1">UCase</span><span class="br0">&#40;</span>s<span class="br0">&#41;</span><br />  <span class="kw1">For</span> i = <span class="nu0">0</span> <span class="kw1">To</span> <span class="kw1">Len</span><span class="br0">&#40;</span>s<span class="br0">&#41;</span> - <span class="nu0">1</span><br />    a<span class="br0">&#40;</span>s<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span> += <span class="nu0">1</span><br />  <span class="kw1">Next</span><br /><span class="kw1">Wend</span><br />&#160;<br /><span class="kw1">Close</span> <span class="co2">#1</span><br />&#160;<br /><span class="kw1">Print</span> <span class="st0">&quot;The frequency of each letter in the file &quot;</span>; fileName; <span class="st0">&quot; is as follows:&quot;</span><br /><span class="kw1">Print</span><br /><span class="kw1">For</span> i = <span class="nu0">65</span> <span class="kw1">To</span> <span class="nu0">90</span><br />  <span class="kw1">If</span> a<span class="br0">&#40;</span>i<span class="br0">&#41;</span> &gt; <span class="nu0">0</span> <span class="kw1">Then</span><br />    <span class="kw1">Print</span> <span class="kw1">Chr</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span>; <span class="st0">&quot;&#160;: &quot;</span>; a<span class="br0">&#40;</span>i<span class="br0">&#41;</span><br />  <span class="kw1">End</span> <span class="kw1">If</span><br /><span class="kw1">Next</span><br /><span class="kw1">Print</span><br /><span class="kw1">Print</span> <span class="st0">&quot;Press any key to quit&quot;</span><br /><span class="kw1">Sleep</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>/'
   results for input.txt which contains the single line:
   The quick brown fox jumps over the lazy dog. 
'/

The frequency of each letter in the file input.txt is as follows:

A&#160;:  1
B&#160;:  1
C&#160;:  1
D&#160;:  1
E&#160;:  3
F&#160;:  1
G&#160;:  1
H&#160;:  2
I&#160;:  1
J&#160;:  1
K&#160;:  1
L&#160;:  1
M&#160;:  1
N&#160;:  1
O&#160;:  4
P&#160;:  1
Q&#160;:  1
R&#160;:  2
S&#160;:  1
T&#160;:  2
U&#160;:  2
V&#160;:  1
W&#160;:  1
X&#160;:  1
Y&#160;:  1
Z&#160;:  1
</pre>
<p>Input:
</p>
<pre>This is the one question that most people ask. Why bother learning a completely different computing environment, when the operating 
system that ships with most desktops, laptops, and servers works just fine? To answer that question, I would pose another question. 
Does that operating system you’re currently using really work “just fine”? Or are you constantly battling viruses, malware, slow 
downs, crashes, costly repairs, and licensing fees?

If you struggle with the above, and want to free yourself from the constant fear of losing data or having to take your computer in 
for the “yearly clean up,” Linux might be the perfect platform for you. Linux has evolved into one of the most reliable computer 
ecosystems on the planet. Combine that reliability with zero cost of entry and you have the perfect solution for a desktop platform.
</pre>
<h2><span class="mw-headline" id="Gambas"><a href="/wiki/Category:Gambas" title="Category:Gambas">Gambas</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=31" title="Edit section: Gambas">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="gambas highlighted_source"><a href="http://gambasdoc.org/help/lang/public"><span class="kw1">Public</span></a> <a href="http://gambasdoc.org/help/lang/sub"><span class="kw1">Sub</span></a> Form_Open<span class="br0">&#40;</span><span class="br0">&#41;</span><br /><a href="http://gambasdoc.org/help/lang/dim"><span class="kw1">Dim</span></a> sData <a href="http://gambasdoc.org/help/lang/as"><span class="kw1">As</span></a> <a href="http://gambasdoc.org/help/lang/type/string"><span class="kw4">String</span></a> <span class="sy0">=</span> <a href="http://gambasdoc.org/help/lang/type/file"><span class="kw4">File</span></a>.<span class="me1">Load</span><span class="br0">&#40;</span><span class="st0">&quot;data.txt&quot;</span><span class="br0">&#41;</span><br /><a href="http://gambasdoc.org/help/lang/dim"><span class="kw1">Dim</span></a> iCount, iSpaces, iLetters, iOther <a href="http://gambasdoc.org/help/lang/as"><span class="kw1">As</span></a> <a href="http://gambasdoc.org/help/lang/type/integer"><span class="kw4">Integer</span></a><br /><a href="http://gambasdoc.org/help/lang/dim"><span class="kw1">Dim</span></a> bPunctuation <a href="http://gambasdoc.org/help/lang/as"><span class="kw1">As</span></a> <a href="http://gambasdoc.org/help/lang/type/boolean"><span class="kw4">Boolean</span></a><br />&#160;<br /><a href="http://gambasdoc.org/help/lang/for"><span class="kw1">For</span></a> iCount <span class="sy0">=</span> <span class="nu0">1</span> <a href="http://gambasdoc.org/help/lang/to"><span class="kw1">To</span></a> <a href="http://gambasdoc.org/help/lang/len"><span class="kw2">Len</span></a><span class="br0">&#40;</span>sData<span class="br0">&#41;</span><br />  <a href="http://gambasdoc.org/help/lang/if"><span class="kw1">If</span></a> <a href="http://gambasdoc.org/help/lang/instr"><span class="kw2">InStr</span></a><span class="br0">&#40;</span><span class="st0">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>, <a href="http://gambasdoc.org/help/lang/ucase"><span class="kw2">UCase</span></a><span class="br0">&#40;</span><a href="http://gambasdoc.org/help/lang/mid"><span class="kw2">Mid</span></a><span class="br0">&#40;</span>sData, iCount, <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <a href="http://gambasdoc.org/help/lang/then"><span class="kw1">Then</span></a> <br />    <a href="http://gambasdoc.org/help/lang/inc"><span class="kw1">Inc</span></a> iLetters<br />    bPunctuation <span class="sy0">=</span> <a href="http://gambasdoc.org/help/lang/true"><span class="kw1">True</span></a><br />  <a href="http://gambasdoc.org/help/lang/end"><span class="kw1">End</span></a> <a href="http://gambasdoc.org/help/lang/if"><span class="kw1">If</span></a><br />   <a href="http://gambasdoc.org/help/lang/if"><span class="kw1">If</span></a> <a href="http://gambasdoc.org/help/lang/mid"><span class="kw2">Mid</span></a><span class="br0">&#40;</span>sData, icount, <span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">=</span> <span class="st0">&quot; &quot;</span> <a href="http://gambasdoc.org/help/lang/then"><span class="kw1">Then</span></a> <br />    <a href="http://gambasdoc.org/help/lang/inc"><span class="kw1">Inc</span></a> iSpaces<br />    bPunctuation <span class="sy0">=</span> <a href="http://gambasdoc.org/help/lang/true"><span class="kw1">True</span></a><br />  <a href="http://gambasdoc.org/help/lang/end"><span class="kw1">End</span></a> <a href="http://gambasdoc.org/help/lang/if"><span class="kw1">If</span></a> <br />  <a href="http://gambasdoc.org/help/lang/if"><span class="kw1">If</span></a> bPunctuation <span class="sy0">=</span> <a href="http://gambasdoc.org/help/lang/false"><span class="kw1">False</span></a> <a href="http://gambasdoc.org/help/lang/then"><span class="kw1">Then</span></a> <a href="http://gambasdoc.org/help/lang/inc"><span class="kw1">Inc</span></a> iOther<br />  bPunctuation <span class="sy0">=</span> <a href="http://gambasdoc.org/help/lang/false"><span class="kw1">False</span></a><br /><a href="http://gambasdoc.org/help/lang/next"><span class="kw1">Next</span></a><br />&#160;<br /><a href="http://www.google.com/search?hl=en&amp;q=message+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky"><span class="kw6">Message</span></a><span class="br0">&#40;</span><span class="st0">&quot;Text contains &quot;</span> <span class="sy0">&amp;</span> <a href="http://gambasdoc.org/help/lang/len"><span class="kw2">Len</span></a><span class="br0">&#40;</span>sData<span class="br0">&#41;</span> <span class="sy0">&amp;</span> <span class="st0">&quot; characters<span class="es0">\n</span>&quot;</span> <span class="sy0">&amp;</span> iLetters <span class="sy0">&amp;</span> <span class="st0">&quot; Letters<span class="es0">\n</span>&quot;</span> <span class="sy0">&amp;</span> iSpaces <span class="sy0">&amp;</span> <span class="st0">&quot; Spaces<span class="es0">\n</span>&quot;</span> <span class="sy0">&amp;</span> iOther <span class="sy0">&amp;</span> <span class="st0">&quot; Punctuation, newlines etc.&quot;</span><span class="br0">&#41;</span><br />&#160;<br /><a href="http://gambasdoc.org/help/lang/end"><span class="kw1">End</span></a></pre>
<p>Output:
</p>
<pre>Text contains 854 characters
677 Letters
135 Spaces
42 Punctuation, newlines etc.
</pre>
<h2><span class="mw-headline" id="Go"><a href="/wiki/Category:Go" title="Category:Go">Go</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=32" title="Edit section: Go">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="go highlighted_source"><span class="kw1">package</span> main<br />&#160;<br /><span class="kw1">import</span> <span class="sy1">(</span><br />    <span class="st0">&quot;fmt&quot;</span><br />    <span class="st0">&quot;io/ioutil&quot;</span><br />    <span class="st0">&quot;sort&quot;</span><br />    <span class="st0">&quot;unicode&quot;</span><br /><span class="sy1">)</span><br />&#160;<br /><span class="kw1">const</span> file <span class="sy2">=</span> <span class="st0">&quot;unixdict.txt&quot;</span><br />&#160;<br /><span class="kw4">func</span> main<span class="sy1">()</span> <span class="sy1">{</span><br />    bs<span class="sy1">,</span> err <span class="sy2">:=</span> ioutil<span class="sy3">.</span>ReadFile<span class="sy1">(</span>file<span class="sy1">)</span><br />    <span class="kw1">if</span> err <span class="sy2">!=</span> <span class="kw2">nil</span> <span class="sy1">{</span><br />        fmt<span class="sy3">.</span>Println<span class="sy1">(</span>err<span class="sy1">)</span><br />        <span class="kw1">return</span><br />    <span class="sy1">}</span><br />    m <span class="sy2">:=</span> <span class="kw3">make</span><span class="sy1">(</span><span class="kw4">map</span><span class="sy1">[</span>rune<span class="sy1">]</span><span class="kw4">int</span><span class="sy1">)</span><br />    <span class="kw1">for</span> _<span class="sy1">,</span> r <span class="sy2">:=</span> <span class="kw1">range</span> <span class="kw4">string</span><span class="sy1">(</span>bs<span class="sy1">)</span> <span class="sy1">{</span><br />        m<span class="sy1">[</span>r<span class="sy1">]</span><span class="sy2">++</span><br />    <span class="sy1">}</span><br />    <span class="co1">// answer is now in m.  sort and format output:</span><br />    lfs <span class="sy2">:=</span> <span class="kw3">make</span><span class="sy1">(</span>lfList<span class="sy1">,</span> <span class="nu0">0</span><span class="sy1">,</span> <span class="kw3">len</span><span class="sy1">(</span>m<span class="sy1">))</span><br />    <span class="kw1">for</span> l<span class="sy1">,</span> f <span class="sy2">:=</span> <span class="kw1">range</span> m <span class="sy1">{</span><br />        lfs <span class="sy2">=</span> append<span class="sy1">(</span>lfs<span class="sy1">,</span> &amp;letterFreq<span class="sy1">{</span>l<span class="sy1">,</span> f<span class="sy1">})</span><br />    <span class="sy1">}</span><br />    sort<span class="sy3">.</span>Sort<span class="sy1">(</span>lfs<span class="sy1">)</span><br />    fmt<span class="sy3">.</span>Println<span class="sy1">(</span><span class="st0">&quot;file:&quot;</span><span class="sy1">,</span> file<span class="sy1">)</span><br />    fmt<span class="sy3">.</span><span class="me1">Println</span><span class="sy1">(</span><span class="st0">&quot;letter  frequency&quot;</span><span class="sy1">)</span><br />    <span class="kw1">for</span> _<span class="sy1">,</span> lf <span class="sy2">:=</span> <span class="kw1">range</span> lfs <span class="sy1">{</span><br />        <span class="kw1">if</span> unicode<span class="sy3">.</span>IsGraphic<span class="sy1">(</span>lf<span class="sy3">.</span>rune<span class="sy1">)</span> <span class="sy1">{</span><br />            fmt<span class="sy3">.</span>Printf<span class="sy1">(</span><span class="st0">&quot;  &#160;%c   &#160;%7d<span class="es1">\n</span>&quot;</span><span class="sy1">,</span> lf<span class="sy3">.</span>rune<span class="sy1">,</span> lf<span class="sy3">.</span>freq<span class="sy1">)</span><br />        <span class="sy1">}</span> <span class="kw1">else</span> <span class="sy1">{</span><br />            fmt<span class="sy3">.</span>Printf<span class="sy1">(</span><span class="st0">&quot;%U &#160;%7d<span class="es1">\n</span>&quot;</span><span class="sy1">,</span> lf<span class="sy3">.</span>rune<span class="sy1">,</span> lf<span class="sy3">.</span>freq<span class="sy1">)</span><br />        <span class="sy1">}</span><br />    <span class="sy1">}</span><br /><span class="sy1">}</span><br />&#160;<br /><span class="kw1">type</span> letterFreq <span class="kw4">struct</span> <span class="sy1">{</span><br />    rune<br />    freq <span class="kw4">int</span><br /><span class="sy1">}</span><br /><span class="kw1">type</span> lfList <span class="sy1">[]</span><span class="sy3">*</span>letterFreq<br />&#160;<br /><span class="kw4">func</span> <span class="sy1">(</span>lfs lfList<span class="sy1">)</span> Len<span class="sy1">()</span> <span class="kw4">int</span> <span class="sy1">{</span> <span class="kw1">return</span> <span class="kw3">len</span><span class="sy1">(</span>lfs<span class="sy1">)</span> <span class="sy1">}</span><br /><span class="kw4">func</span> <span class="sy1">(</span>lfs lfList<span class="sy1">)</span> Less<span class="sy1">(</span><span class="nu2">i</span><span class="sy1">,</span> j <span class="kw4">int</span><span class="sy1">)</span> <span class="kw4">bool</span> <span class="sy1">{</span><br />    <span class="kw1">switch</span> fd <span class="sy2">:=</span> lfs<span class="sy1">[</span><span class="nu2">i</span><span class="sy1">]</span><span class="sy3">.</span>freq <span class="sy3">-</span> lfs<span class="sy1">[</span>j<span class="sy1">]</span><span class="sy3">.</span>freq<span class="sy1">;</span> <span class="sy1">{</span><br />    <span class="kw1">case</span> fd &lt; <span class="nu0">0</span><span class="sy1">:</span><br />        <span class="kw1">return</span> <span class="kw2">false</span><br />    <span class="kw1">case</span> fd &gt; <span class="nu0">0</span><span class="sy1">:</span><br />        <span class="kw1">return</span> <span class="kw2">true</span><br />    <span class="sy1">}</span><br />    <span class="kw1">return</span> lfs<span class="sy1">[</span><span class="nu2">i</span><span class="sy1">]</span><span class="sy3">.</span>rune &lt; lfs<span class="sy1">[</span>j<span class="sy1">]</span><span class="sy3">.</span>rune<br /><span class="sy1">}</span><br /><span class="kw4">func</span> <span class="sy1">(</span>lfs lfList<span class="sy1">)</span> Swap<span class="sy1">(</span><span class="nu2">i</span><span class="sy1">,</span> j <span class="kw4">int</span><span class="sy1">)</span> <span class="sy1">{</span><br />    lfs<span class="sy1">[</span><span class="nu2">i</span><span class="sy1">],</span> lfs<span class="sy1">[</span>j<span class="sy1">]</span> <span class="sy2">=</span> lfs<span class="sy1">[</span>j<span class="sy1">],</span> lfs<span class="sy1">[</span><span class="nu2">i</span><span class="sy1">]</span><br /><span class="sy1">}</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>file: unixdict.txt
letter  frequency
U+000A    25104
   e      20144
   a      16421
   i      13980
   r      13436
   t      12836
   o      12738
   n      12097
   s      10210
   l      10061
   c       8216
   u       6489
   m       5828
   d       5799
   p       5516
   h       5208
   g       4129
   b       4115
   y       3633
   f       2662
   w       1968
   k       1925
   v       1902
   x        617
   z        433
   j        430
   q        378
   '        105
   &amp;          6
   .          6
   1          2
   0          1
   2          1
   3          1
   4          1
   5          1
   6          1
   7          1
   8          1
   9          1
</pre>
<h2><span class="mw-headline" id="Groovy"><a href="/wiki/Category:Groovy" title="Category:Groovy">Groovy</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=33" title="Edit section: Groovy">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="groovy highlighted_source"><a href="http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def"><span class="kw2">def</span></a> frequency <span class="sy0">=</span> <span class="br0">&#123;</span> it.<a href="http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20inject"><span class="kw5">inject</span></a><span class="br0">&#40;</span><span class="br0">&#91;</span>:<span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> map, value <span class="sy0">-&gt;</span> map<span class="br0">&#91;</span>value<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#40;</span>map<span class="br0">&#91;</span>value<span class="br0">&#93;</span> <span class="sy0">?</span>: <span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span><span class="sy0">;</span> map <span class="br0">&#125;</span> <span class="br0">&#125;</span><br />&#160;<br />frequency<span class="br0">&#40;</span><a href="http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new"><span class="kw2">new</span></a> <a href="http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F"><span class="kw3">File</span></a><span class="br0">&#40;</span><span class="st0">'frequency.groovy'</span><span class="br0">&#41;</span>.<span class="me1">text</span><span class="br0">&#41;</span>.<a href="http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each"><span class="kw5">each</span></a> <span class="br0">&#123;</span> key, value <span class="sy0">-&gt;</span><br />    <a href="http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println"><span class="kw8">println</span></a> <span class="st0">&quot;'$key': $value&quot;</span><br /><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>'d': 1
'e': 19
'f': 4
' ': 29
'r': 5
'q': 3
'u': 8
[lines omitted]
'o': 2
'x': 1
'h': 1
'k': 2
'&quot;': 2
'$': 2</pre>
<h2><span class="mw-headline" id="Harbour"><a href="/wiki/Category:Harbour" title="Category:Harbour">Harbour</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=34" title="Edit section: Harbour">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="visualfoxpro highlighted_source"><span class="kw1">PROCEDURE</span> Main<span class="br0">&#40;</span><span class="br0">&#41;</span><br />   <span class="kw1">LOCAL</span> s <span class="sy0">:=</span> hb_MemoRead<span class="br0">&#40;</span> <span class="kw4">Left</span><span class="br0">&#40;</span> __FILE__ <span class="sy0">,</span> <span class="kw2">At</span><span class="br0">&#40;</span> <span class="st0">&quot;.&quot;</span><span class="sy0">,</span> __FILE__ <span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">+</span><span class="st0">&quot;prg&quot;</span><span class="br0">&#41;</span><br />   <span class="kw1">LOCAL</span> c<span class="sy0">,</span> <span class="kw2">n</span><span class="sy0">,</span> i<br />   <span class="kw1">LOCAL</span> a <span class="sy0">:=</span> <span class="br0">&#123;</span><span class="br0">&#125;</span><br />&#160;<br />   <span class="kw1">FOR</span> <span class="kw1">EACH</span> c <span class="kw2">IN</span> s<br />      <span class="kw1">IF</span> <span class="kw2">Asc</span><span class="br0">&#40;</span> c <span class="br0">&#41;</span> <span class="sy0">&gt;</span> <span class="nu0">31</span><br />         AAdd<span class="br0">&#40;</span> a<span class="sy0">,</span> c <span class="br0">&#41;</span><br />      <span class="kw1">ENDIF</span><br />   <span class="kw1">NEXT</span><br />   a <span class="sy0">:=</span> <span class="kw1">ASort</span><span class="br0">&#40;</span> a <span class="br0">&#41;</span><br />   i <span class="sy0">:=</span> <span class="nu0">1</span><br />   <span class="kw1">WHILE</span> i <span class="sy0">&lt;=</span> <span class="kw2">Len</span><span class="br0">&#40;</span> a <span class="br0">&#41;</span><br />      c <span class="sy0">:=</span> a<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">;</span> <span class="kw2">n</span> <span class="sy0">:=</span> <span class="nu0">1</span><br />      i<span class="sy0">++</span><br />      <span class="kw1">IF</span> i <span class="sy0">&lt;</span> <span class="kw2">Len</span><span class="br0">&#40;</span>a<span class="br0">&#41;</span> <span class="sy0">.</span><span class="kw2">AND</span><span class="sy0">.</span> <span class="me1">c</span> <span class="sy0">==</span> a<span class="br0">&#91;</span>i<span class="br0">&#93;</span><br />         <span class="kw1">WHILE</span> c <span class="sy0">==</span> a<span class="br0">&#91;</span>i<span class="br0">&#93;</span><br />            <span class="kw2">n</span><span class="sy0">++</span> <span class="sy0">;</span> i<span class="sy0">++</span><br />         <span class="kw1">END</span><br />      <span class="kw1">ENDIF</span><br />      <span class="sy0">??</span> <span class="st0">&quot;'&quot;</span> <span class="sy0">+</span> c <span class="sy0">+</span> <span class="st0">&quot;'&quot;</span> <span class="sy0">+</span> <span class="st0">&quot;=&quot;</span> <span class="sy0">+</span> hb_NtoS<span class="br0">&#40;</span> <span class="kw2">n</span> <span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot; &quot;</span><br />   <span class="kw1">END</span><br />&#160;<br />   <span class="kw2">RETURN</span></pre>
<div>
<dl><dt>Output:</div> (counting the printable characters of its own source code):</dt></dl>
<pre>' '=190 '&quot;'=12 ' ' '=2 '('=10 ')'=10 '+'=12 ','=5 '.'=3 '1'=3 '3'=1 ':'=6 ';'=2 '&lt;'=2 '='=12 
'&gt;'=1 '?'=2 'A'=10 'C'=5 'D'=6 'E'=13 'F'=7 'H'=3 'I'=9 'L'=13 'M'=2 'N'=9 'O'=5 'P'=1 
'R'=6 'S'=2 'T'=2 'U'=2 'W'=2 'X'=1 '['=3 ']'=3 '_'=10 'a'=12 'b'=2 'c'=9 'd'=3 'e'=5 
'f'=1 'g'=1 'h'=2 'i'=11 'm'=1 'n'=7 'o'=3 'p'=1 'r'=2 's'=3 't'=5 'w'=1 '{'=1 '}'=1
</pre>
<h2><span class="mw-headline" id="Haskell"><a href="/wiki/Category:Haskell" title="Category:Haskell">Haskell</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=35" title="Edit section: Haskell">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Short version:
</p>
<pre class="haskell highlighted_source"><span class="kw1">import</span> Data<span class="sy0">.</span>List <span class="br0">&#40;</span>group<span class="sy0">,</span>sort<span class="br0">&#41;</span><br /><span class="kw1">import</span> Control<span class="sy0">.</span>Arrow <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="sy0">&amp;&amp;</span>&amp;<span class="br0">&#41;</span><span class="br0">&#41;</span><br />main <span class="sy0">=</span> <a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:interact"><span class="kw3">interact</span></a> <span class="br0">&#40;</span><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show"><span class="kw3">show</span></a> <span class="sy0">.</span> <a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map"><span class="kw3">map</span></a> <span class="br0">&#40;</span><a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:head"><span class="kw3">head</span></a> <span class="sy0">&amp;&amp;</span>&amp; <a href="http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length"><span class="kw3">length</span></a><span class="br0">&#41;</span> <span class="sy0">.</span> group <span class="sy0">.</span> sort<span class="br0">&#41;</span></pre>
<h2><span class="mw-headline" id="Icon_and_Unicon"><a href="/wiki/Category:Icon" title="Category:Icon">Icon</a> and <a href="/wiki/Category:Unicon" title="Category:Unicon">Unicon</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=36" title="Edit section: Icon and Unicon">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The example below counts (case insensitive) letters and was run on a version of this source file.
</p>
<pre class="icon highlighted_source"><span class="kw1">link</span> printf<br />&#160;<br /><span class="kw1">procedure</span> main<span class="br0">&#40;</span>A<span class="br0">&#41;</span><br /><span class="kw1">every</span> PrintCount<span class="br0">&#40;</span>CountLetters<span class="br0">&#40;</span><span class="sy1">!</span>A<span class="br0">&#41;</span><span class="br0">&#41;</span>    <br /><span class="kw1">end</span><br />&#160;<br /><span class="kw1">procedure</span> CountLetters<span class="br0">&#40;</span>fn<span class="br0">&#41;</span>  <span class="co1">#: Return case insensitive count of letters</span><br />   K <span class="sy1">:=</span> <span class="kw4">table</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />   <span class="kw1">if</span> f <span class="sy1">:=</span> <span class="kw4">open</span><span class="br0">&#40;</span>fn<span class="sy1">,</span><span class="st0">&quot;r&quot;</span><span class="br0">&#41;</span> <span class="kw1">then</span> <span class="br0">&#123;</span><br />      <span class="kw1">every</span> c <span class="sy1">:=</span> <span class="sy1">!</span><span class="kw4">map</span><span class="br0">&#40;</span><span class="sy1">|</span><span class="kw4">read</span><span class="br0">&#40;</span>f<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">do</span> <br />         <span class="kw1">if</span> <span class="kw4">any</span><span class="br0">&#40;</span><span class="sy1">&amp;</span><span class="kw3">lcase</span><span class="sy1">,</span>c<span class="br0">&#41;</span> <span class="kw1">then</span> K<span class="br0">&#91;</span>c<span class="br0">&#93;</span> <span class="sy1">+:=</span> <span class="nu0">1</span><br />      <span class="kw4">close</span><span class="br0">&#40;</span>f<span class="br0">&#41;</span><br />      <span class="kw1">return</span> K<br />      <span class="br0">&#125;</span><br />   <span class="kw1">else</span> <span class="kw4">write</span><span class="br0">&#40;</span><span class="sy1">&amp;</span><span class="kw3">errout</span><span class="sy1">,</span><span class="st0">&quot;Unable to open file &quot;</span><span class="sy1">,</span>fn<span class="br0">&#41;</span><br /><span class="kw1">end</span><br />&#160;<br /><span class="kw1">procedure</span> PrintCount<span class="br0">&#40;</span><span class="kw7">T</span><span class="br0">&#41;</span>    <span class="co1">#: Print the letters </span><br /><span class="kw1">every</span> c <span class="sy1">:=</span> <span class="kw4">key</span><span class="br0">&#40;</span><span class="kw7">T</span><span class="br0">&#41;</span> <span class="kw1">do</span><br />   printf<span class="br0">&#40;</span><span class="st0">&quot;%s -&#160;%d<span class="es0">\n</span>&quot;</span><span class="sy1">,</span>c<span class="sy1">,</span><span class="kw7">T</span><span class="br0">&#91;</span>c<span class="br0">&#93;</span><span class="br0">&#41;</span><br /><span class="kw1">end</span></pre>
<div class="examplemeta libheader"><b>Library:</b> <a href="/wiki/Category:Icon_Programming_Library" title="Category:Icon Programming Library">Icon Programming Library</a></div>
<p><a rel="nofollow" class="external text" href="http://www.cs.arizona.edu/icon/library/src/procs/printf.icn">printf.icn provides formatting</a>
</p>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>c - 17
k - 5
s - 10
h - 2
p - 10
e - 41
m - 2
u - 12
b - 2
r - 25
o - 16
w - 1
d - 10
l - 10
t - 27
a - 10
i - 13
y - 5
f - 12
n - 28
v - 4</pre>
<h2><span class="mw-headline" id="J"><a href="/wiki/Category:J" title="Category:J">J</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=37" title="Edit section: J">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><br />Input is a directory-path with filename. Result is 26 integers representing counts of each letter, in alphabetic order (a's count is first).
</p>
<pre class="j highlighted_source">ltrfreq=: <span class="nu0">3</span>&#160;: <span class="nu0">0</span><br />  letters=. u: <span class="nu0">65</span> + i.<span class="nu0">26</span>  <span class="co1">NB. upper case letters</span><br />  &lt;: #/.~ letters <span class="sy0">(</span>, -. -.~<span class="sy0">)</span> toupper fread <span class="kw2">y</span>  <br /><span class="sy0">)</span></pre>
<p>Example use (based on <a href="/wiki/Read_a_configuration_file" title="Read a configuration file">a configuration file from another task</a>):
</p>
<pre class="j highlighted_source">   ltrfreq <span class="st_h">'config.file'</span><br /><span class="nu0">88</span> <span class="nu0">17</span> <span class="nu0">17</span> <span class="nu0">24</span> <span class="nu0">79</span> <span class="nu0">18</span> <span class="nu0">19</span> <span class="nu0">19</span> <span class="nu0">66</span> <span class="nu0">0</span> <span class="nu0">2</span> <span class="nu0">26</span> <span class="nu0">26</span> <span class="nu0">57</span> <span class="nu0">54</span> <span class="nu0">31</span> <span class="nu0">1</span> <span class="nu0">53</span> <span class="nu0">43</span> <span class="nu0">59</span> <span class="nu0">19</span> <span class="nu0">6</span> <span class="nu0">2</span> <span class="nu0">0</span> <span class="nu0">8</span> <span class="nu0">0</span></pre>
<h2><span class="mw-headline" id="Java"><a href="/wiki/Category:Java" title="Category:Java">Java</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=38" title="Edit section: Java">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Java" title="Java" class="mw-redirect">Java</a> version 5+</div>
<pre class="java5 highlighted_source"><span class="kw2">import</span> <span class="co2">java.io.BufferedReader</span><span class="sy0">;</span><br /><span class="kw2">import</span> <span class="co2">java.io.FileReader</span><span class="sy0">;</span><br /><span class="kw2">import</span> <span class="co2">java.io.IOException</span><span class="sy0">;</span><br /><span class="kw2">import</span> <span class="co2">java.util.Arrays</span><span class="sy0">;</span><br />&#160;<br /><span class="kw2">public</span> <span class="kw2">class</span> LetterFreq <span class="br0">&#123;</span><br />	<span class="kw2">public</span> <span class="kw2">static</span> <span class="kw3">int</span><span class="br0">&#91;</span><span class="br0">&#93;</span> countLetters<span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a> filename<span class="br0">&#41;</span> <span class="kw2">throws</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/IOException.html"><span class="kw20">IOException</span></a><span class="br0">&#123;</span><br />		<span class="kw3">int</span><span class="br0">&#91;</span><span class="br0">&#93;</span> freqs = <span class="kw2">new</span> <span class="kw3">int</span><span class="br0">&#91;</span><span class="nu0">26</span><span class="br0">&#93;</span><span class="sy0">;</span><br />		<a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/BufferedReader.html"><span class="kw20">BufferedReader</span></a> in = <span class="kw2">new</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/BufferedReader.html"><span class="kw20">BufferedReader</span></a><span class="br0">&#40;</span><span class="kw2">new</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/FileReader.html"><span class="kw20">FileReader</span></a><span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />		<a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a> line<span class="sy0">;</span><br />		<span class="kw1">while</span><span class="br0">&#40;</span><span class="br0">&#40;</span>line = in.<span class="me1">readLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">!</span>= <span class="kw4">null</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />			line = line.<span class="me1">toUpperCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />			<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw3">char</span> ch:line.<span class="me1">toCharArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />				<span class="kw1">if</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Character.html"><span class="kw21">Character</span></a>.<span class="me1">isLetter</span><span class="br0">&#40;</span>ch<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />					freqs<span class="br0">&#91;</span>ch - <span class="st0">'A'</span><span class="br0">&#93;</span>++<span class="sy0">;</span><br />				<span class="br0">&#125;</span><br />			<span class="br0">&#125;</span><br />		<span class="br0">&#125;</span><br />		in.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />		<span class="kw2">return</span> freqs<span class="sy0">;</span><br />	<span class="br0">&#125;</span><br />&#160;<br />	<span class="kw2">public</span> <span class="kw2">static</span> <span class="kw3">void</span> main<span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span> <span class="kw2">throws</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/IOException.html"><span class="kw20">IOException</span></a><span class="br0">&#123;</span><br />		<a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html"><span class="kw21">System</span></a>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Arrays.html"><span class="kw46">Arrays</span></a>.<span class="me1">toString</span><span class="br0">&#40;</span>countLetters<span class="br0">&#40;</span><span class="st0">&quot;filename.txt&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />	<span class="br0">&#125;</span><br /><span class="br0">&#125;</span></pre>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Java" title="Java" class="mw-redirect">Java</a> version 7+</div>
<p>In Java 7, we can use try with resources. The <code>countLetters</code> method would look like this:
</p>
<pre class="java5 highlighted_source"><span class="kw2">public</span> <span class="kw2">static</span> <span class="kw3">int</span><span class="br0">&#91;</span><span class="br0">&#93;</span> countLetters<span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a> filename<span class="br0">&#41;</span> <span class="kw2">throws</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/IOException.html"><span class="kw20">IOException</span></a><span class="br0">&#123;</span><br />	<span class="kw3">int</span><span class="br0">&#91;</span><span class="br0">&#93;</span> freqs = <span class="kw2">new</span> <span class="kw3">int</span><span class="br0">&#91;</span><span class="nu0">26</span><span class="br0">&#93;</span><span class="sy0">;</span><br />	<span class="kw2">try</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/BufferedReader.html"><span class="kw20">BufferedReader</span></a> in = <span class="kw2">new</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/BufferedReader.html"><span class="kw20">BufferedReader</span></a><span class="br0">&#40;</span><span class="kw2">new</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/FileReader.html"><span class="kw20">FileReader</span></a><span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />		<a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a> line<span class="sy0">;</span><br />		<span class="kw1">while</span><span class="br0">&#40;</span><span class="br0">&#40;</span>line = in.<span class="me1">readLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">!</span>= <span class="kw4">null</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />			line = line.<span class="me1">toUpperCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />			<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw3">char</span> ch:line.<span class="me1">toCharArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />				<span class="kw1">if</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Character.html"><span class="kw21">Character</span></a>.<span class="me1">isLetter</span><span class="br0">&#40;</span>ch<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />					freqs<span class="br0">&#91;</span>ch - <span class="st0">'A'</span><span class="br0">&#93;</span>++<span class="sy0">;</span><br />				<span class="br0">&#125;</span><br />			<span class="br0">&#125;</span><br />		<span class="br0">&#125;</span><br />	<span class="br0">&#125;</span><br />	<span class="kw2">return</span> freqs<span class="sy0">;</span><br /><span class="br0">&#125;</span></pre>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Java" title="Java" class="mw-redirect">Java</a> version 8+</div>
<p>In Java 8, we can use streams. This code also handles unicode codepoints as well. The <code>countLetters</code> method would look like this:
</p>
<pre class="java5 highlighted_source"><span class="kw2">public</span> <span class="kw2">static</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Map.html"><span class="kw46">Map</span></a><span class="sy0">&lt;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Integer.html"><span class="kw21">Integer</span></a>, <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Long.html"><span class="kw21">Long</span></a><span class="sy0">&gt;</span> countLetters<span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a> filename<span class="br0">&#41;</span> <span class="kw2">throws</span> <a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/io/IOException.html"><span class="kw20">IOException</span></a> <span class="br0">&#123;</span><br />    <span class="kw2">return</span> Files.<span class="me1">lines</span><span class="br0">&#40;</span>Paths.<span class="me1">get</span><span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="br0">&#41;</span><br />        .<span class="me1">flatMapToInt</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html"><span class="kw21">String</span></a>::chars<span class="br0">&#41;</span><br />        .<span class="me1">filter</span><span class="br0">&#40;</span><a href="http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Character.html"><span class="kw21">Character</span></a>::isLetter<span class="br0">&#41;</span><br />        .<span class="me1">boxed</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />        .<span class="me1">collect</span><span class="br0">&#40;</span>Collectors.<span class="me1">groupingBy</span><span class="br0">&#40;</span>Function.<span class="me1">identity</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, Collectors.<span class="me1">counting</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br /><span class="br0">&#125;</span></pre>
<h2><span class="mw-headline" id="JavaScript"><a href="/wiki/Category:JavaScript" title="Category:JavaScript">JavaScript</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=39" title="Edit section: JavaScript">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>JavaScript is no longer used only in environments which are carefully isolated from file systems, but JavaScript standards still do not specify standard file-system functions.
Leaving aside the particular and variable details of how files will be opened and read in environments like Node.js and OS X JavaScript for Automation etc.,
we can still use core JavasScript (ES5 in the example below), to count the characters in a text once it has been read from a file system.
</p>
<pre class="javascript highlighted_source"><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>txt<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />&#160;<br />    <span class="kw1">var</span> cs <span class="sy0">=</span> txt.<span class="me1">split</span><span class="br0">&#40;</span><span class="st0">''</span><span class="br0">&#41;</span><span class="sy0">,</span><br />        i <span class="sy0">=</span> cs.<span class="me1">length</span><span class="sy0">,</span><br />        dct <span class="sy0">=</span>  <span class="br0">&#123;</span><span class="br0">&#125;</span><span class="sy0">,</span><br />        c <span class="sy0">=</span> <span class="st0">''</span><span class="sy0">,</span><br />        keys<span class="sy0">;</span><br />&#160;<br />    while <span class="br0">&#40;</span>i<span class="sy0">--</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />        c <span class="sy0">=</span> cs<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy0">;</span><br />        dct<span class="br0">&#91;</span>c<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#40;</span>dct<span class="br0">&#91;</span>c<span class="br0">&#93;</span> <span class="sy0">||</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span><span class="sy0">;</span><br />    <span class="br0">&#125;</span><br />&#160;<br />    keys <span class="sy0">=</span> <span class="kw4">Object</span>.<span class="me1">keys</span><span class="br0">&#40;</span>dct<span class="br0">&#41;</span><span class="sy0">;</span><br />    keys.<span class="me1">sort</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />    <span class="kw1">return</span> keys.<span class="me1">map</span><span class="br0">&#40;</span><span class="kw1">function</span> <span class="br0">&#40;</span>c<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="br0">&#91;</span>c<span class="sy0">,</span> dct<span class="br0">&#91;</span>c<span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">;</span> <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br /><span class="br0">&#125;</span><span class="br0">&#41;</span><span class="br0">&#40;</span><span class="st0">&quot;Not all that Mrs. Bennet, however, with the assistance of her five<span class="es0">\</span><br />daughters, could ask on the subject, was sufficient to draw from her<span class="es0">\</span><br />husband any satisfactory description of Mr. Bingley. They attacked him<span class="es0">\</span><br />in various ways--with barefaced questions, ingenious suppositions, and<span class="es0">\</span><br />distant surmises; but he eluded the skill of them all, and they were at<span class="es0">\</span><br />last obliged to accept the second-hand intelligence of their neighbour,<span class="es0">\</span><br />Lady Lucas. Her report was highly favourable. Sir William had been<span class="es0">\</span><br />delighted with him. He was quite young, wonderfully handsome, extremely<span class="es0">\</span><br />agreeable, and, to crown the whole, he meant to be at the next assembly<span class="es0">\</span><br />with a large party. Nothing could be more delightful! To be fond of<span class="es0">\</span><br />dancing was a certain step towards falling in love; and very lively<span class="es0">\</span><br />hopes of Mr. Bingley's heart were entertained.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span> </pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre class="javascript highlighted_source"><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="st0">&quot; &quot;</span><span class="sy0">,</span> <span class="nu0">121</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;!&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;'&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;,&quot;</span><span class="sy0">,</span> <span class="nu0">13</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;-&quot;</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;.&quot;</span><span class="sy0">,</span> <span class="nu0">9</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;;&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <br /><span class="br0">&#91;</span><span class="st0">&quot;B&quot;</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;H&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;L&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;M&quot;</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;N&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;S&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;T&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;W&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> <br /><span class="br0">&#91;</span><span class="st0">&quot;a&quot;</span><span class="sy0">,</span> <span class="nu0">53</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;b&quot;</span><span class="sy0">,</span> <span class="nu0">13</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;c&quot;</span><span class="sy0">,</span> <span class="nu0">17</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;d&quot;</span><span class="sy0">,</span> <span class="nu0">29</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;e&quot;</span><span class="sy0">,</span> <span class="nu0">82</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;f&quot;</span><span class="sy0">,</span> <span class="nu0">17</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;g&quot;</span><span class="sy0">,</span> <span class="nu0">16</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;h&quot;</span><span class="sy0">,</span> <span class="nu0">36</span><span class="br0">&#93;</span><span class="sy0">,</span><br /><span class="br0">&#91;</span><span class="st0">&quot;i&quot;</span><span class="sy0">,</span> <span class="nu0">44</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;j&quot;</span><span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;k&quot;</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;l&quot;</span><span class="sy0">,</span> <span class="nu0">34</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;m&quot;</span><span class="sy0">,</span> <span class="nu0">11</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;n&quot;</span><span class="sy0">,</span> <span class="nu0">41</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;o&quot;</span><span class="sy0">,</span> <span class="nu0">40</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;p&quot;</span><span class="sy0">,</span> <span class="nu0">8</span><span class="br0">&#93;</span><span class="sy0">,</span> <br /><span class="br0">&#91;</span><span class="st0">&quot;q&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;r&quot;</span><span class="sy0">,</span> <span class="nu0">35</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;s&quot;</span><span class="sy0">,</span> <span class="nu0">39</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;t&quot;</span><span class="sy0">,</span> <span class="nu0">55</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;u&quot;</span><span class="sy0">,</span> <span class="nu0">20</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;v&quot;</span><span class="sy0">,</span> <span class="nu0">7</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;w&quot;</span><span class="sy0">,</span> <span class="nu0">17</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;x&quot;</span><span class="sy0">,</span> <span class="nu0">2</span><span class="br0">&#93;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="st0">&quot;y&quot;</span><span class="sy0">,</span> <span class="nu0">16</span><span class="br0">&#93;</span><span class="br0">&#93;</span></pre>
<h2><span class="mw-headline" id="jq"><a href="/wiki/Category:Jq" title="Category:Jq">jq</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=40" title="Edit section: jq">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
The following program will report the frequency of all characters in the input file, including newlines, returns, etc, provided the file will fit in memory.<pre class="text highlighted_source">&#160;<br /># Input: an array of strings.<br /># Output: an object with the strings as keys,<br /># the values of which are the corresponding frequencies.<br />def counter:<br />  reduce .[] as $item ( {}; .[$item] += 1 )&#160;;<br />&#160;<br /># For neatness we sort the keys:<br />explode | map( [.] | implode ) | counter | . as $counter<br /> | keys | sort[] | [., $counter[.] ]<br />&#160;<br />&#160;</pre>
Example:<pre class="text highlighted_source">jq -s -R -c -f Letter_frequency.jq somefile.txt</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>[&quot;\n&quot;,12]
[&quot; &quot;,124]
[&quot;#&quot;,1]
[&quot;$&quot;,8]
[&quot;(&quot;,4]
[&quot;)&quot;,4]
[&quot;+&quot;,3]
[&quot;,&quot;,4]
[&quot;-&quot;,4]
[&quot;.&quot;,9]
[&quot;0&quot;,3]
[&quot;1&quot;,7]
[&quot;:&quot;,2]
[&quot;;&quot;,2]
[&quot;=&quot;,4]
...</pre>
<h2><span class="mw-headline" id="Julia"><a href="/wiki/Category:Julia" title="Category:Julia">Julia</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=41" title="Edit section: Julia">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Julia" title="Julia" class="mw-redirect">Julia</a> version 0.6</div>
<pre class="text highlighted_source">using DataStructures<br />function letterfreq(file::AbstractString; fltr::Function=(_) -&gt; true)<br />    h = counter(Char)<br />    for c in readstring(file)<br />        push!(h, c)<br />    end<br />    h = Dict(h)<br />    filter!((k, _) -&gt; fltr(k), h)<br />    return sort(h)<br />end<br />&#160;<br />display(letterfreq(&quot;src/Letter_frequency.jl&quot;; fltr=isalpha))</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>DataStructures.OrderedDict{Char,Int64} with 29 entries:
  'A' =&gt; 1
  'C' =&gt; 1
  'D' =&gt; 2
  'F' =&gt; 1
  'L' =&gt; 3
  'S' =&gt; 2
  'a' =&gt; 9
  'b' =&gt; 1
  'c' =&gt; 13
  'd' =&gt; 5
  'e' =&gt; 30
  'f' =&gt; 13
  'g' =&gt; 4
  'h' =&gt; 10
  'i' =&gt; 14
  'j' =&gt; 1
  'k' =&gt; 3
  'l' =&gt; 11
  'n' =&gt; 15
  ⋮   =&gt; ⋮</pre>
<h2><span class="mw-headline" id="K"><a href="/wiki/Category:K" title="Category:K">K</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=42" title="Edit section: K">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">+(?a;#:'=a:,/0:`)</pre>
<p>Example: The file "hello.txt" contains the string "Hello, world!"
</p>
<pre class="text highlighted_source">&#160;<br />  c:+(?a;#:'=a:,/0:`hello.txt)<br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>((&quot;H&quot;;1)
 (&quot;e&quot;;1)
 (&quot;l&quot;;3)
 (&quot;o&quot;;2)
 (&quot;,&quot;;1)
 (&quot; &quot;;1)
 (&quot;w&quot;;1)
 (&quot;r&quot;;1)
 (&quot;d&quot;;1)
 (&quot;!&quot;;1))
</pre>
<p>Sort on decreasing occurrences:
</p>
<pre class="text highlighted_source">&#160;<br />     <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="f794b7">[email&#160;protected]</a>&gt;c[;1]<br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>((&quot;l&quot;;3)
 (&quot;o&quot;;2)
 (&quot;H&quot;;1)
 (&quot;e&quot;;1)
 (&quot;,&quot;;1)
 (&quot; &quot;;1)
 (&quot;w&quot;;1)
 (&quot;r&quot;;1)
 (&quot;d&quot;;1)
 (&quot;!&quot;;1))
</pre>
<h2><span class="mw-headline" id="Kotlin"><a href="/wiki/Category:Kotlin" title="Category:Kotlin">Kotlin</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=43" title="Edit section: Kotlin">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="scala highlighted_source"><span class="co1">// version 1.1.2</span><br />&#160;<br /><a href="http://scala-lang.org"><span class="kw1">import</span></a> java.<span class="me1">io</span>.<span class="me1">File</span><br />&#160;<br />fun main<span class="br0">&#40;</span>args<span class="sy0">:</span> Array<span class="sy0">&lt;</span>String<span class="sy0">&gt;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    <a href="http://scala-lang.org"><span class="kw1">val</span></a> text <span class="sy0">=</span> File<span class="br0">&#40;</span><span class="st0">&quot;input.txt&quot;</span><span class="br0">&#41;</span>.<span class="me1">readText</span><span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="me1">toLowerCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />    <a href="http://scala-lang.org"><span class="kw1">val</span></a> letterMap <span class="sy0">=</span> text.<span class="me1">filter</span> <span class="br0">&#123;</span> it in <span class="st0">'a'</span>..<span class="st0">'z'</span> <span class="br0">&#125;</span>.<span class="me1">groupBy</span> <span class="br0">&#123;</span> it <span class="br0">&#125;</span>.<span class="me1">toSortedMap</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />    <a href="http://scala-lang.org"><span class="kw1">for</span></a> <span class="br0">&#40;</span>letter in letterMap<span class="br0">&#41;</span> println<span class="br0">&#40;</span><span class="st0">&quot;${letter.key} = ${letter.value.size}&quot;</span><span class="br0">&#41;</span><br />    <a href="http://scala-lang.org"><span class="kw1">val</span></a> sum <span class="sy0">=</span> letterMap.<span class="me1">values</span>.<span class="me1">sumBy</span> <span class="br0">&#123;</span> it.<span class="me1">size</span> <span class="br0">&#125;</span><br />    println<span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\n</span>Total letters = $sum&quot;</span><span class="br0">&#41;</span><br /><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<p>'input.txt' just contains two pangrams:
</p><p>The quick brown fox jumps over the lazy dog.
Sphinx of black quartz, judge my vow.
</p>
<pre>a = 3
b = 2
c = 2
d = 2
e = 4
f = 2
g = 2
h = 3
i = 2
j = 2
k = 2
l = 2
m = 2
n = 2
o = 6
p = 2
q = 2
r = 3
s = 2
t = 3
u = 4
v = 2
w = 2
x = 2
y = 2
z = 2

Total letters = 64
</pre>
<h2><span class="mw-headline" id="Liberty_BASIC"><a href="/wiki/Category:Liberty_BASIC" title="Category:Liberty BASIC">Liberty BASIC</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=44" title="Edit section: Liberty BASIC">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Un-rem a line to convert to all-upper-case.
Letter freq'y is printed as percentages.
</p>
<pre class="lb highlighted_source">&#160;<br />    <span class="kw1">open</span> <span class="st0">&quot;text.txt&quot;</span> <span class="kw1">for</span> <span class="kw1">input</span> <span class="kw1">as</span> <span class="sy0">#</span>i<br />        txt$ <span class="sy0">=</span><span class="kw1">input</span>$<span class="br0">&#40;</span> <span class="sy0">#</span>i<span class="sy0">,</span> <span class="kw2">lof</span><span class="br0">&#40;</span> <span class="sy0">#</span>i<span class="br0">&#41;</span><span class="br0">&#41;</span><br />        Le <span class="sy0">=</span><span class="kw2">len</span><span class="br0">&#40;</span> txt$<span class="br0">&#41;</span><br />    <span class="kw1">close</span> <span class="sy0">#</span>i<br />&#160;<br />    <span class="kw1">dim</span> LetterFreqy<span class="br0">&#40;</span> <span class="nu0">255</span><span class="br0">&#41;</span><br />&#160;<br />    <span class="co1">'   txt$ =upper$( txt$)</span><br />&#160;<br />    <span class="kw1">for</span> i <span class="sy0">=</span><span class="nu0">1</span> <span class="kw1">to</span> Le<br />        char <span class="sy0">=</span><span class="kw2">asc</span><span class="br0">&#40;</span> <span class="kw2">mid$</span><span class="br0">&#40;</span> txt$<span class="sy0">,</span> i<span class="sy0">,</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />        <span class="kw1">if</span> char <span class="sy0">&gt;=</span><span class="nu0">32</span> <span class="kw1">then</span> LetterFreqy<span class="br0">&#40;</span> char<span class="br0">&#41;</span> <span class="sy0">=</span>LetterFreqy<span class="br0">&#40;</span> char<span class="br0">&#41;</span> <span class="sy0">+</span><span class="nu0">1</span><br />    <span class="kw1">next</span> i<br />&#160;<br />    <span class="kw1">for</span> j <span class="sy0">=</span><span class="nu0">32</span> <span class="kw1">to</span> <span class="nu0">255</span><br />        <span class="kw1">if</span> LetterFreqy<span class="br0">&#40;</span> j<span class="br0">&#41;</span> <span class="sy0">&lt;&gt;</span><span class="nu0">0</span> <span class="kw1">then</span> <span class="kw1">print</span> <span class="st0">&quot; Character #&quot;</span>; j<span class="sy0">,</span> <span class="st0">&quot;(&quot;</span>; <span class="kw2">chr$</span><span class="br0">&#40;</span> j<span class="br0">&#41;</span>;_<br />         <span class="st0">&quot;) appeared &quot;</span>; <span class="kw2">using</span><span class="br0">&#40;</span> <span class="st0">&quot;##.##&quot;</span><span class="sy0">,</span> <span class="nu0">100</span> <span class="sy0">*</span>LetterFreqy<span class="br0">&#40;</span> j<span class="br0">&#41;</span> <span class="sy0">/</span>Le<span class="br0">&#41;</span>; <span class="st0">&quot;% of the time.&quot;</span><br />    <span class="kw1">next</span> j<br />&#160;<br />    <span class="kw1">end</span><br />&#160;</pre>
<h2><span class="mw-headline" id="Lasso"><a href="/wiki/Category:Lasso" title="Category:Lasso">Lasso</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=45" title="Edit section: Lasso">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">local(<br />	str 	= 'Hello world!',<br />	freq	= map<br />)<br />// as a loop. arguably quicker than query expression<br />loop(#str-&gt;size) =&gt; {<br />	#freq-&gt;keys&#160;!&gt;&gt; #str-&gt;get(loop_count)&#160;? <br />		#freq-&gt;insert(#str-&gt;get(loop_count) = #str-&gt;values-&gt;find(#str-&gt;get(loop_count))-&gt;size)<br />}<br />&#160;<br />// or<br />local(<br />	str 	= 'Hello world!',<br />	freq	= map<br />)<br />// as query expression, less code<br />with i in #str-&gt;values where #freq-&gt;keys&#160;!&gt;&gt; #i do =&gt; {<br />	#freq-&gt;insert(#i = #str-&gt;values-&gt;find(#i)-&gt;size)<br />}<br />&#160;<br />// output #freq<br />with elem in #freq-&gt;keys do =&gt; {^<br />	'&quot;'+#elem+'&quot;: '+#freq-&gt;find(#elem)+'\r'<br />^}</pre>
<h2><span class="mw-headline" id="Lua"><a href="/wiki/Category:Lua" title="Category:Lua">Lua</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=46" title="Edit section: Lua">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This solution counts letters only, which could be changed by altering the pattern argument to 'gmatch' on line 31. It also treats upper and lower case letters as distinct, which could be changed by changing everything to upper or lower case with string.upper() or string.lower() before tallying.
</p>
<pre class="lua highlighted_source"><span class="co1">-- Return entire contents of named file</span><br /><span class="kw1">function</span> readFile <span class="br0">&#40;</span>filename<span class="br0">&#41;</span><br />  <span class="kw1">local</span> file <span class="sy0">=</span> <span class="kw3">assert</span><span class="br0">&#40;</span><span class="kw3">io.open</span><span class="br0">&#40;</span>filename<span class="sy0">,</span> <span class="st0">&quot;r&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />  <span class="kw1">local</span> contents <span class="sy0">=</span> file<span class="sy0">:</span><span class="kw3">read</span><span class="br0">&#40;</span><span class="st0">&quot;*all&quot;</span><span class="br0">&#41;</span><br />  file<span class="sy0">:</span>close<span class="br0">&#40;</span><span class="br0">&#41;</span><br />  <span class="kw1">return</span> contents<br /><span class="kw1">end</span><br />&#160;<br /><span class="co1">-- Return a closure to keep track of letter counts</span><br /><span class="kw1">function</span> tally <span class="br0">&#40;</span><span class="br0">&#41;</span><br />  <span class="kw1">local</span> t <span class="sy0">=</span> <span class="br0">&#123;</span><span class="br0">&#125;</span><br />&#160;<br />  <span class="co1">-- Add x to tally if supplied, return tally list otherwise</span><br />  <span class="kw1">local</span> <span class="kw1">function</span> count <span class="br0">&#40;</span>x<span class="br0">&#41;</span><br />    <span class="kw1">if</span> x <span class="kw1">then</span><br />      <span class="kw1">if</span> t<span class="br0">&#91;</span>x<span class="br0">&#93;</span> <span class="kw1">then</span><br />        t<span class="br0">&#91;</span>x<span class="br0">&#93;</span> <span class="sy0">=</span> t<span class="br0">&#91;</span>x<span class="br0">&#93;</span> <span class="sy0">+</span> <span class="nu0">1</span><br />      <span class="kw1">else</span><br />        t<span class="br0">&#91;</span>x<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="nu0">1</span><br />      <span class="kw1">end</span><br />    <span class="kw1">else</span><br />      <span class="kw1">return</span> t<br />    <span class="kw1">end</span><br />  <span class="kw1">end</span><br />&#160;<br />  <span class="kw1">return</span> count<br /><span class="kw1">end</span><br />&#160;<br /><span class="co1">-- Main procedure</span><br /><span class="kw1">local</span> letterCount <span class="sy0">=</span> tally<span class="br0">&#40;</span><span class="br0">&#41;</span><br /><span class="kw1">for</span> letter <span class="kw2">in</span> readFile<span class="br0">&#40;</span>arg<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">:</span>gmatch<span class="br0">&#40;</span><span class="st0">&quot;%a&quot;</span><span class="br0">&#41;</span> <span class="kw1">do</span><br />  letterCount<span class="br0">&#40;</span>letter<span class="br0">&#41;</span><br /><span class="kw1">end</span><br /><span class="kw1">for</span> k<span class="sy0">,</span> v <span class="kw2">in</span> <span class="kw3">pairs</span><span class="br0">&#40;</span>letterCount<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">do</span><br />  <span class="kw3">print</span><span class="br0">&#40;</span>k<span class="sy0">,</span> v<span class="br0">&#41;</span><br /><span class="kw1">end</span></pre>
<p>Output from running this script on itself:
</p>
<pre>i       24
g       2
h       4
e       61
f       16
c       19
d       17
R       2
o       31
p       7
m       4
n       42
k       4
l       40
y       4
w       1
x       7
u       18
v       2
s       14
t       54
a       24
C       3
M       1
A       1
F       2
r       32</pre>
<h2><span class="mw-headline" id="Maple"><a href="/wiki/Category:Maple" title="Category:Maple">Maple</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=47" title="Edit section: Maple">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">StringTools:-CharacterFrequencies(readbytes(&quot;File.txt&quot;,infinity,TEXT))</pre>
<h2><span class="mw-headline" id="Mathematica_.2F_Wolfram_Language"><a href="/wiki/Category:Mathematica" title="Category:Mathematica">Mathematica</a> / <a href="/wiki/Category:Wolfram_Language" title="Category:Wolfram Language">Wolfram Language</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=48" title="Edit section: Mathematica / Wolfram Language">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">Tally[Characters[Import[&quot;file.txt&quot;,&quot;Text&quot;]]]</pre>
<h2><span class="mw-headline" id="MATLAB_.2F_Octave"><a href="/wiki/Category:MATLAB" title="Category:MATLAB">MATLAB</a> / <a href="/wiki/Category:Octave" title="Category:Octave">Octave</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=49" title="Edit section: MATLAB / Octave">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="matlab highlighted_source"><span class="kw1">function</span> u = letter_frequency<span class="br0">&#40;</span>t<span class="br0">&#41;</span><br />	<span class="kw1">if</span> ischar<span class="br0">&#40;</span>t<span class="br0">&#41;</span><br />		t = <a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/abs.html"><span class="kw2">abs</span></a><span class="br0">&#40;</span>t<span class="br0">&#41;</span>;<br />	<span class="kw1">end</span>; <br />	A = <a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sparse.html"><span class="kw2">sparse</span></a><span class="br0">&#40;</span>t+<span class="nu0">1</span>,<span class="nu0">1</span>,<span class="nu0">1</span>,<span class="nu0">256</span>,<span class="nu0">1</span><span class="br0">&#41;</span>;<br />	printf<span class="br0">&#40;</span><span class="co2">'&quot;%c&quot;:%i\n'</span>,<span class="br0">&#91;</span><a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/find.html"><span class="kw2">find</span></a><span class="br0">&#40;</span>A<span class="br0">&#41;</span>-<span class="nu0">1</span>,A<span class="br0">&#40;</span>A&gt;<span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#93;</span>'<span class="br0">&#41;</span><br /><span class="kw1">end</span></pre>
<h2><span class="mw-headline" id="NetRexx"><a href="/wiki/Category:NetRexx" title="Category:NetRexx">NetRexx</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=50" title="Edit section: NetRexx">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="examplemeta translation"><b>Translation of</b>: <a href="#REXX">REXX</a></div>
<pre class="netrexx highlighted_source"><span class="coMULTI">/* NetRexx ************************************************************<br />* 22.05.2013 Walter Pachl  translated from REXX<br />**********************************************************************/</span><br />options replace format comments java crossref symbols nobinary<br />&#160;<br />  <span class="kw1">parse</span> arg dsn .<br />  <span class="kw1">if</span> dsn = <span class="st0">''</span> <span class="kw3">then</span><br />    dsn = <span class="st0">'test.txt'</span><br />  cnt=<span class="nu0">0</span><br />  totChars=<span class="nu0">0</span>                         <span class="coMULTI">/*count of the total num of chars*/</span><br />  totLetters=<span class="nu0">0</span>                       <span class="coMULTI">/*count of the total num letters.*/</span><br />  indent=<span class="st0">' '</span>.<span class="kw6">left</span><span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span>                <span class="coMULTI">/*used for indentation of output.*/</span><br />  lines = scanFile<span class="br0">&#40;</span>dsn<span class="br0">&#41;</span><br />  <span class="kw1">loop</span> l_ = <span class="nu0">1</span> to lines<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><br />    line = lines<span class="br0">&#91;</span>l_<span class="br0">&#93;</span><br />&#160;<br />    <span class="kw1">Say</span> <span class="st0">'&gt;'</span>line<span class="st0">'&lt;'</span> line.<span class="me0">length</span>       <span class="coMULTI">/* that's in test.txt            */</span><br />    <span class="coMULTI">/*<br />    lrx=left_right(line)<br />    Parse lrx leftx rightx<br />    Say ' 'leftx<br />    Say ' 'rightx<br />    */</span><br />    <span class="kw1">loop</span> k=<span class="nu0">1</span> for line.<span class="me0">length</span><span class="br0">&#40;</span><span class="br0">&#41;</span>       <span class="coMULTI">/*loop over characters           */</span><br />      totChars=totChars+<span class="nu0">1</span>            <span class="coMULTI">/*Increment total number of chars*/</span><br />      c=line.<span class="kw6">substr</span><span class="br0">&#40;</span>k,<span class="nu0">1</span><span class="br0">&#41;</span>             <span class="coMULTI">/*get character number k         */</span><br />      cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>=cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>+<span class="nu0">1</span>                <span class="coMULTI">/*increment the character's count*/</span><br />      <span class="kw3">End</span><br />    <span class="kw3">end</span> l_<br />&#160;<br />  w=totChars.<span class="me0">length</span>                  <span class="coMULTI">/*used for right-aligning counts.*/</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> lines<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="st0">'records.'</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> totChars <span class="st0">'characters.'</span><br />  <span class="kw1">Loop</span> L=<span class="nu0">0</span> to <span class="nu0">255</span>                    <span class="coMULTI">/* display nonzero letter counts */</span><br />    c=l.<span class="kw6">d2c</span>                          <span class="coMULTI">/* the character in question     */</span><br />    <span class="kw1">if</span> cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span><span class="sy0">&gt;</span><span class="nu0">0</span> <span class="sy0">&amp;</span> c.<span class="kw6">datatype</span><span class="br0">&#40;</span><span class="st0">'M'</span><span class="br0">&#41;</span><span class="sy0">&gt;</span><span class="nu0">0</span> <span class="kw3">Then</span> <span class="kw1">Do</span> <span class="coMULTI">/* was found in the file  */</span><br />                                     <span class="coMULTI">/* and is a latin letter         */</span><br />      <span class="kw1">say</span> indent <span class="st0">&quot;(Latin) letter &quot;</span> c <span class="st0">'count:'</span> cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>.<span class="kw6">right</span><span class="br0">&#40;</span>w<span class="br0">&#41;</span> <span class="coMULTI">/* tell */</span><br />      totLetters=totLetters+cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>   <span class="coMULTI">/* increment number of letters   */</span><br />      <span class="kw3">End</span><br />    <span class="kw3">End</span><br />&#160;<br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> totLetters <span class="st0">'(Latin) letters.'</span><br />  <span class="kw1">say</span> <span class="st0">'                           other charactes follow'</span><br />  other=<span class="nu0">0</span><br />  <span class="kw1">loop</span> m=<span class="nu0">0</span> to <span class="nu0">255</span>                    <span class="coMULTI">/* now for non-letters           */</span><br />    c=m.<span class="kw6">d2c</span>                          <span class="coMULTI">/* the character in question     */</span><br />    y=c.<span class="kw6">c2x</span>                          <span class="coMULTI">/* the hex representation        */</span><br />    <span class="kw1">if</span> cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span><span class="sy0">&gt;</span><span class="nu0">0</span> <span class="sy0">&amp;</span> c.<span class="kw6">datatype</span><span class="br0">&#40;</span><span class="st0">'M'</span><span class="br0">&#41;</span>=<span class="nu0">0</span> <span class="kw3">Then</span> <span class="kw1">Do</span> <span class="coMULTI">/* was found in the file  */</span><br />                                     <span class="coMULTI">/* and is not a latin letter     */</span><br />      other=other+cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>             <span class="coMULTI">/* increment count               */</span><br />      _=cnt<span class="br0">&#91;</span>c<span class="br0">&#93;</span>.<span class="kw6">right</span><span class="br0">&#40;</span>w<span class="br0">&#41;</span>              <span class="coMULTI">/* prepare output of count       */</span><br />      <span class="kw1">select</span>                         <span class="coMULTI">/*make the character viewable.   */</span><br />       <span class="kw3">when</span> c<span class="sy0">&lt;&lt;</span><span class="st0">' '</span> <span class="sy0">|</span> m==<span class="nu0">255</span> <span class="kw3">then</span> <span class="kw1">say</span> indent <span class="st0">&quot;'&quot;</span>y<span class="st0">&quot;'x character count:&quot;</span> _<br />       <span class="kw3">when</span> c==<span class="st0">' '</span>          <span class="kw3">then</span> <span class="kw1">say</span> indent <span class="st0">&quot;blank character count:&quot;</span> _<br />       <span class="kw3">otherwise</span>                 <span class="kw1">say</span> indent <span class="st0">&quot;   &quot;</span> c <span class="st0">'character count:'</span> _<br />       <span class="kw3">end</span><br />     <span class="kw3">end</span><br />   <span class="kw3">end</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> other <span class="st0">'other characters.'</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> totLetters <span class="st0">'letters.'</span><br />&#160;<br /><span class="co1">-- Read a file and return contents as a Rexx indexed string</span><br />method scanFile<span class="br0">&#40;</span>dsn<span class="br0">&#41;</span> <span class="kw2">public</span> <span class="kw2">static</span> <span class="kw2">returns</span> Rexx<br />&#160;<br />  fileLines = <span class="st0">''</span><br />  <span class="kw1">do</span><br />    inFile = File<span class="br0">&#40;</span>dsn<span class="br0">&#41;</span><br />    inFileScanner = Scanner<span class="br0">&#40;</span>inFile<span class="br0">&#41;</span><br />    <span class="kw1">loop</span> l_ = <span class="nu0">1</span> while inFileScanner.<span class="me0">hasNext</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />      fileLines<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> = l_<br />      fileLines<span class="br0">&#91;</span>l_<span class="br0">&#93;</span> = inFileScanner.<span class="me0">nextLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />      <span class="kw3">end</span> l_<br />    inFileScanner.<span class="me0">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />&#160;<br />  <span class="kw3">catch</span> ex = FileNotFoundException<br />    ex.<span class="me0">printStackTrace</span><br />  <span class="kw3">end</span><br />&#160;<br />  <span class="kw1">return</span> fileLines</pre>
<h2><span class="mw-headline" id="Nim"><a href="/wiki/Category:Nim" title="Category:Nim">Nim</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=51" title="Edit section: Nim">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">import tables, os<br />&#160;<br />var t = initCountTable[char]()<br />var f = open(paramStr(1))<br />for l in f.lines:<br />  for c in l:<br />    t.inc(c)<br />echo t</pre>
<h2><span class="mw-headline" id="Objeck"><a href="/wiki/Category:Objeck" title="Category:Objeck">Objeck</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=52" title="Edit section: Objeck">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="objeck highlighted_source">&#160;<br /><span class="kw1">use</span> IO<span class="sy0">;</span><br />&#160;<br /><span class="kw1">bundle</span> Default <span class="br0">&#123;</span><br />  <span class="kw1">class</span> Test <span class="br0">&#123;</span><br />    <span class="kw1">function</span> <span class="sy0">:</span> Main<span class="br0">&#40;</span>args <span class="sy0">:</span> <span class="kw2">String</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> ~ <span class="kw2">Nil</span> <span class="br0">&#123;</span><br />      freqs <span class="sy0">:=</span> CountLetters<span class="br0">&#40;</span><span class="st0">&quot;filename.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />      <span class="kw1">for</span><span class="br0">&#40;</span>i <span class="sy0">:=</span> 'A'<span class="sy0">;</span> i <span class="sy0">&lt;</span> 'Z'<span class="sy0">;</span> i <span class="sy0">+=</span> <span class="nu0">1</span><span class="sy0">;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />        Console<span class="sy0">-&gt;</span><span class="me1">Print</span><span class="br0">&#40;</span>i<span class="sy0">-&gt;</span><span class="me1">As</span><span class="br0">&#40;</span><span class="kw2">Char</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">-&gt;</span><span class="me1">Print</span><span class="br0">&#40;</span><span class="st0">&quot;=&gt;&quot;</span><span class="br0">&#41;</span><span class="sy0">-&gt;</span><span class="me1">PrintLine</span><span class="br0">&#40;</span>freqs<span class="br0">&#91;</span>i <span class="sy0">-</span> 'A'<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />      <span class="br0">&#125;</span><span class="sy0">;</span><br />    <span class="br0">&#125;</span><br />&#160;<br />    <span class="kw1">function</span> <span class="sy0">:</span> CountLetters<span class="br0">&#40;</span>filename <span class="sy0">:</span> <span class="kw2">String</span><span class="br0">&#41;</span> ~ <span class="kw2">Int</span><span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span><br />      freqs <span class="sy0">:=</span> Int<span class="sy0">-&gt;</span><span class="me1">New</span><span class="br0">&#91;</span><span class="nu0">26</span><span class="br0">&#93;</span><span class="sy0">;</span><br />      reader <span class="sy0">:=</span> FileReader<span class="sy0">-&gt;</span><span class="me1">New</span><span class="br0">&#40;</span>filename<span class="br0">&#41;</span><span class="sy0">;</span><br />      <span class="kw1">while</span><span class="br0">&#40;</span>reader<span class="sy0">-&gt;</span><span class="me1">IsEOF</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&lt;&gt;</span> <span class="kw3">true</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />        line <span class="sy0">:=</span> reader<span class="sy0">-&gt;</span><span class="me1">ReadString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">-&gt;</span><span class="me1">ToUpper</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />        <span class="kw1">each</span><span class="br0">&#40;</span>i <span class="sy0">:</span> line<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />          ch <span class="sy0">:=</span> line<span class="sy0">-&gt;</span><span class="me1">Get</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">;</span><br />          <span class="kw1">if</span><span class="br0">&#40;</span>ch<span class="sy0">-&gt;</span><span class="me1">IsChar</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />            index <span class="sy0">:=</span> ch <span class="sy0">-</span> 'A'<span class="sy0">;</span><br />            freqs<span class="br0">&#91;</span>index<span class="br0">&#93;</span> <span class="sy0">:=</span> freqs<span class="br0">&#91;</span>index<span class="br0">&#93;</span> <span class="sy0">+</span> <span class="nu0">1</span><span class="sy0">;</span><br />          <span class="br0">&#125;</span><span class="sy0">;</span><br />        <span class="br0">&#125;</span><span class="sy0">;</span><br />      <span class="br0">&#125;</span><span class="sy0">;</span><br />      reader<span class="sy0">-&gt;</span><span class="me1">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br />      <span class="kw1">return</span> freqs<span class="sy0">;</span><br />    <span class="br0">&#125;</span><br />  <span class="br0">&#125;</span><br /><span class="br0">&#125;</span>  <br />&#160;</pre>
<h2><span class="mw-headline" id="Objective-C"><a href="/wiki/Category:Objective-C" title="Category:Objective-C">Objective-C</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=53" title="Edit section: Objective-C">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="objc highlighted_source"><span class="co1">#import &lt;Foundation/Foundation.h&gt;</span><br />&#160;<br /><span class="kw4">int</span> main <span class="br0">&#40;</span><span class="kw4">int</span> argc, <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>argv<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />  @autoreleasepool <span class="br0">&#123;</span><br />&#160;<br />    <a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSData_Class/"><span class="kw5">NSData</span></a> <span class="sy0">*</span>data <span class="sy0">=</span> <span class="br0">&#91;</span><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSData_Class/"><span class="kw5">NSData</span></a> dataWithContentsOfFile<span class="sy0">:</span>@<span class="br0">&#40;</span>argv<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#93;</span>;<br />    <a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/"><span class="kw5">NSString</span></a> <span class="sy0">*</span><span class="kw4">string</span> <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/"><span class="kw5">NSString</span></a> alloc<span class="br0">&#93;</span> initWithData<span class="sy0">:</span>data encoding<span class="sy0">:</span>NSUTF8StringEncoding<span class="br0">&#93;</span>;<br />    <a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSCountedSet_Class/"><span class="kw5">NSCountedSet</span></a> <span class="sy0">*</span>countedSet <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#91;</span><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSCountedSet_Class/"><span class="kw5">NSCountedSet</span></a> alloc<span class="br0">&#93;</span> init<span class="br0">&#93;</span>;<br />    NSUInteger len <span class="sy0">=</span> <span class="br0">&#91;</span><span class="kw4">string</span> length<span class="br0">&#93;</span>;<br />    <span class="kw1">for</span> <span class="br0">&#40;</span>NSUInteger i <span class="sy0">=</span> <span class="nu0">0</span>; i &lt; len; i<span class="sy0">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />      unichar c <span class="sy0">=</span> <span class="br0">&#91;</span><span class="kw4">string</span> characterAtIndex<span class="sy0">:</span>i<span class="br0">&#93;</span>;<br />      <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#91;</span><span class="br0">&#91;</span><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSCharacterSet_Class/"><span class="kw5">NSCharacterSet</span></a> letterCharacterSet<span class="br0">&#93;</span> characterIsMember<span class="sy0">:</span>c<span class="br0">&#93;</span><span class="br0">&#41;</span><br />        <span class="br0">&#91;</span>countedSet addObject<span class="sy0">:</span>@<span class="br0">&#40;</span>c<span class="br0">&#41;</span><span class="br0">&#93;</span>;<br />    <span class="br0">&#125;</span><br />    <span class="kw1">for</span> <span class="br0">&#40;</span><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSNumber_Class/"><span class="kw5">NSNumber</span></a> <span class="sy0">*</span>chr <span class="kw1">in</span> countedSet<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />      NSLog<span class="br0">&#40;</span><span class="co3">@</span><span class="st0">&quot;%C =&gt;&#160;%lu&quot;</span>, <span class="br0">&#40;</span>unichar<span class="br0">&#41;</span><span class="br0">&#91;</span>chr integerValue<span class="br0">&#93;</span>, <span class="br0">&#91;</span>countedSet countForObject<span class="sy0">:</span>chr<span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />    <span class="br0">&#125;</span><br />&#160;<br />  <span class="br0">&#125;</span><br />  <span class="kw1">return</span> <span class="nu0">0</span>;<br /><span class="br0">&#125;</span></pre>
<h2><span class="mw-headline" id="OCaml"><a href="/wiki/Category:OCaml" title="Category:OCaml">OCaml</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=54" title="Edit section: OCaml">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>We open a text file and compute letter frequency. Other characters than [a-z] and [A-Z] are ignored, and upper case letters are first converted to lower case before to compute letter frequency.
</p>
<pre class="ocaml highlighted_source"><span class="kw1">let</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">=</span><br />  <span class="kw1">let</span> ic <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALopen_in"><span class="kw3">open_in</span></a> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html"><span class="kw2">Sys</span></a><span class="sy0">.</span>argv<span class="sy0">.</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="kw1">in</span><br />  <span class="kw1">let</span> base <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char"><span class="kw3">int_of_char</span></a> <span class="sy0">'</span>a<span class="sy0">'</span> <span class="kw1">in</span><br />  <span class="kw1">let</span> arr <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html"><span class="kw2">Array</span></a><span class="sy0">.</span>make <span class="nu0">26</span> <span class="nu0">0</span> <span class="kw1">in</span><br />  <span class="kw1">try</span> <span class="kw1">while</span> <span class="kw1">true</span> <span class="kw1">do</span><br />    <span class="kw1">let</span> c <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Char.html"><span class="kw2">Char</span></a><span class="sy0">.</span>lowercase<span class="br0">&#40;</span><a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput_char"><span class="kw3">input_char</span></a> ic<span class="br0">&#41;</span> <span class="kw1">in</span><br />    <span class="kw1">let</span> ndx <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char"><span class="kw3">int_of_char</span></a> c <span class="sy0">-</span> base <span class="kw1">in</span><br />    <span class="kw1">if</span> ndx <span class="sy0">&lt;</span> <span class="nu0">26</span> <span class="sy0">&amp;&amp;</span> ndx <span class="sy0">&gt;=</span> <span class="nu0">0</span> <span class="kw1">then</span><br />      arr<span class="sy0">.</span><span class="br0">&#40;</span>ndx<span class="br0">&#41;</span> <span class="sy0">&lt;-</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc"><span class="kw3">succ</span></a> arr<span class="sy0">.</span><span class="br0">&#40;</span>ndx<span class="br0">&#41;</span><br />  <span class="kw1">done</span><br />  <span class="kw1">with</span> End_of_file <span class="sy0">-&gt;</span><br />    <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALclose_in"><span class="kw3">close_in</span></a> ic<span class="sy0">;</span><br />    <span class="kw1">for</span> i<span class="sy0">=</span><span class="nu0">0</span> <span class="kw1">to</span> <span class="nu0">25</span> <span class="kw1">do</span><br />      <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html"><span class="kw2">Printf</span></a><span class="sy0">.</span>printf <span class="st0">&quot;%c -&gt;&#160;%d\n&quot;</span> <span class="br0">&#40;</span><a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALchar_of_int"><span class="kw3">char_of_int</span></a><span class="br0">&#40;</span>i <span class="sy0">+</span> base<span class="br0">&#41;</span><span class="br0">&#41;</span> arr<span class="sy0">.</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><br />    <span class="kw1">done</span></pre>
<p>If we want to compute all characters in an UTF8 file, we must use an external library, for example Batteries. The following function takes as input a string that contains the path to the file, and prints all the characters together with their frequencies, ordered by increasing frequencies, on the standard output.
</p>
<pre class="ocaml highlighted_source">&#160;<br /><span class="kw1">open</span> Batteries<br />&#160;<br /><span class="kw1">let</span> frequency file <span class="sy0">=</span> <br />  <span class="kw1">let</span> freq <span class="sy0">=</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html"><span class="kw2">Hashtbl</span></a><span class="sy0">.</span>create <span class="nu0">52</span> <span class="kw1">in</span><br />    File<span class="sy0">.</span>with_file_in file<br />      <span class="br0">&#40;</span>Enum<span class="sy0">.</span>iter <span class="br0">&#40;</span><span class="kw1">fun</span> c <span class="sy0">-&gt;</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html"><span class="kw2">Hashtbl</span></a><span class="sy0">.</span>modify_def <span class="nu0">1</span> c <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc"><span class="kw3">succ</span></a> freq<span class="br0">&#41;</span> <span class="sy0">%</span> Text<span class="sy0">.</span>chars_of<span class="br0">&#41;</span><span class="sy0">;</span><br />    <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html"><span class="kw2">List</span></a><span class="sy0">.</span>iter <span class="br0">&#40;</span><span class="kw1">fun</span> <span class="br0">&#40;</span>k,v<span class="br0">&#41;</span> <span class="sy0">-&gt;</span> Text<span class="sy0">.</span>write_text <span class="kw1">stdout</span> k<span class="sy0">;</span> <br />                            <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html"><span class="kw2">Printf</span></a><span class="sy0">.</span>printf <span class="st0">&quot;&#160;%d\n&quot;</span> v<span class="br0">&#41;</span><br />    @@ <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html"><span class="kw2">List</span></a><span class="sy0">.</span>sort <span class="br0">&#40;</span><span class="kw1">fun</span> <span class="br0">&#40;</span>_,v<span class="br0">&#41;</span> <span class="br0">&#40;</span>_,v<span class="sy0">'</span><span class="br0">&#41;</span> <span class="sy0">-&gt;</span> <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALcompare"><span class="kw3">compare</span></a> v v<span class="sy0">'</span><span class="br0">&#41;</span><br />    @@ <a href="http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html"><span class="kw2">Hashtbl</span></a><span class="sy0">.</span>fold <span class="br0">&#40;</span><span class="kw1">fun</span> k v l <span class="sy0">-&gt;</span> <span class="br0">&#40;</span>Text<span class="sy0">.</span>of_uchar k,v<span class="br0">&#41;</span> <span class="sy0">::</span> l<span class="br0">&#41;</span> freq <span class="br0">&#91;</span><span class="br0">&#93;</span><br />&#160;</pre>
<h2><span class="mw-headline" id="OxygenBasic"><a href="/wiki/Category:OxygenBasic" title="Category:OxygenBasic">OxygenBasic</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=55" title="Edit section: OxygenBasic">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />indexbase 0<br />&#160;<br />sys a,e,i,c[255]<br />&#160;<br />string s=getfile &quot;t.txt&quot;<br />&#160;<br />e=len s<br />&#160;<br />for i=1 to e<br />  a=asc(s,i)<br />  ++c(a)<br />next<br />&#160;<br />cr=chr(13)+chr(10)<br />pr=&quot;Char Frequencies&quot; cr cr<br />for i=32 to 255<br />  pr+=chr(i) chr(9) c(i) cr<br />next<br />&#160;<br />print pr<br />'putfile &quot;CharCount.txt&quot;,pr<br />&#160;</pre>
<h2><span class="mw-headline" id="PARI.2FGP"><a href="/wiki/Category:PARI/GP" title="Category:PARI/GP">PARI/GP</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=56" title="Edit section: PARI/GP">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="parigp highlighted_source">v<span class="sy0">=</span><span class="kw1">vector</span><span class="br0">&#40;</span><span class="nu1">26</span><span class="br0">&#41;</span><span class="sy0">;</span><br />U<span class="sy0">=</span><span class="kw1">readvec</span><span class="br0">&#40;</span><span class="st0">&quot;foo.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br /><span class="kw1">for</span><span class="br0">&#40;</span>i<span class="sy0">=</span><span class="nu1">1</span><span class="sy0">,</span>#U<span class="sy0">,</span>u<span class="sy0">=</span><span class="kw1">Vecsmall</span><span class="br0">&#40;</span>U<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span><span class="kw1">for</span><span class="br0">&#40;</span>j<span class="sy0">=</span><span class="nu1">1</span><span class="sy0">,</span>#u<span class="sy0">,</span><span class="kw1">if</span><span class="br0">&#40;</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">&gt;</span><span class="nu1">64</span><span class="sy0">&amp;&amp;</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">&lt;</span><span class="nu1">91</span><span class="sy0">,</span>v<span class="br0">&#91;</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">-</span><span class="nu1">64</span><span class="br0">&#93;</span><span class="sy0">++,</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">&gt;</span><span class="nu1">96</span><span class="sy0">&amp;&amp;</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">&lt;</span><span class="nu1">123</span><span class="sy0">,</span>v<span class="br0">&#91;</span>u<span class="br0">&#91;</span>j<span class="br0">&#93;</span><span class="sy0">-</span><span class="nu1">96</span><span class="br0">&#93;</span><span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />v</pre>
<h2><span class="mw-headline" id="Pascal"><a href="/wiki/Category:Pascal" title="Category:Pascal">Pascal</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=57" title="Edit section: Pascal">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="pascal highlighted_source"><span class="kw1">program</span> LetterFrequency<span class="sy1">;</span><br /><span class="kw1">var</span><br />  textFile<span class="sy1">:</span> text<span class="sy1">;</span><br />  character<span class="sy1">:</span> <span class="kw4">char</span><span class="sy1">;</span><br />  counter<span class="sy1">:</span> <span class="kw4">array</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="sy1">..</span><span class="nu0">255</span><span class="br0">&#93;</span> <span class="kw1">of</span> <span class="kw4">integer</span><span class="sy1">;</span><br />  i<span class="sy1">:</span> <span class="kw4">integer</span><span class="sy1">;</span><br /><span class="kw1">begin</span><br />  <span class="kw1">for</span> i <span class="sy1">:</span><span class="sy3">=</span> low<span class="br0">&#40;</span>counter<span class="br0">&#41;</span> <span class="kw1">to</span> high<span class="br0">&#40;</span>counter<span class="br0">&#41;</span> <span class="kw1">do</span><br />    counter<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">:</span><span class="sy3">=</span> <span class="nu0">0</span><span class="sy1">;</span><br />  assign<span class="br0">&#40;</span>textFile<span class="sy1">,</span> <span class="st0">'a_text_file.txt'</span><span class="br0">&#41;</span><span class="sy1">;</span><br />  reset<span class="br0">&#40;</span>textFile<span class="br0">&#41;</span><span class="sy1">;</span><br />  <span class="kw1">while</span> <span class="kw1">not</span> <span class="kw3">eof</span><span class="br0">&#40;</span>textFile<span class="br0">&#41;</span> <span class="kw1">do</span><br />  <span class="kw1">begin</span><br />    <span class="kw1">while</span> <span class="kw1">not</span> <span class="kw3">eoln</span><span class="br0">&#40;</span>textFile<span class="br0">&#41;</span> <span class="kw1">do</span><br />    <span class="kw1">begin</span><br />      <span class="kw3">read</span><span class="br0">&#40;</span>textFile<span class="sy1">,</span> character<span class="br0">&#41;</span><span class="sy1">;</span><br />      inc<span class="br0">&#40;</span>counter<span class="br0">&#91;</span><span class="kw3">ord</span><span class="br0">&#40;</span>character<span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">;</span><br />    <span class="kw1">end</span><span class="sy1">;</span><br />    <span class="kw3">readln</span><span class="br0">&#40;</span>textFile<span class="br0">&#41;</span><span class="sy1">;</span><br />  <span class="kw1">end</span><span class="sy1">;</span><br />  <span class="kw1">for</span> i <span class="sy1">:</span><span class="sy3">=</span> low<span class="br0">&#40;</span>counter<span class="br0">&#41;</span> <span class="kw1">to</span> high<span class="br0">&#40;</span>counter<span class="br0">&#41;</span> <span class="kw1">do</span><br />    <span class="kw1">if</span> counter<span class="br0">&#91;</span>i<span class="br0">&#93;</span> &gt; <span class="nu0">0</span> <span class="kw1">then</span><br />      <span class="kw3">writeln</span><span class="br0">&#40;</span><span class="kw4">char</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy1">,</span> <span class="st0">': '</span><span class="sy1">,</span> counter<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">;</span><br /><span class="kw1">end</span><span class="sy1">.</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>&gt;: ./LetterFrequency
3: 2
a: 4
d: 3
e: 3
f: 3
g: 2
q: 1
r: 4
s: 3
t: 2
w: 2</pre>
<h2><span class="mw-headline" id="Perl"><a href="/wiki/Category:Perl" title="Category:Perl">Perl</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=58" title="Edit section: Perl">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Counts letters in files given on command line or piped to stdin. Case insensitive.
</p>
<pre class="perl highlighted_source"><span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">&lt;&gt;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="re0">$cnt</span><span class="br0">&#123;</span><a href="http://perldoc.perl.org/functions/lc.html"><span class="kw3">lc</span></a> <a href="http://perldoc.perl.org/functions/chop.html"><span class="kw3">chop</span></a><span class="br0">&#125;</span><span class="sy0">++</span> <span class="kw1">while</span> <a href="http://perldoc.perl.org/functions/length.html"><span class="kw3">length</span></a> <span class="br0">&#125;</span><br /><a href="http://perldoc.perl.org/functions/print.html"><span class="kw3">print</span></a> <span class="st0">&quot;$_: &quot;</span><span class="sy0">,</span> <span class="re0">$cnt</span><span class="br0">&#123;</span><span class="co5">$_</span><span class="br0">&#125;</span><span class="sy0">//</span><span class="nu0">0</span><span class="sy0">,</span> <span class="st0">&quot;<span class="es0">\n</span>&quot;</span> <span class="kw1">for</span> <span class="st_h">'a'</span> <span class="sy0">..</span> <span class="st_h">'z'</span><span class="sy0">;</span></pre>
<h2><span class="mw-headline" id="Perl_6"><a href="/wiki/Category:Perl_6" title="Category:Perl 6">Perl 6</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=59" title="Edit section: Perl 6">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In perl6, whenever you want to count things in a collection, the rule of thumb is to use the Bag structure.
</p>
<pre class="perl6 highlighted_source"><span class="kw3">say</span> bag lines»<span class="sy0">.</span><span class="kw3">comb</span></pre>
<h2><span class="mw-headline" id="Phix"><a href="/wiki/Category:Phix" title="Category:Phix">Phix</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=60" title="Edit section: Phix">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Counts own source or supplied filename
</p>
<pre class="text highlighted_source">sequence lc = repeat(0,#7E)<br />integer fn = open(command_line()[$],&quot;rb&quot;), ch<br />while 1 do<br />    ch = getc(fn)<br />    if ch=-1 then exit end if<br />    if ch&gt;=' ' and ch&lt;#7F then<br />        lc[ch] += 1<br />    end if<br />end while<br />close(fn)<br />&#160;<br />for i=' ' to #7E do<br />    if lc[i]!=0 then<br />        printf(1,&quot;'%c':&#160;%d%s&quot;,{i,lc[i],iff(mod(i,32)=31?'\n':'\t')})<br />    end if<br />end for<br />{} = wait_key()</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>' ': 77 '!': 1  '&quot;': 4  '#': 3  '$': 1  '%': 3  ''': 10 '(': 9  ')': 9  '+': 1  ',': 8  '-': 1  '0': 2  '1': 5  '2': 1  '3': 2  '7': 3  ':': 2  '&lt;': 1  '=': 10 '&gt;': 1  '?': 1
'E': 2  'F': 1  '[': 4  '\': 2  ']': 4  '_': 2
'a': 4  'b': 1  'c': 15 'd': 11 'e': 23 'f': 14 'g': 2  'h': 11 'i': 19 'k': 1  'l': 8  'm': 3  'n': 19 'o': 9  'p': 3  'q': 1  'r': 6  's': 3  't': 11 'u': 1  'w': 3  'x': 1    'y': 1  '{': 2  '}': 2
</pre>
<h2><span class="mw-headline" id="PHP"><a href="/wiki/Category:PHP" title="Category:PHP">PHP</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=61" title="Edit section: PHP">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="php highlighted_source"><span class="kw2">&lt;?php</span><br /><a href="http://www.php.net/print_r"><span class="kw3">print_r</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array_count_values"><span class="kw3">array_count_values</span></a><span class="br0">&#40;</span><a href="http://www.php.net/str_split"><span class="kw3">str_split</span></a><span class="br0">&#40;</span><a href="http://www.php.net/file_get_contents"><span class="kw3">file_get_contents</span></a><span class="br0">&#40;</span><span class="re0">$argv</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br /><span class="sy1">?&gt;</span></pre>
<h2><span class="mw-headline" id="PicoLisp"><a href="/wiki/Category:PicoLisp" title="Category:PicoLisp">PicoLisp</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=62" title="Edit section: PicoLisp">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">(let Freq NIL<br />   (in &quot;file.txt&quot;<br />      (while (char) (accu 'Freq @ 1)) )<br />   (sort Freq) )</pre>
<p>For a "file.txt":
</p>
<pre>abcd
cdef</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>-&gt; ((&quot;^J&quot; . 2) (&quot;a&quot; . 1) (&quot;b&quot; . 1) (&quot;c&quot; . 2) (&quot;d&quot; . 2) (&quot;e&quot; . 1) (&quot;f&quot; . 1))</pre>
<h2><span class="mw-headline" id="PL.2FI"><a href="/wiki/Category:PL/I" title="Category:PL/I">PL/I</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=63" title="Edit section: PL/I">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />frequencies: procedure options (main);<br />   declare tallies(26) fixed binary static initial ((26) 0);<br />   declare alphabet character (26) static initial<br />      ('ABCDEFGHIJKLMNOPQRSTUVWXYZ');<br />   declare c character (1), i fixed binary;<br />   declare in file;<br />&#160;<br />   open file (in) title ('/LETTER.DAT,type(text),recsize(200)') input;<br />&#160;<br />   on endfile (in) go to prepare_list;<br />&#160;<br />   do while('1'b);<br />      get file (in) edit (c) (a(1)); put edit (c) (a);<br />      i = index(alphabet, c);<br />      if i &gt; 0 then tallies(i) = tallies(i) + 1;<br />   end;<br />&#160;<br />prepare_list:<br />   put skip list('Letter', 'Frequency');<br />   do i = 1 to 26;<br />      if tallies(i) &gt; 0 then<br />         put skip list (substr(alphabet, i, 1), tallies(i));<br />   end;<br />end frequencies;</pre>
<p>Data:
</p>
<pre>THEQUICKBROWNFOX
JUMPSOVERTHELAZYDOG
</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>Letter                  Frequency 
A                               1 
B                               1 
C                               1 
D                               1 
E                               3 
F                               1 
G                               1 
H                               2 
I                               1 
J                               1 
K                               1 
L                               1 
M                               1 
N                               1 
O                               4 
P                               1 
Q                               1 
R                               2 
S                               1 
T                               2 
U                               2 
V                               1 
W                               1 
X                               1 
Y                               1 
Z                               1
</pre>
<h2><span class="mw-headline" id="PowerShell"><a href="/wiki/Category:PowerShell" title="Category:PowerShell">PowerShell</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=64" title="Edit section: PowerShell">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="powershell highlighted_source">&#160;<br /><span class="kw3">function</span> frequency <span class="br0">&#40;</span><span class="re0">$string</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    <span class="re0">$arr</span> <span class="sy0">=</span> <span class="re0">$string</span>.ToUpper<span class="br0">&#40;</span><span class="br0">&#41;</span>.ToCharArray<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">|</span><span class="kw3">where</span><span class="br0">&#123;</span><a href="about:blank"><span class="kw6">$_</span></a> <span class="kw4">-match</span> <span class="st0">'[A-KL-Z]'</span><span class="br0">&#125;</span> <br />    <span class="re0">$n</span> <span class="sy0">=</span> <span class="re0">$arr</span>.count<br />    <span class="re0">$arr</span> <span class="sy0">|</span> <span class="kw2">group</span> <span class="sy0">|</span> <span class="kw3">foreach</span><span class="br0">&#123;</span><br />        <span class="br0">&#91;</span>pscustomobject<span class="br0">&#93;</span><span class="sy0">@</span><span class="br0">&#123;</span>letter <span class="sy0">=</span> <span class="st0">&quot;$($_.name)&quot;</span>; frequency  <span class="sy0">=</span> <span class="st0">&quot;$([math]::round($($_.Count/$n),5))&quot;</span>; count <span class="sy0">=</span> <span class="st0">&quot;$($_.count)&quot;</span><span class="br0">&#125;</span><br />    <span class="br0">&#125;</span> <span class="sy0">|</span> <span class="kw2">sort</span> letter<br /><span class="br0">&#125;</span><br /><span class="re0">$file</span> <span class="sy0">=</span> <span class="st0">&quot;$($MyInvocation.MyCommand.Name )&quot;</span> <span class="co1">#Put the name of your file here</span><br />frequency $<span class="br0">&#40;</span><span class="kw1">get-content</span> <span class="re0">$file</span> <span class="sy0">-</span>Raw<span class="br0">&#41;</span><br />&#160;</pre>
<p><b>Output:</b>
</p>
<pre>letter frequency count
------ --------- -----
A      0.06809   16   
B      0.00426   1    
C      0.06809   16   
D      0.00851   2    
E      0.11064   26   
F      0.0383    9    
G      0.01702   4    
H      0.02979   7    
I      0.03404   8    
J      0.00426   1    
K      0.00426   1    
L      0.02553   6    
M      0.04255   10   
N      0.09362   22   
O      0.08085   19   
P      0.02128   5    
Q      0.01277   3    
R      0.10638   25   
S      0.02128   5    
T      0.10213   24   
U      0.05957   14   
V      0.00426   1    
W      0.00851   2    
Y      0.02979   7    
Z      0.00426   1 
</pre>
<h2><span class="mw-headline" id="Prolog"><a href="/wiki/Category:Prolog" title="Category:Prolog">Prolog</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=65" title="Edit section: Prolog">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Works with SWI-Prolog. <br />
Only alphabetic codes are computed in uppercase state. <br />
Uses <b>packlist/2</b> defined there&#160;: <a href="/wiki/Run-length_encoding#Prolog" title="Run-length encoding">Run-length encoding#Prolog</a> <br />
</p>
<pre class="prolog highlighted_source">frequency<span class="br0">&#40;</span>File<span class="br0">&#41;</span> <span class="sy1">:-</span><br />	read_file_to_codes<span class="br0">&#40;</span>File<span class="sy4">,</span> Code<span class="sy4">,</span> <span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">,</span><br />&#160;<br />	<span class="co1">% we only keep alphabetic codes</span><br />	<a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">include</span></a><span class="br0">&#40;</span>my_code_type<span class="sy4">,</span> Code<span class="sy4">,</span> LstCharCode<span class="br0">&#41;</span><span class="sy4">,</span><br />&#160;<br />	<span class="co1">% we translate char_codes into uppercase atoms.</span><br />	maplist<span class="br0">&#40;</span>my_upcase<span class="sy4">,</span> LstCharCode<span class="sy4">,</span> LstChar<span class="br0">&#41;</span><span class="sy4">,</span><br />&#160;<br />	<span class="co1">% sort and pack the list</span><br />	msort<span class="br0">&#40;</span>LstChar<span class="sy4">,</span> SortLstChar<span class="br0">&#41;</span><span class="sy4">,</span><br />	packList<span class="br0">&#40;</span>SortLstChar<span class="sy4">,</span> Freq<span class="br0">&#41;</span><span class="sy4">,</span><br />	maplist<span class="br0">&#40;</span>my_write<span class="sy4">,</span> Freq<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />&#160;<br />my_write<span class="br0">&#40;</span><span class="br0">&#91;</span>Num<span class="sy4">,</span> <a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Atom</span></a><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="sy1">:-</span><br />	swritef<span class="br0">&#40;</span>A<span class="sy4">,</span> <span class="st_h">'%3r'</span><span class="sy4">,</span> <span class="br0">&#91;</span>Num<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">,</span><br />	writef<span class="br0">&#40;</span><span class="st_h">'Number of&#160;%w&#160;:%w\n'</span><span class="sy4">,</span> <span class="br0">&#91;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Atom</span></a><span class="sy4">,</span> A<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />&#160;<br />my_code_type<span class="br0">&#40;</span>Code<span class="br0">&#41;</span> <span class="sy1">:-</span><br />	code_type<span class="br0">&#40;</span>Code<span class="sy4">,</span> alpha<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />my_upcase<span class="br0">&#40;</span>CharCode<span class="sy4">,</span> UpChar<span class="br0">&#41;</span> <span class="sy1">:-</span><br />	<a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">char_code</span></a><span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Atom</span></a><span class="sy4">,</span> CharCode<span class="br0">&#41;</span><span class="sy4">,</span><br />	upcase_atom<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Atom</span></a><span class="sy4">,</span> UpChar<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br /><span class="sy1">:-</span> use_module<span class="br0">&#40;</span>library<span class="br0">&#40;</span>clpfd<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">.</span><br /><span class="co1">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br /><span class="co1">%&#160;?- packList([a,a,a,b,c,c,c,d,d,e], L).</span><br /><span class="co1">%  L = [[3,a],[1,b],[3,c],[2,d],[1,e]] .</span><br /><span class="co1">%</span><br /><span class="co1">%&#160;?- packList(R,  [[3,a],[1,b],[3,c],[2,d],[1,e]]).</span><br /><span class="co1">% R = [a,a,a,b,c,c,c,d,d,e] .</span><br /><span class="co1">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span><br />packList<span class="br0">&#40;</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />packList<span class="br0">&#40;</span><span class="br0">&#91;</span>X<span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="sy4">,</span>X<span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="sy1">:-</span><br />	<span class="sy5">!</span><span class="sy4">.</span><br />&#160;<br />packList<span class="br0">&#40;</span><span class="br0">&#91;</span>X<span class="sy5">|</span>Rest<span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span>XRun<span class="sy5">|</span>Packed<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">:-</span><br />	run<span class="br0">&#40;</span>X<span class="sy4">,</span>Rest<span class="sy4">,</span> XRun<span class="sy4">,</span>RRest<span class="br0">&#41;</span><span class="sy4">,</span><br />	packList<span class="br0">&#40;</span>RRest<span class="sy4">,</span>Packed<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />run<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy4">,</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="sy4">,</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />run<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy4">,</span><span class="br0">&#91;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy5">|</span>LRest<span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span>N1<span class="sy4">,</span> <a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="br0">&#93;</span><span class="sy4">,</span>RRest<span class="br0">&#41;</span><span class="sy1">:-</span><br />	N #<span class="sy6">&gt;</span> <span class="nu0">0</span><span class="sy4">,</span><br />	N1 #<span class="sy6">=</span> N <span class="sy3">+</span> <span class="nu0">1</span><span class="sy4">,</span><br />	run<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy4">,</span>LRest<span class="sy4">,</span><span class="br0">&#91;</span>N<span class="sy4">,</span> <a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="br0">&#93;</span><span class="sy4">,</span>RRest<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;<br />run<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy4">,</span><span class="br0">&#91;</span>Other<span class="sy5">|</span>RRest<span class="br0">&#93;</span><span class="sy4">,</span> <span class="br0">&#91;</span><span class="nu0">1</span><span class="sy4">,</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="br0">&#93;</span><span class="sy4">,</span><span class="br0">&#91;</span>Other<span class="sy5">|</span>RRest<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy1">:-</span><br />	dif<span class="br0">&#40;</span><a href="http://pauillac.inria.fr/~deransar/prolog/bips.html"><span class="kw1">Var</span></a><span class="sy4">,</span>Other<span class="br0">&#41;</span><span class="sy4">.</span><br />&#160;</pre>
<div>
<dl><dt>Output:</div> for this file</dt></dl>
<pre>Number of A&#160;: 63
Number of B&#160;:  7
Number of C&#160;: 53
Number of D&#160;: 29
Number of E&#160;: 65
...
Number of T&#160;: 52
Number of U&#160;: 20
Number of V&#160;: 10
Number of W&#160;:  8
Number of X&#160;:  6
Number of Y&#160;: 12
true .
</pre>
<h2><span class="mw-headline" id="PureBasic"><a href="/wiki/Category:PureBasic" title="Category:PureBasic">PureBasic</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=66" title="Edit section: PureBasic">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Alphabetic codes are converted to uppercase before being used and no other codes are used as part of the calculations. <br />
</p>
<pre class="purebasic highlighted_source"><span class="kw1">Procedure</span> countLetters<span class="br0">&#40;</span>Array letterCounts<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>, textLine.s<span class="br0">&#41;</span><br />  <span class="co1">;counts only letters A -&gt; Z, uses index 0 of letterCounts() to keep a total of all counts</span><br />  <span class="kw1">Protected</span> i, lineLength <span class="sy0">=</span> <span class="kw2">Len</span><span class="br0">&#40;</span>textLine<span class="br0">&#41;</span>, letter<br />&#160;<br />  textLine <span class="sy0">=</span> <span class="kw2">UCase</span><span class="br0">&#40;</span>textLine<span class="br0">&#41;</span><br />  <span class="kw1">For</span> i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">To</span> lineLength<br />    letter <span class="sy0">=</span> <span class="kw2">Asc</span><span class="br0">&#40;</span><span class="kw2">Mid</span><span class="br0">&#40;</span>textLine, i, <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">-</span> 'A' <span class="sy0">+</span> <span class="nu0">1</span><br />    <span class="kw1">If</span> letter <span class="sy0">&gt;=</span> <span class="nu0">1</span> <span class="kw1">And</span> letter <span class="sy0">&lt;=</span> <span class="nu0">26</span><br />      letterCounts<span class="br0">&#40;</span>letter<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span> <span class="co1">;tally individual letter count</span><br />      letterCounts<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="nu0">1</span>      <span class="co1">;increment total letter count</span><br />    <span class="kw1">EndIf</span><br />  <span class="kw1">Next</span><br /><span class="kw1">EndProcedure</span><br />&#160;<br /><span class="kw1">If</span> <span class="kw2">OpenConsole</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />  <span class="kw1">Define</span> filename.s, <span class="kw2">fileID</span>, i<br />  filename <span class="sy0">=</span> <span class="kw2">OpenFileRequester</span><span class="br0">&#40;</span><span class="st0">&quot;Select text file to examine&quot;</span>, <span class="st0">&quot;*.txt&quot;</span>, <span class="st0">&quot;Text (*.txt)|*.txt;|All files (*.*)|*.*&quot;</span>, <span class="nu0">0</span><span class="br0">&#41;</span><br />  <span class="kw2">fileID</span> <span class="sy0">=</span> <span class="nu0">0</span><br />  <span class="kw1">If</span> <span class="kw2">ReadFile</span><span class="br0">&#40;</span><span class="kw2">fileID</span>, filename<span class="br0">&#41;</span><br />    <span class="kw1">Dim</span> letterCounts<span class="br0">&#40;</span><span class="nu0">26</span><span class="br0">&#41;</span> <span class="co1">;A - Z only, index 0 contains the total of all letter counts</span><br />&#160;<br />    <span class="kw1">Define</span> textLine.s<br />    <span class="kw1">While</span> <span class="kw1">Not</span> <span class="kw2">Eof</span><span class="br0">&#40;</span><span class="kw2">fileID</span><span class="br0">&#41;</span><br />      textLine <span class="sy0">=</span> <span class="kw2">ReadString</span><span class="br0">&#40;</span><span class="kw2">fileID</span><span class="br0">&#41;</span><br />      countLetters<span class="br0">&#40;</span>letterCounts<span class="br0">&#40;</span><span class="br0">&#41;</span>, textLine<span class="br0">&#41;</span><br />    <span class="kw1">Wend</span><br />    <span class="kw2">CloseFile</span><span class="br0">&#40;</span><span class="kw2">fileID</span><span class="br0">&#41;</span><br />&#160;<br />    <span class="kw2">PrintN</span><span class="br0">&#40;</span><span class="st0">&quot;File: &quot;</span> <span class="sy0">+</span> filename <span class="sy0">+</span> #CRLF$<span class="br0">&#41;</span><br />    <span class="kw2">PrintN</span><span class="br0">&#40;</span><span class="st0">&quot;Letter &#160;%Freq  Count&quot;</span><span class="br0">&#41;</span><br />    <span class="kw1">For</span> i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">To</span> <span class="nu0">26</span><br />      <span class="kw2">Print</span><span class="br0">&#40;</span><span class="st0">&quot;  &quot;</span> <span class="sy0">+</span> <span class="kw2">Chr</span><span class="br0">&#40;</span><span class="nu0">64</span> <span class="sy0">+</span> i<span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot;     &quot;</span><span class="br0">&#41;</span><br />      <span class="kw2">Print</span><span class="br0">&#40;</span><span class="kw2">RSet</span><span class="br0">&#40;</span><span class="kw2">StrF</span><span class="br0">&#40;</span><span class="nu0">100</span> <span class="sy0">*</span> letterCounts<span class="br0">&#40;</span>i<span class="br0">&#41;</span> <span class="sy0">/</span> letterCounts<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span>, <span class="nu0">1</span><span class="br0">&#41;</span>, <span class="nu0">5</span>, <span class="st0">&quot; &quot;</span><span class="br0">&#41;</span> <span class="sy0">+</span> <span class="st0">&quot;  &quot;</span><span class="br0">&#41;</span><br />      <span class="kw2">PrintN</span><span class="br0">&#40;</span><span class="kw2">Str</span><span class="br0">&#40;</span>letterCounts<span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />    <span class="kw1">Next</span> <br />    <span class="kw2">PrintN</span><span class="br0">&#40;</span>#CRLF$ <span class="sy0">+</span> <span class="st0">&quot;Total letter count in file: &quot;</span> <span class="sy0">+</span> <span class="kw2">Str</span><span class="br0">&#40;</span>letterCounts<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />  <span class="kw1">EndIf</span> <br />&#160;<br />  <span class="kw2">Print</span><span class="br0">&#40;</span>#CRLF$ <span class="sy0">+</span> #CRLF$ <span class="sy0">+</span> <span class="st0">&quot;Press ENTER to exit&quot;</span><span class="br0">&#41;</span>: <span class="kw2">Input</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />  <span class="kw2">CloseConsole</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br /><span class="kw1">EndIf</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>File: D:\_T\Text\dictionary.txt

Letter &#160;%Freq  Count
  A       7.6  27743
  B       2.0  7248
  C       4.3  15433
  D       3.8  13798
  E      11.8  42917
  F       1.4  5030
  G       2.8  10336
  H       2.1  7720
  I       8.6  31141
  J       0.2  588
  K       0.8  2964
  L       5.3  19399
  M       2.7  9821
  N       7.1  25682
  O       6.1  22084
  P       2.9  10696
  Q       0.2  714
  R       7.5  27055
  S       8.0  28898
  T       7.1  25773
  U       3.3  12032
  V       1.1  4019
  W       0.9  3348
  X       0.3  1096
  Y       1.7  6251
  Z       0.3  1177

Total letter count in file: 362963</pre>
<h2><span class="mw-headline" id="Python"><a href="/wiki/Category:Python" title="Category:Python">Python</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=67" title="Edit section: Python">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Using_collections.Counter">Using collections.Counter</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=68" title="Edit section: Using collections.Counter">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Python" title="Python" class="mw-redirect">Python</a> version 2.7+ and 3.1+</div>
<pre class="python highlighted_source"><span class="kw1">import</span> <span class="kw3">collections</span><span class="sy0">,</span> <span class="kw3">sys</span><br />&#160;<br /><span class="kw1">def</span> filecharcount<span class="br0">&#40;</span>openfile<span class="br0">&#41;</span>:<br />    <span class="kw1">return</span> <span class="kw2">sorted</span><span class="br0">&#40;</span><span class="kw3">collections</span>.<span class="me1">Counter</span><span class="br0">&#40;</span>c <span class="kw1">for</span> l <span class="kw1">in</span> openfile <span class="kw1">for</span> c <span class="kw1">in</span> l<span class="br0">&#41;</span>.<span class="me1">items</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br />f <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><br /><span class="kw1">print</span><span class="br0">&#40;</span>filecharcount<span class="br0">&#40;</span>f<span class="br0">&#41;</span><span class="br0">&#41;</span></pre>
<h3><span class="mw-headline" id="Not_using_collections.Counter">Not using collections.Counter</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=69" title="Edit section: Not using collections.Counter">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre class="python highlighted_source"><span class="kw1">import</span> <span class="kw3">string</span><br /><span class="kw1">if</span> <span class="kw2">hasattr</span><span class="br0">&#40;</span><span class="kw3">string</span><span class="sy0">,</span> <span class="st0">'ascii_lowercase'</span><span class="br0">&#41;</span>:<br />    letters <span class="sy0">=</span> <span class="kw3">string</span>.<span class="me1">ascii_lowercase</span>       <span class="co1"># Python 2.2 and later</span><br /><span class="kw1">else</span>:<br />    letters <span class="sy0">=</span> <span class="kw3">string</span>.<span class="me1">lowercase</span>             <span class="co1"># Earlier versions</span><br />offset <span class="sy0">=</span> <span class="kw2">ord</span><span class="br0">&#40;</span><span class="st0">'a'</span><span class="br0">&#41;</span><br />&#160;<br /><span class="kw1">def</span> countletters<span class="br0">&#40;</span>file_handle<span class="br0">&#41;</span>:<br />    <span class="st0">&quot;&quot;&quot;Traverse a file and compute the number of occurences of each letter<br />    return results as a simple 26 element list of integers.&quot;&quot;&quot;</span><br />    results <span class="sy0">=</span> <span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> * <span class="kw2">len</span><span class="br0">&#40;</span>letters<span class="br0">&#41;</span><br />    <span class="kw1">for</span> line <span class="kw1">in</span> file_handle:<br />        <span class="kw1">for</span> char <span class="kw1">in</span> line:<br />            char <span class="sy0">=</span> char.<span class="me1">lower</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />            <span class="kw1">if</span> char <span class="kw1">in</span> letters:<br />                results<span class="br0">&#91;</span><span class="kw2">ord</span><span class="br0">&#40;</span>char<span class="br0">&#41;</span> - offset<span class="br0">&#93;</span> +<span class="sy0">=</span> <span class="nu0">1</span><br />                <span class="co1"># Ordinal minus ordinal of 'a' of any lowercase ASCII letter -&gt; 0..25</span><br />    <span class="kw1">return</span> results<br />&#160;<br /><span class="kw1">if</span> __name__ <span class="sy0">==</span> <span class="st0">&quot;__main__&quot;</span>:<br />    sourcedata <span class="sy0">=</span> <span class="kw2">open</span><span class="br0">&#40;</span><span class="kw3">sys</span>.<span class="me1">argv</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><br />    lettercounts <span class="sy0">=</span> countletters<span class="br0">&#40;</span>sourcedata<span class="br0">&#41;</span><br />    <span class="kw1">for</span> i <span class="kw1">in</span> <span class="kw2">xrange</span><span class="br0">&#40;</span><span class="kw2">len</span><span class="br0">&#40;</span>lettercounts<span class="br0">&#41;</span><span class="br0">&#41;</span>:<br />        <span class="kw1">print</span> <span class="st0">&quot;%s=%d&quot;</span>&#160;% <span class="br0">&#40;</span><span class="kw2">chr</span><span class="br0">&#40;</span>i + <span class="kw2">ord</span><span class="br0">&#40;</span><span class="st0">'a'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">,</span> lettercounts<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">,</span></pre>
<p>This example defines the function and provides a sample usage. The <i>if ... __main__...</i> line allows it to be cleanly imported into any other Python code while also allowing it to function as a standalone script. (A very common Python idiom).
</p><p>Using a numerically indexed array (list) for this is artificial and clutters the code somewhat.
</p>
<h3><span class="mw-headline" id="Using_defaultdict">Using defaultdict</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=70" title="Edit section: Using defaultdict">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="examplemeta workswith"><b>Works with</b>: <a href="/wiki/Python" title="Python" class="mw-redirect">Python</a> version 2.5+ and 3.x</div>
<pre class="python highlighted_source">...<br /><span class="kw1">from</span> <span class="kw3">collections</span> <span class="kw1">import</span> defaultdict<br /><span class="kw1">def</span> countletters<span class="br0">&#40;</span>file_handle<span class="br0">&#41;</span>:<br />    <span class="st0">&quot;&quot;&quot;Count occurences of letters and return a dictionary of them<br />    &quot;&quot;&quot;</span><br />    results <span class="sy0">=</span> defaultdict<span class="br0">&#40;</span><span class="kw2">int</span><span class="br0">&#41;</span><br />    <span class="kw1">for</span> line <span class="kw1">in</span> file_handle:<br />        <span class="kw1">for</span> char <span class="kw1">in</span> line:<br />            <span class="kw1">if</span> char.<span class="me1">lower</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw1">in</span> letters:<br />                c <span class="sy0">=</span> char.<span class="me1">lower</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />                results<span class="br0">&#91;</span>c<span class="br0">&#93;</span> +<span class="sy0">=</span> <span class="nu0">1</span><br />    <span class="kw1">return</span> results</pre>
<p>Which eliminates the ungainly fiddling with ordinal values and offsets in function countletters of a previous example above. More importantly it allows the results to be more simply printed using:
</p>
<pre class="python highlighted_source">lettercounts <span class="sy0">=</span> countletters<span class="br0">&#40;</span>sourcedata<span class="br0">&#41;</span><br /><span class="kw1">for</span> letter<span class="sy0">,</span>count <span class="kw1">in</span> lettercounts.<span class="me1">iteritems</span><span class="br0">&#40;</span><span class="br0">&#41;</span>:<br />    <span class="kw1">print</span> <span class="st0">&quot;%s=%s&quot;</span>&#160;% <span class="br0">&#40;</span>letter<span class="sy0">,</span> count<span class="br0">&#41;</span><span class="sy0">,</span></pre>
<p>Again eliminating all fussing with the details of converting letters into list indices.
</p>
<h2><span class="mw-headline" id="R"><a href="/wiki/Category:R" title="Category:R">R</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=71" title="Edit section: R">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">letter.frequency &lt;- function(filename)<br />{<br />    file &lt;- paste(readLines(filename), collapse = '')<br />    chars &lt;- strsplit(file, NULL)[[1]]<br />    summary(factor(chars))<br />}</pre>
<p>Usage on itself:
</p>
<pre class="text highlighted_source">&gt; source('letter.frequency.r')<br />&gt; letter.frequency('letter.frequency.r')<br />    -  ,  .  '  (  )  [  ]  {  }  &lt;  =  1  a  c  d  e  f  h  i  l  L  m  n  N  o  p  q  r  s  t  u  U  y <br />22  3  2  1  2  6  6  2  2  1  1  3  1  1  9  6  1 14  7  2  7  8  3  4  6  1  3  3  1  8  8  7  3  1  2 </pre>
<h2><span class="mw-headline" id="Racket"><a href="/wiki/Category:Racket" title="Category:Racket">Racket</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=72" title="Edit section: Racket">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />#lang racket<br />(require math)<br />&#160;<br />(define (letter-frequencies ip)<br />  (count-samples<br />   (port-&gt;list read-char ip)))<br />&#160;<br />(letter-frequencies (open-input-string &quot;abaabdc&quot;))<br />&#160;</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>'(#\a #\b #\d #\c)
'(3 2 1 1)
</pre>
<p>Using input from a text file:
</p>
<pre class="text highlighted_source">&#160;<br />(letter-frequencies (open-input-file &quot;somefile.txt&quot;))<br />&#160;</pre>
<h2><span class="mw-headline" id="Raven"><a href="/wiki/Category:Raven" title="Category:Raven">Raven</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=73" title="Edit section: Raven">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">define count_letters use $words<br />   { } as $wordHash    [ ] as $keys   [ ]  as $vals<br />   $words each chr<br />      dup $wordHash swap get 0 prefer 1 +   # stack: chr cnt<br />      swap $wordHash swap set<br />   $wordHash keys copy sort each<br />      dup $keys push<br />      $wordHash swap get $vals push<br />   $keys $vals combine  print &quot;\n&quot; print<br />&#160;<br />&quot;test.dat&quot; as $file<br />$file read as $all_data<br />$all_data count_letters</pre>
<h2><span class="mw-headline" id="REXX"><a href="/wiki/Category:REXX" title="Category:REXX">REXX</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=74" title="Edit section: REXX">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="version_1">version 1</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=75" title="Edit section: version 1">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>It should be noted that the file being read is read one line at time, so the
<br />line-end characters (presumably the line-feed, carriage return, new-line, or
<br />whatever control characters are being used) are not reported.
<br />These characters could be read and reported if the &#160; <b>charin</b> &#160; BIF would be used instead of the &#160; <b>linein</b> &#160; BIF.
<br /><br />Also note that this REXX program is ASCII or EBCDIC independent, but what constitutes a letter is restricted to
<br />the Latin (Roman) alphabet (that is, which characters are considered to be letters of a particular language.
</p><p>The version of REXX that was used was the <b>English</b> version of Regina REXX. &#160; It should be noted that almost all
<br />REXX interpreters assume the English language for such things as determining what characters are considered
<br />letters unless another language is specified &#160; (Regina REXX uses an environmental variable for this purpose).
</p><p>All characters are still counted, whether a letter or not, including non-displayable characters.
</p>
<pre class="rexx highlighted_source"><span class="coMULTI">/*REXX program counts the occurrences of all characters in a file, &amp; note that*/</span><br /><span class="coMULTI">/*     all Latin alphabet letters are uppercased for counting {Latin} letters.*/</span><br /><span class="coMULTI">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</span><br />abc = <span class="st0">'abcdefghijklmnopqrstuvwxyz'</span>     <span class="coMULTI">/*define an (Latin or English) alphabet*/</span><br />abcU= <span class="st0">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>     <span class="coMULTI">/*define an uppercase version of  [↑]. */</span><br /><span class="kw1">parse</span> <span class="kw1">arg</span> fileID <span class="sy0">.</span>                     <span class="coMULTI">/*this last char isn't a middle dot: · */</span><br /><span class="kw1">if</span> fileID==<span class="st0">''</span>  <span class="kw3">then</span> fileID=<span class="st0">'JUNK.TXT'</span>  <span class="coMULTI">/*¿none specified? Then use the default*/</span><br />totChars=<span class="nu0">0</span>;    totLetters=<span class="nu0">0</span>            <span class="coMULTI">/*count of all chars and of all letters*/</span><br />pad=<span class="kw6">left</span><span class="br0">&#40;</span><span class="st0">''</span>,<span class="nu0">18</span><span class="br0">&#41;</span>;    pad9=<span class="kw6">left</span><span class="br0">&#40;</span><span class="st0">''</span>,<span class="nu0">18</span>%2<span class="br0">&#41;</span> <span class="coMULTI">/*used for the indentations of output. */</span><br />@<span class="sy0">.</span>=<span class="nu0">0</span>                                   <span class="coMULTI">/*wouldn't it be neat to use Θ instead?*/</span><br />     <span class="kw1">do</span> j=<span class="nu0">1</span>  <span class="kw2">while</span> <span class="kw6">lines</span><span class="br0">&#40;</span>fileID<span class="br0">&#41;</span><span class="sy0">\</span>==<span class="nu0">0</span>   <span class="coMULTI">/*read the file 'til the cows come home*/</span><br />     rec=<span class="kw2">linein</span><span class="br0">&#40;</span>fileID<span class="br0">&#41;</span>                <span class="coMULTI">/*get a line/record from the input file*/</span><br />                                       <span class="coMULTI">/* [↓]  process all characters in  REC.*/</span><br />       <span class="kw1">do</span> k=<span class="nu0">1</span>  <span class="kw2">for</span> <span class="kw6">length</span><span class="br0">&#40;</span>rec<span class="br0">&#41;</span>         <span class="coMULTI">/*examine/count each of the characters.*/</span><br />       totChars=totChars+<span class="nu0">1</span>             <span class="coMULTI">/*bump count of number of characters.  */</span><br />       c=<span class="kw6">substr</span><span class="br0">&#40;</span>rec,k,<span class="nu0">1</span><span class="br0">&#41;</span>;  @<span class="sy0">.</span><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="a7c49ae7">[email&#160;protected]</a><span class="sy0">.</span>c+<span class="nu0">1</span>   <span class="coMULTI">/*Peel off a character; bump its count.*/</span><br />       <span class="kw1">if</span> <span class="sy0">\</span><span class="kw6">datatype</span><span class="br0">&#40;</span>c,<span class="st0">'M'</span><span class="br0">&#41;</span> <span class="kw3">then</span> <span class="kw1">iterate</span>  <span class="coMULTI">/*Not a Latin letter?  Get next char.*/</span><br />       totLetters=totLetters+<span class="nu0">1</span>         <span class="coMULTI">/*bump the count for [Latin] letters.  */</span><br />       <span class="kw2">upper</span> c   <span class="coMULTI">/* ◄«««««««««««««««««««««««««««◄ uppercase a Latin character.*/</span><br />       @<span class="sy0">..</span><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="d6b5eb96">[email&#160;protected]</a><span class="sy0">..</span>c+<span class="nu0">1</span>                     <span class="coMULTI">/*bump the (Latin) letter's count.     */</span><br />       <span class="kw3">end</span>   <span class="coMULTI">/*k*/</span>                     <span class="coMULTI">/*no Greek glyphs: π Γ Σ µ α ß Φ ε δ σ */</span><br />     <span class="kw3">end</span>     <span class="coMULTI">/*j*/</span>                     <span class="coMULTI">/*maybe we're ½ done by now, or maybe ¬*/</span><br />                                           LL= <span class="st0">'(Latin) letter'</span><br />w=<span class="kw6">length</span><span class="br0">&#40;</span>totChars<span class="br0">&#41;</span>                     <span class="coMULTI">/*used for right─aligning the counts.  */</span><br /><span class="kw1">say</span> <span class="st0">'file ─────'</span> fileId <span class="st0">&quot;───── has&quot;</span> j-<span class="nu0">1</span> <span class="st0">'records and has'</span> totLetters LL<span class="st0">&quot;s.&quot;</span>; <span class="kw1">say</span><br />  <span class="kw1">do</span> L=<span class="nu0">0</span>  <span class="kw2">for</span> <span class="nu0">256</span>;    c=<span class="kw6">d2c</span><span class="br0">&#40;</span>L<span class="br0">&#41;</span>         <span class="coMULTI">/*display all none─zero letter counts. */</span><br />  <span class="kw1">if</span> @<span class="sy0">..</span>c==<span class="nu0">0</span>  <span class="kw3">then</span> <span class="kw1">iterate</span>             <span class="coMULTI">/*A zero count?  Then ignore character.*/</span><br />  <span class="kw1">say</span> pad9  LL<span class="st0">' '</span>   c   <span class="st0">&quot; (also&quot;</span> <span class="kw6">translate</span><span class="br0">&#40;</span>c,abc,abcU<span class="br0">&#41;</span><span class="st0">')  count:'</span>  <span class="kw6">right</span><span class="br0">&#40;</span>@<span class="sy0">..</span>c,w<span class="br0">&#41;</span><br />  <span class="kw3">end</span>   <span class="coMULTI">/*L*/</span>                          <span class="coMULTI">/*we may be in a rut, but not a cañyon.*/</span><br />&#160;<br /><span class="kw1">say</span>;    <span class="kw1">say</span> <span class="st0">'file ─────'</span>  fileId   <span class="st0">&quot;───── has&quot;</span>   totChars   <span class="st0">'unique characters.'</span><br /><span class="kw1">say</span><br />     <span class="kw1">do</span> #=<span class="nu0">0</span>  <span class="kw2">for</span> <span class="nu0">256</span>;    y=<span class="kw6">d2c</span><span class="br0">&#40;</span>#<span class="br0">&#41;</span>      <span class="coMULTI">/*display all none─zero char counts.   */</span><br />     <span class="kw1">if</span> @<span class="sy0">.</span>y==<span class="nu0">0</span>  <span class="kw3">then</span> <span class="kw1">iterate</span>           <span class="coMULTI">/*A zero count?  Then ignore character.*/</span><br />     c=<span class="kw6">d2c</span><span class="br0">&#40;</span>#<span class="br0">&#41;</span>;  ch=c                   <span class="coMULTI">/*C  is the character glyph of a char. */</span><br />     <span class="kw1">if</span> c<span class="sy0">&lt;&lt;</span><span class="st0">' '</span> <span class="sy0">|</span> #==<span class="nu0">255</span>  <span class="kw3">then</span> ch=      <span class="coMULTI">/*don't show control characters or null*/</span><br />     <span class="kw1">if</span> c==<span class="st0">' '</span>           <span class="kw3">then</span> ch=<span class="st0">'blank'</span>                <span class="coMULTI">/*show a blank's name.*/</span><br />     <span class="kw1">say</span> pad <span class="kw6">right</span><span class="br0">&#40;</span>ch,<span class="nu0">5</span><span class="br0">&#41;</span>     <span class="st0">&quot; ('&quot;</span><span class="kw6">d2x</span><span class="br0">&#40;</span>#,<span class="nu0">2</span><span class="br0">&#41;</span><span class="st0">&quot;'x  character count:&quot;</span>    <span class="kw6">right</span><span class="br0">&#40;</span>@<span class="sy0">.</span>c,w<span class="br0">&#41;</span><br />     <span class="kw3">end</span>   <span class="coMULTI">/*#*/</span>                       <span class="coMULTI">/*255 isn't quite ∞, but sometimes ∙∙∙ */</span><br /><span class="kw1">say</span>                                    <span class="coMULTI">/*not a good place for dithering: ░▒▓█ */</span><br /><span class="kw1">say</span>  pad   pad9   <span class="st0">'☼ end─of─list ☼'</span>    <span class="coMULTI">/*show we are at the end of the list.  */</span><br />                                       <span class="coMULTI">/*stick a fork in it, we're all done. ☻*/</span></pre>
<p><b>output</b> &#160; when using the (above) REXX program for the input file:
</p><p>Note that this REXX program works with ASCII or EBCDIC, but the order of the output will
<br />be different because of the order in which EBCDIC and ASCII stores characters.
</p>
<pre style="height:150ex">file ───── countfrq.rex ───── has 42 records and has 1540 (Latin) letters.

          (Latin) letter  A  (also a)  count:  133
          (Latin) letter  B  (also b)  count:   23
          (Latin) letter  C  (also c)  count:  101
          (Latin) letter  D  (also d)  count:   55
          (Latin) letter  E  (also e)  count:  176
          (Latin) letter  F  (also f)  count:   49
          (Latin) letter  G  (also g)  count:   23
          (Latin) letter  H  (also h)  count:   73
          (Latin) letter  I  (also i)  count:   86
          (Latin) letter  J  (also j)  count:    6
          (Latin) letter  K  (also k)  count:   11
          (Latin) letter  L  (also l)  count:   91
          (Latin) letter  M  (also m)  count:   20
          (Latin) letter  N  (also n)  count:  101
          (Latin) letter  O  (also o)  count:   97
          (Latin) letter  P  (also p)  count:   35
          (Latin) letter  Q  (also q)  count:    4
          (Latin) letter  R  (also r)  count:  107
          (Latin) letter  S  (also s)  count:   81
          (Latin) letter  T  (also t)  count:  164
          (Latin) letter  U  (also u)  count:   47
          (Latin) letter  V  (also v)  count:    3
          (Latin) letter  W  (also w)  count:   16
          (Latin) letter  X  (also x)  count:    9
          (Latin) letter  Y  (also y)  count:   23
          (Latin) letter  Z  (also z)  count:    6

file ───── countfrq.rex ───── has 3186 unique characters.

                          ('02'x  character count:    1
                          ('0F'x  character count:    2
                          ('11'x  character count:    2
                          ('18'x  character count:    1
                          ('19'x  character count:    1
                   blank  ('20'x  character count: 1041
                       &quot;  ('22'x  character count:   12
                       #  ('23'x  character count:    6
                      &#160;%  ('25'x  character count:    1
                       &amp;  ('26'x  character count:    1
                       '  ('27'x  character count:   47
                       (  ('28'x  character count:   21
                       )  ('29'x  character count:   20
                       *  ('2A'x  character count:   78
                       +  ('2B'x  character count:    4
                       ,  ('2C'x  character count:   16
                       -  ('2D'x  character count:    1
                       .  ('2E'x  character count:   38
                       /  ('2F'x  character count:   80
                       0  ('30'x  character count:    8
                       1  ('31'x  character count:   10
                       2  ('32'x  character count:   10
                       5  ('35'x  character count:    7
                       6  ('36'x  character count:    2
                       8  ('38'x  character count:    2
                       9  ('39'x  character count:    3
                      &#160;:  ('3A'x  character count:    5
                      &#160;;  ('3B'x  character count:    9
                       &lt;  ('3C'x  character count:    2
                       =  ('3D'x  character count:   38
                      &#160;?  ('3F'x  character count:    5
                       @  ('40'x  character count:    9
                       A  ('41'x  character count:    3
                       B  ('42'x  character count:    1
                       C  ('43'x  character count:    8
                       D  ('44'x  character count:    6
                       E  ('45'x  character count:    4
                       F  ('46'x  character count:    1
                       G  ('47'x  character count:    3
                       H  ('48'x  character count:    1
                       I  ('49'x  character count:    8
                       J  ('4A'x  character count:    2
                       K  ('4B'x  character count:    2
                       L  ('4C'x  character count:   22
                       M  ('4D'x  character count:    2
                       N  ('4E'x  character count:    3
                       O  ('4F'x  character count:    1
                       P  ('50'x  character count:    2
                       Q  ('51'x  character count:    1
                       R  ('52'x  character count:    3
                       S  ('53'x  character count:    1
                       T  ('54'x  character count:    6
                       U  ('55'x  character count:    4
                       V  ('56'x  character count:    1
                       W  ('57'x  character count:    1
                       X  ('58'x  character count:    4
                       Y  ('59'x  character count:    1
                       Z  ('5A'x  character count:    1
                       [  ('5B'x  character count:    3
                       \  ('5C'x  character count:    2
                       ]  ('5D'x  character count:    3
                       a  ('61'x  character count:  130
                       b  ('62'x  character count:   22
                       c  ('63'x  character count:   93
                       d  ('64'x  character count:   49
                       e  ('65'x  character count:  172
                       f  ('66'x  character count:   48
                       g  ('67'x  character count:   20
                       h  ('68'x  character count:   72
                       i  ('69'x  character count:   78
                       j  ('6A'x  character count:    4
                       k  ('6B'x  character count:    9
                       l  ('6C'x  character count:   69
                       m  ('6D'x  character count:   18
                       n  ('6E'x  character count:   98
                       o  ('6F'x  character count:   96
                       p  ('70'x  character count:   33
                       q  ('71'x  character count:    3
                       r  ('72'x  character count:  104
                       s  ('73'x  character count:   80
                       t  ('74'x  character count:  158
                       u  ('75'x  character count:   43
                       v  ('76'x  character count:    2
                       w  ('77'x  character count:   15
                       x  ('78'x  character count:    5
                       y  ('79'x  character count:   22
                       z  ('7A'x  character count:    5
                       {  ('7B'x  character count:    1
                       |  ('7C'x  character count:    1
                       }  ('7D'x  character count:    1
                       ~  ('7E'x  character count:   76
                       ñ  ('A4'x  character count:    1
                       ¿  ('A8'x  character count:    1
                       ¬  ('AA'x  character count:    1
                       ½  ('AB'x  character count:    1
                       «&#160; ('AE'x  character count:   27
                       ░  ('B0'x  character count:    1
                       ▒  ('B1'x  character count:    1
                       ▓  ('B2'x  character count:    1
                       ─  ('C4'x  character count:   25
                       █  ('DB'x  character count:    1
                       α  ('E0'x  character count:    1
                       ß  ('E1'x  character count:    1
                       Γ  ('E2'x  character count:    1
                       π  ('E3'x  character count:    1
                       Σ  ('E4'x  character count:    1
                       σ  ('E5'x  character count:    1
                       µ  ('E6'x  character count:    1
                       Φ  ('E8'x  character count:    1
                       Θ  ('E9'x  character count:    1
                       δ  ('EB'x  character count:    1
                       ∞  ('EC'x  character count:    1
                       ε  ('EE'x  character count:    1
                       ∙  ('F9'x  character count:    3
                       ·  ('FA'x  character count:    1

                             ☼ end─of─list ☼
</pre>
<h3><span class="mw-headline" id="Version_2_.28for_TSO.29">Version 2 (for TSO)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=76" title="Edit section: Version 2 (for TSO)">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre class="rexx highlighted_source"><span class="coMULTI">/*REXX program counts the occurences of all characters in a file<br />* Adapted version 1 for TSO (EXECIO instead of linein)<br />* No translation to uppercase takes place<br />* There is no need for tails being hex<br />* 25.07.2012 Walter Pachl<br />***********************************************************************/</span><br />&#160;<br />  <span class="kw1">Parse</span> <span class="kw1">arg</span> dsn <span class="sy0">.</span>                    <span class="coMULTI">/*Data set to be processed       */</span><br />  <span class="kw1">if</span> dsn=<span class="st0">''</span> <span class="kw3">Then</span>                     <span class="coMULTI">/*none specified?                */</span><br />    dsn=<span class="st0">'PRIV.V100(TEST)'</span>            <span class="coMULTI">/* Use default.                  */</span><br />  c<span class="sy0">.</span>=<span class="nu0">0</span>                               <span class="coMULTI">/* Character counts              */</span><br />  <span class="st0">&quot;ALLOC   FI(IN) DA(&quot;</span>dsn<span class="st0">&quot;) SHR REUSE&quot;</span><br />  <span class="st0">'EXECIO   * DISKR IN (STEM L. FINIS'</span><br />  <span class="st0">'FREE   FI(IN)'</span><br />  totChars=<span class="nu0">0</span>                         <span class="coMULTI">/*count of the total num of chars*/</span><br />  totLetters=<span class="nu0">0</span>                       <span class="coMULTI">/*count of the total num letters.*/</span><br />  indent=<span class="kw6">left</span><span class="br0">&#40;</span><span class="st0">''</span>,<span class="nu0">20</span><span class="br0">&#41;</span>                 <span class="coMULTI">/*used for indentation of output.*/</span><br />&#160;<br />  <span class="kw1">do</span> j=<span class="nu0">1</span> <span class="kw2">to</span> l<span class="sy0">.</span>0                      <span class="coMULTI">/*process all lines              */</span><br />    rec=l<span class="sy0">.</span>j                          <span class="coMULTI">/*take line number j             */</span><br />    <span class="kw1">Say</span> <span class="st0">'&gt;'</span>rec<span class="st0">'&lt;'</span> <span class="kw6">length</span><span class="br0">&#40;</span>rec<span class="br0">&#41;</span>        <span class="coMULTI">/*that's in PRIV.V100(TEST)      */</span><br />    <span class="kw1">Say</span> <span class="st0">' E8C44D8FF015674BCDEF'</span><br />    <span class="kw1">Say</span> <span class="st0">' 61100711200000000002'</span><br />    <span class="kw1">do</span> k=<span class="nu0">1</span> <span class="kw2">for</span> <span class="kw6">length</span><span class="br0">&#40;</span>rec<span class="br0">&#41;</span>           <span class="coMULTI">/*loop over characters           */</span><br />      totChars=totChars+<span class="nu0">1</span>            <span class="coMULTI">/*Increment total number of chars*/</span><br />      c=<span class="kw6">substr</span><span class="br0">&#40;</span>rec,k,<span class="nu0">1</span><span class="br0">&#41;</span>              <span class="coMULTI">/*get character number k         */</span><br />      c<span class="sy0">.</span>c=c<span class="sy0">.</span>c+<span class="nu0">1</span>                      <span class="coMULTI">/*increment the character's count*/</span><br />      <span class="kw3">End</span><br />    <span class="kw3">End</span>                              <span class="coMULTI">/*maybe we're ½ done by now, or ¬*/</span><br />&#160;<br />  w=<span class="kw6">length</span><span class="br0">&#40;</span>totChars<span class="br0">&#41;</span>                 <span class="coMULTI">/*used for right-aligning counts.*/</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> j-<span class="nu0">1</span> <span class="st0">'records.'</span><br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> totChars <span class="st0">'characters.'</span><br />&#160;<br />  <span class="kw1">do</span> L=<span class="nu0">0</span> <span class="kw2">to</span> <span class="nu0">255</span>                      <span class="coMULTI">/* display nonzero letter counts */</span><br />    c=<span class="kw6">d2c</span><span class="br0">&#40;</span>l<span class="br0">&#41;</span>                         <span class="coMULTI">/* the character in question     */</span><br />    <span class="kw1">if</span> c<span class="sy0">.</span>c<span class="sy0">&gt;</span><span class="nu0">0</span> <span class="sy0">&amp;</span>,                      <span class="coMULTI">/* was found in the file         */</span><br />       <span class="kw6">datatype</span><span class="br0">&#40;</span>c,<span class="st0">'M'</span><span class="br0">&#41;</span><span class="sy0">&gt;</span><span class="nu0">0</span> <span class="kw3">Then</span> <span class="kw1">Do</span>     <span class="coMULTI">/* and is a Latin letter         */</span><br />      <span class="kw1">say</span> indent <span class="st0">&quot;(Latin) letter &quot;</span> c <span class="st0">'count:'</span> <span class="kw6">right</span><span class="br0">&#40;</span>c<span class="sy0">.</span>c,w<span class="br0">&#41;</span> <span class="coMULTI">/* tell    */</span><br />      totLetters=totLetters+c<span class="sy0">.</span>c      <span class="coMULTI">/* increment number of letters   */</span><br />      <span class="kw3">End</span><br />    <span class="kw3">End</span><br />&#160;<br />  <span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> totLetters <span class="st0">'(Latin) letters.'</span><br />  <span class="kw1">say</span> <span class="st0">'                           other characters follow'</span><br />  other=<span class="nu0">0</span><br />  <span class="kw1">do</span> m=<span class="nu0">0</span> <span class="kw2">to</span> <span class="nu0">255</span>                      <span class="coMULTI">/* now for non-letters           */</span><br />    c=<span class="kw6">d2c</span><span class="br0">&#40;</span>m<span class="br0">&#41;</span>                         <span class="coMULTI">/* the character in question     */</span><br />    y=<span class="kw6">c2x</span><span class="br0">&#40;</span>c<span class="br0">&#41;</span>                         <span class="coMULTI">/* the hex representation        */</span><br />    <span class="kw1">if</span> c<span class="sy0">.</span>c<span class="sy0">&gt;</span><span class="nu0">0</span> <span class="sy0">&amp;</span>,                      <span class="coMULTI">/* was found in the file         */</span><br />       <span class="kw6">datatype</span><span class="br0">&#40;</span>c,<span class="st0">'M'</span><span class="br0">&#41;</span>=<span class="nu0">0</span> <span class="kw3">Then</span> <span class="kw1">Do</span>     <span class="coMULTI">/* and is not a Latin letter     */</span><br />      other=other+c<span class="sy0">.</span>c                <span class="coMULTI">/* increment count               */</span><br />      _=<span class="kw6">right</span><span class="br0">&#40;</span>c<span class="sy0">.</span>c,w<span class="br0">&#41;</span>                 <span class="coMULTI">/* prepare output of count       */</span><br />      <span class="kw1">select</span>                         <span class="coMULTI">/*make the character viewable.   */</span><br />       <span class="kw3">when</span> c<span class="sy0">&lt;&lt;</span><span class="st0">' '</span> <span class="sy0">|</span> m==<span class="nu0">255</span> <span class="kw3">then</span> <span class="kw1">say</span> indent  <span class="st0">&quot;'&quot;</span>y<span class="st0">&quot;'x character count:&quot;</span> _<br />       <span class="kw3">when</span> c==<span class="st0">' '</span>          <span class="kw3">then</span> <span class="kw1">say</span> indent   <span class="st0">&quot;blank character count:&quot;</span> _<br />       <span class="kw3">otherwise</span>                 <span class="kw1">say</span> indent <span class="st0">&quot;   &quot;</span> c <span class="st0">'character count:'</span> _<br />       <span class="kw3">end</span><br />     <span class="kw3">end</span><br />   <span class="kw3">end</span><br /><span class="kw1">say</span> <span class="st0">'file -----'</span> dsn <span class="st0">&quot;----- has&quot;</span> other <span class="st0">'other characters.'</span></pre>
<p>Output:
</p>
<pre>&gt;WaA  Pa12&#160;:&amp;-:&#160;:äüÖ2&lt; 20                                
 E8C44D8FF015674BCDEF                                    
 61100711200000000002                                    
file ----- PRIV.V100(TEST) ----- has 1 records.          
file ----- PRIV.V100(TEST) ----- has 20 characters.      
                     (Latin) letter  a count:  2         
                     (Latin) letter  A count:  1         
                     (Latin) letter  P count:  1         
                     (Latin) letter  W count:  1         
file ----- PRIV.V100(TEST) ----- has 5 (Latin) letters.  
                           other characters follow        
                     '00'x character count:  1           
                     '10'x character count:  1           
                     blank character count:  3           
                         &amp; character count:  1           
                         - character count:  1           
                        &#160;: character count:  1           
                        &#16#160;: character count:  1           
                         ä character count:  1           
                         ü character count:  1           
                         Ö character count:  1           
                         1 character count:  1           
                         2 character count:  2           
file ----- PRIV.V100(TEST) ----- has 15 other characters.</pre>
<h2><span class="mw-headline" id="Ring"><a href="/wiki/Category:Ring" title="Category:Ring">Ring</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=77" title="Edit section: Ring">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />textData = read(&quot;C:\Ring\ReadMe.txt&quot;)<br />ln =len(textData)<br />charCount = list(255)<br />totCount = 0<br />&#160;<br />for i =1 to ln<br />    char = ascii(substr(textData,i,1))<br />    charCount[char] = charCount[char] + 1<br />    if char &gt; 31 totCount = totCount + 1 ok<br />next<br />&#160;<br />for i = 32 to 255<br />    if charCount[i] &gt; 0 see char(i) + &quot; = &quot; + charCount[i] + &quot; &quot; + (charCount[i]/totCount)*100 + &quot;&#160;%&quot; + nl ok<br />next<br />&#160;</pre>
<h2><span class="mw-headline" id="Ruby"><a href="/wiki/Category:Ruby" title="Category:Ruby">Ruby</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=78" title="Edit section: Ruby">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="ruby highlighted_source"><span class="kw1">def</span> letter_frequency<span class="br0">&#40;</span>file<span class="br0">&#41;</span><br />  letters = <span class="st0">'a'</span> .. <span class="st0">'z'</span><br />  <span class="kw4">File</span>.<span class="me1">read</span><span class="br0">&#40;</span>file<span class="br0">&#41;</span> .<br />       <span class="kw3">split</span><span class="br0">&#40;</span><span class="sy0">//</span><span class="br0">&#41;</span> .<br />       <span class="me1">group_by</span> <span class="br0">&#123;</span><span class="sy0">|</span>letter<span class="sy0">|</span> letter.<span class="me1">downcase</span><span class="br0">&#125;</span> .<br />       <span class="kw3">select</span>   <span class="br0">&#123;</span><span class="sy0">|</span>key, val<span class="sy0">|</span> letters.<span class="kw1">include</span>? key<span class="br0">&#125;</span> .<br />       <span class="me1">collect</span>  <span class="br0">&#123;</span><span class="sy0">|</span>key, val<span class="sy0">|</span> <span class="br0">&#91;</span>key, val.<span class="me1">length</span><span class="br0">&#93;</span><span class="br0">&#125;</span> <br /><span class="kw1">end</span><br />&#160;<br />letter_frequency<span class="br0">&#40;</span>ARGV<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#41;</span>.<span class="me1">sort_by</span> <span class="br0">&#123;</span><span class="sy0">|</span>key, val<span class="sy0">|</span> <span class="sy0">-</span>val<span class="br0">&#125;</span>.<span class="me1">each</span> <span class="br0">&#123;</span><span class="sy0">|</span>pair<span class="sy0">|</span> <span class="kw3">p</span> pair<span class="br0">&#125;</span></pre>
<p>example output, using the program file as input:
</p>
<pre>$ ruby letterFrequency.rb letterFrequency.rb
[&quot;e&quot;, 34]
[&quot;l&quot;, 20]
[&quot;t&quot;, 17]
[&quot;r&quot;, 14]
[&quot;a&quot;, 12]
[&quot;y&quot;, 9]
[&quot;c&quot;, 8]
[&quot;i&quot;, 7]
[&quot;v&quot;, 6]
[&quot;n&quot;, 6]
[&quot;f&quot;, 6]
[&quot;s&quot;, 6]
[&quot;d&quot;, 5]
[&quot;p&quot;, 5]
[&quot;k&quot;, 5]
[&quot;u&quot;, 4]
[&quot;o&quot;, 4]
[&quot;g&quot;, 3]
[&quot;b&quot;, 2]
[&quot;h&quot;, 2]
[&quot;q&quot;, 2]
[&quot;z&quot;, 1]
[&quot;w&quot;, 1]</pre>
<h3><span class="mw-headline" id="Ruby_2.0">Ruby 2.0</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=79" title="Edit section: Ruby 2.0">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre class="ruby highlighted_source"><span class="kw1">def</span> letter_frequency<span class="br0">&#40;</span>file<span class="br0">&#41;</span><br />  freq = <span class="kw4">Hash</span>.<span class="me1">new</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />  file.<span class="me1">each_char</span>.<span class="me1">lazy</span>.<span class="me1">grep</span><span class="br0">&#40;</span><span class="sy0">/</span><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="re3">:alpha</span>:<span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">/</span><span class="br0">&#41;</span>.<span class="me1">map</span><span class="br0">&#40;</span><span class="sy0">&amp;</span>:upcase<span class="br0">&#41;</span>.<span class="me1">each_with_object</span><span class="br0">&#40;</span>freq<span class="br0">&#41;</span> <span class="kw1">do</span> <span class="sy0">|</span>char, freq_map<span class="sy0">|</span><br />    freq_map<span class="br0">&#91;</span>char<span class="br0">&#93;</span> <span class="sy0">+</span>= <span class="nu0">1</span><br />  <span class="kw1">end</span><br /><span class="kw1">end</span><br />&#160;<br />letter_frequency<span class="br0">&#40;</span>ARGF<span class="br0">&#41;</span>.<span class="me1">sort</span>.<span class="me1">each</span> <span class="kw1">do</span> <span class="sy0">|</span>letter, frequency<span class="sy0">|</span><br />  <span class="kw3">puts</span> <span class="st0">&quot;quot;#{letter}: #{frequency}&quot;</span><br /><span class="kw1">end</span></pre>
<p>note that this version *should* use less memory, even on a gigantic file. This is done by using lazy enumerables, which ruby 2.0 introduces.
</p><p>example output, using the (somewhat large) dictionary file as the input. Also note that this versions works on unicode text.
</p>
<pre>$ ruby letter_frequency.rb /usr/share/dict/words
A: 64439
B: 15526
C: 31872
D: 28531
E: 88833
F: 10675
G: 22712
H: 19320
I: 66986
J: 1948
K: 8409
L: 41107
M: 22508
N: 57144
O: 48944
P: 22274
Q: 1524
R: 57347
S: 90113
T: 53006
U: 26118
V: 7989
W: 7530
X: 2124
Y: 12652
Z: 3281
Å: 1
á: 10
â: 6
ä: 7
å: 3
ç: 5
è: 28
é: 144
ê: 6
í: 2
ñ: 8
ó: 8
ô: 2
ö: 16
û: 3
ü: 12
</pre>
<h2><span class="mw-headline" id="Run_BASIC"><a href="/wiki/Category:Run_BASIC" title="Category:Run BASIC">Run BASIC</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=80" title="Edit section: Run BASIC">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">open &quot;c:\rbp101\public\textFile.txt&quot; for input as #f<br />textData$ = input$(#f, lof( #f))<br />ln =len(textData$)<br />close #f<br />&#160;<br />dim charCount( 255)<br />&#160;<br />for i =1 to ln<br />   char            = asc(mid$(textData$,i,1))<br />   charCount(char) = charCount(char) + 1<br />   if char &gt; 31 then totCount = totCount + 1<br />next i<br />&#160;<br />for i = 32 to 255<br />if charCount(i) &gt; 0 then print &quot;Ascii:&quot;;using(&quot;###&quot;,i);&quot; char:&quot;;chr$(i);&quot; Count:&quot;;using(&quot;#######&quot;,charCount(i));&quot; &quot;;using(&quot;##.#&quot;,(charCount(i) / totCount) * 100);&quot;%&quot;<br />next i</pre>
<p>Output uses this program to count itself:
</p>
<pre style="height: 40ex; overflow: scroll">Ascii: 32 char:  Count:     76 16.1%
Ascii: 34 char:&quot; Count:     18  3.8%
Ascii: 35 char:# Count:     17  3.6%
Ascii: 36 char:$ Count:      6  1.3%
Ascii: 37 char:% Count:      1  0.2%
Ascii: 40 char:( Count:     16  3.4%
Ascii: 41 char:) Count:     16  3.4%
Ascii: 42 char:* Count:      1  0.2%
Ascii: 43 char:+ Count:      2  0.4%
Ascii: 44 char:, Count:      6  1.3%
Ascii: 46 char:. Count:      2  0.4%
Ascii: 47 char:/ Count:      1  0.2%
Ascii: 48 char:0 Count:      4  0.8%
Ascii: 49 char:1 Count:      8  1.7%
Ascii: 50 char:2 Count:      3  0.6%
Ascii: 51 char:3 Count:      2  0.4%
Ascii: 53 char:5 Count:      4  0.8%
Ascii: 58 char:: Count:      4  0.8%
Ascii: 59 char:; Count:      8  1.7%
Ascii: 61 char:= Count:      7  1.5%
Ascii: 62 char:&gt; Count:      2  0.4%
Ascii: 65 char:A Count:      1  0.2%
Ascii: 67 char:C Count:     10  2.1%
Ascii: 68 char:D Count:      3  0.6%
Ascii: 70 char:F Count:      1  0.2%
Ascii: 92 char:\ Count:      3  0.6%
Ascii: 97 char:a Count:     19  4.0%
Ascii: 98 char:b Count:      2  0.4%
Ascii: 99 char:c Count:     17  3.6%
Ascii:100 char:d Count:      3  0.6%
Ascii:101 char:e Count:     13  2.7%
Ascii:102 char:f Count:     10  2.1%
Ascii:103 char:g Count:      3  0.6%
Ascii:104 char:h Count:     14  3.0%
Ascii:105 char:i Count:     24  5.1%
Ascii:108 char:l Count:      7  1.5%
Ascii:109 char:m Count:      2  0.4%
Ascii:110 char:n Count:     25  5.3%
Ascii:111 char:o Count:     21  4.4%
Ascii:112 char:p Count:      6  1.3%
Ascii:114 char:r Count:     17  3.6%
Ascii:115 char:s Count:      7  1.5%
Ascii:116 char:t Count:     38  8.0%
Ascii:117 char:u Count:     16  3.4%
Ascii:120 char:x Count:      7  1.5%
</pre>
<h2><span class="mw-headline" id="Rust"><a href="/wiki/Category:Rust" title="Category:Rust">Rust</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=81" title="Edit section: Rust">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Works with all UTF-8 characters
</p>
<pre class="text highlighted_source">use std::collections::btree_map::BTreeMap;<br />use std::{env, process};<br />use std::io::{self, Read, Write};<br />use std::fmt::Display;<br />use std::fs::File;<br />&#160;<br />fn main() {<br />    let filename = env::args().nth(1)<br />        .ok_or(&quot;Please supply a file name&quot;)<br />        .unwrap_or_else(|e| exit_err(e, 1));<br />&#160;<br />    let mut buf = String::new();<br />    let mut count = BTreeMap::new();<br />&#160;<br />    File::open(&amp;filename)<br />        .unwrap_or_else(|e| exit_err(e, 2))<br />        .read_to_string(&amp;mut buf)<br />        .unwrap_or_else(|e| exit_err(e, 3));<br />&#160;<br />&#160;<br />    for c in buf.chars() {<br />        *count.entry(c).or_insert(0) += 1;<br />    }<br />&#160;<br />    println!(&quot;Number of occurences per character&quot;);<br />    for (ch, count) in &amp;count {<br />        println!(&quot;{:?}: {}&quot;, ch, count);<br />    }<br />}<br />&#160;<br />#[inline]<br />fn exit_err&lt;T&gt;(msg: T, code: i32) -&gt;&#160;! where T: Display {<br />    writeln!(&amp;mut io::stderr(), &quot;{}&quot;, msg).expect(&quot;Could not write to stderr&quot;);<br />    process::exit(code)<br />}</pre>
<p>Output when run on source file:
</p>
<pre>Number of occurences per character
'\n': 35
' ': 167
'!': 4
'\&quot;': 10
'#': 1
'&amp;': 4
'(': 25
')': 25
'*': 1
'+': 1
',': 12
'-': 1
'.': 10
'0': 1
'1': 3
'2': 2
'3': 2
':': 37
';': 13
'&lt;': 1
'=': 4
'&gt;': 2
'?': 1
'B': 2
'C': 1
'D': 2
'F': 2
'M': 2
'N': 1
'P': 1
'R': 1
'S': 1
'T': 5
'W': 1
'[': 1
']': 1
'_': 15
'a': 20
'b': 5
'c': 22
'd': 12
'e': 75
'f': 14
'g': 5
'h': 6
'i': 29
'k': 1
'l': 23
'm': 13
'n': 36
'o': 28
'p': 17
'r': 45
's': 33
't': 42
'u': 24
'v': 2
'w': 8
'x': 6
'y': 4
'{': 9
'|': 6
'}': 9
</pre>
<h2><span class="mw-headline" id="Scala"><a href="/wiki/Category:Scala" title="Category:Scala">Scala</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=82" title="Edit section: Scala">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="scala highlighted_source"><a href="http://scala-lang.org"><span class="kw1">import</span></a> io.<span class="me1">Source</span>.<span class="me1">fromFile</span><br />&#160;<br /><a href="http://scala-lang.org"><span class="kw1">def</span></a> letterFrequencies<span class="br0">&#40;</span>filename<span class="sy0">:</span> String<span class="br0">&#41;</span> <span class="sy0">=</span> <br />  fromFile<span class="br0">&#40;</span>filename<span class="br0">&#41;</span>.<span class="me1">mkString</span> groupBy <span class="br0">&#40;</span>c <span class="sy0">=&gt;</span> c<span class="br0">&#41;</span> mapValues <span class="br0">&#40;</span><span class="sy0">_</span>.<span class="me1">length</span><span class="br0">&#41;</span></pre>
<h2><span class="mw-headline" id="Scheme"><a href="/wiki/Category:Scheme" title="Category:Scheme">Scheme</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=83" title="Edit section: Scheme">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Using guile scheme 2.0.11.
</p><p>Note that this prints the scheme representations of characters in no particular order.
</p>
<pre class="scheme highlighted_source"><span class="br0">&#40;</span>use<span class="sy0">-</span>modules <span class="br0">&#40;</span>ice<span class="sy0">-</span><span class="nu0">9</span> format<span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">define</span> <span class="br0">&#40;</span>char<span class="sy0">-</span>freq port table<span class="br0">&#41;</span><br />  <span class="br0">&#40;</span><span class="kw1">if</span><br />   <span class="br0">&#40;</span><span class="kw1">eof-object?</span> <span class="br0">&#40;</span><span class="kw1">peek-char</span> port<span class="br0">&#41;</span><span class="br0">&#41;</span><br />   table<br />   <span class="br0">&#40;</span>char<span class="sy0">-</span>freq port <span class="br0">&#40;</span>add<span class="sy0">-</span>char <span class="br0">&#40;</span><span class="kw1">read-char</span> port<span class="br0">&#41;</span> table<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">define</span> <span class="br0">&#40;</span>add<span class="sy0">-</span>char char table<span class="br0">&#41;</span><br />  <span class="br0">&#40;</span><span class="kw1">cond</span><br />   <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw1">null?</span> table<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">list</span> <span class="br0">&#40;</span><span class="kw1">list</span> char <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />   <span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw1">eq?</span> <span class="br0">&#40;</span><span class="kw1">caar</span> table<span class="br0">&#41;</span> char<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">cons</span> <span class="br0">&#40;</span><span class="kw1">list</span> char <span class="br0">&#40;</span><span class="sy0">+</span> <span class="br0">&#40;</span>cadar table<span class="br0">&#41;</span> <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">cdr</span> table<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />   <span class="br0">&#40;</span>#t <span class="br0">&#40;</span><span class="kw1">cons</span> <span class="br0">&#40;</span><span class="kw1">car</span> table<span class="br0">&#41;</span> <span class="br0">&#40;</span>add<span class="sy0">-</span>char char <span class="br0">&#40;</span><span class="kw1">cdr</span> table<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">define</span> <span class="br0">&#40;</span>format<span class="sy0">-</span>table table<span class="br0">&#41;</span><br />  <span class="br0">&#40;</span><span class="kw1">for-each</span> <span class="br0">&#40;</span><span class="kw1">lambda</span> <span class="br0">&#40;</span><span class="kw1">t</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>format #t <span class="st0">&quot;~10s~10d~%&quot;</span> <span class="br0">&#40;</span><span class="kw1">car</span> <span class="kw1">t</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw1">cadr</span> <span class="kw1">t</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> table<span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span><span class="kw1">define</span> <span class="br0">&#40;</span>print<span class="sy0">-</span>freq filename<span class="br0">&#41;</span><br />  <span class="br0">&#40;</span>format<span class="sy0">-</span>table <span class="br0">&#40;</span>char<span class="sy0">-</span>freq <span class="br0">&#40;</span><span class="kw1">open-input-file</span> filename<span class="br0">&#41;</span> '<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="br0">&#40;</span>print<span class="sy0">-</span>freq <span class="st0">&quot;letter-frequency.scm&quot;</span><span class="br0">&#41;</span></pre>
<p>Output when reading own source:
</p>
<pre>#\(               45
#\u                5
#\s                9
#\e               47
#\-               19
#\m                9
#\o               16
#\d               19
#\l               25
#\space           83
#\i               15
#\c               28
#\9                1
#\f               20
#\r               39
#\a               47
#\t               36
#\)               45
#\newline         21
#\n               15
#\h               14
#\q                7
#\p                9
#\b               16
#\j                1
#\?                3
#\k                1
#\1                4
#\+                1
#\#                2
#\"                4
#\~                3
#\0                2
#\%                1
#\'                1
#\y                1
#\.                1
</pre>
<p>An implementation for CHICKEN scheme:
</p>
<pre class="scheme highlighted_source">&#160;<br /><span class="br0">&#40;</span>with<span class="sy0">-</span>input<span class="sy0">-</span>from<span class="sy0">-</span><span class="kw1">string</span> <span class="st0">&quot;foobar&quot;</span><br />  <span class="br0">&#40;</span><span class="kw1">lambda</span> <span class="br0">&#40;</span><span class="br0">&#41;</span><br />    <span class="br0">&#40;</span>port<span class="sy0">-</span>fold <span class="br0">&#40;</span><span class="kw1">lambda</span> <span class="br0">&#40;</span>x <span class="kw1">s</span><span class="br0">&#41;</span><br />                 <span class="br0">&#40;</span>alist<span class="sy0">-</span>update x<br />                               <span class="br0">&#40;</span>add1 <span class="br0">&#40;</span>alist<span class="sy0">-</span>ref x <span class="kw1">s</span> <span class="kw1">eq?</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />                               <span class="kw1">s</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />               '<span class="br0">&#40;</span><span class="br0">&#41;</span><br />               <span class="kw1">read-char</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />&#160;</pre>
<p>which shows: ((#\f . 1) (#\o . 2) (#\b . 1) (#\a . 1) (#\r . 1))
</p>
<h2><span class="mw-headline" id="Seed7"><a href="/wiki/Category:Seed7" title="Category:Seed7">Seed7</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=84" title="Edit section: Seed7">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">$ include &quot;seed7_05.s7i&quot;;<br />&#160;<br />const type: charHash is hash [char] integer;<br />&#160;<br />const proc: main is func<br />  local<br />    var charHash: numberOfChars is charHash.EMPTY_HASH;<br />    var char: ch is ' ';<br />  begin<br />    ch&#160;:= getc(IN);<br />    while ch &lt;&gt; EOF do<br />      if ch in numberOfChars then<br />        incr(numberOfChars[ch]);<br />      else<br />        numberOfChars @:= [ch] 1;<br />      end if;<br />      ch&#160;:= getc(IN);<br />    end while;<br />    for ch range sort(keys(numberOfChars)) do<br />      writeln(ch &lt;&amp; &quot; &quot; &lt;&amp; numberOfChars[ch]);<br />    end for;<br />  end func;</pre>
<p>Output when the program uses itself as input:
</p>
<pre> 22
  129
&quot; 4
$ 1
&amp; 2
' 2
( 6
) 6
. 2
0 1
...
s 21
t 9
u 9
v 2
w 3
y 2</pre>
<h2><span class="mw-headline" id="Sidef"><a href="/wiki/Category:Sidef" title="Category:Sidef">Sidef</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=85" title="Edit section: Sidef">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="ruby highlighted_source">func letter_frequency<span class="br0">&#40;</span><span class="kw4">File</span> file<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    file.<span class="me1">read</span>.<span class="me1">chars</span>.<span class="me1">grep</span><span class="br0">&#123;</span>.<span class="me1">match</span><span class="br0">&#40;</span><span class="sy0">/</span><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="re3">:alpha</span>:<span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">/</span><span class="br0">&#41;</span><span class="br0">&#125;</span> \<br />        .<span class="me1">group_by</span> <span class="br0">&#123;</span><span class="sy0">|</span>letter<span class="sy0">|</span> letter.<span class="me1">downcase</span><span class="br0">&#125;</span>    \<br />        .<span class="me1">map_val</span>  <span class="br0">&#123;</span><span class="sy0">|</span>_, val<span class="sy0">|</span> val.<span class="me1">len</span><span class="br0">&#125;</span>            \<br />        .<span class="me1">sort_by</span>  <span class="br0">&#123;</span><span class="sy0">|</span>_, val<span class="sy0">|</span> <span class="sy0">-</span>val<span class="br0">&#125;</span><br /><span class="br0">&#125;</span><br />&#160;<br />var top = letter_frequency<span class="br0">&#40;</span><span class="kw4">File</span><span class="br0">&#40;</span><span class="kw2">__FILE__</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />top.<span class="me1">each</span><span class="br0">&#123;</span><span class="sy0">|</span>pair<span class="sy0">|</span> say <span class="st0">&quot;#{pair[0]}: #{pair[1]}&quot;</span><span class="br0">&#125;</span></pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>e: 22
l: 17
a: 16
t: 14
r: 14
p: 12
f: 8
i: 8
n: 7
c: 6
u: 6
o: 6
v: 6
y: 5
s: 5
h: 3
w: 2
q: 2
b: 2
m: 2
g: 2
d: 1
</pre>
<h2><span class="mw-headline" id="SIMPOL"><a href="/wiki/Category:SIMPOL" title="Category:SIMPOL">SIMPOL</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=86" title="Edit section: SIMPOL">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Example: open a text file and compute letter frequency.
</p>
<pre class="text highlighted_source">constant iBUFSIZE 500<br />&#160;<br />function main(string filename)<br />  fsfileinputstream fpi<br />  integer e, i, aval, zval, cval<br />  string s, buf, c<br />  array chars<br />&#160;<br />  e = 0<br />  fpi <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="635e23">[email&#160;protected]</a> fsfileinputstream.new(filename, error=e)<br />  if fpi <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="a09de0">[email&#160;protected]</a>= .nul<br />    s = &quot;Error, file &quot;&quot;&quot; + filename + &quot;&quot;&quot; not found{d}{a}&quot;<br />  else<br />    chars <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="0f324f">[email&#160;protected]</a> array.new()<br />    aval = .charval(&quot;a&quot;)<br />    zval = .charval(&quot;z&quot;)<br />    i = 1<br />    while i &lt;= 26<br />      chars[i] = 0<br />      i = i + 1<br />    end while<br />    buf = .lcase(fpi.getstring(iBUFSIZE, 1))<br />    while not fpi.endofdata and buf &gt; &quot;&quot;<br />      i = 1<br />      while i &lt;= .len(buf)<br />        c = .substr(buf, i, 1)<br />        cval = .charval(c)<br />        if cval &gt;= aval and cval &lt;= zval<br />          chars[cval - aval + 1] = chars[cval - aval + 1] + 1<br />        end if<br />        i = i + 1<br />      end while<br />      buf = .lcase(fpi.getstring(iBUFSIZE, 1))<br />    end while<br />&#160;<br />    s = &quot;Character counts for &quot;&quot;&quot; + filename + &quot;&quot;&quot;{d}{a}&quot;<br />    i = 1<br />    while i &lt;= chars.count()<br />      s = s + .char(aval + i - 1) + &quot;: &quot; + .tostr(chars[i], 10) + &quot;{d}{a}&quot;<br />      i = i + 1<br />    end while<br />  end if<br />end function s</pre>
<p>As this was being created I realized that in [SIMPOL] I wouldn't have done it this way (in fact, I wrote it differently the first time and had to go back and change it to use an array afterward). In [SIMPOL] we would have used the set object. It acts similarly to a single-dimensional array, but can also use various set operations, such as difference, unite, intersect, etc. One of th einteresting things is that each unique value is stored only once, and the number of duplicates is stored with it. The sample then looks a little cleaner:
</p>
<pre class="text highlighted_source">constant iBUFSIZE 500<br />&#160;<br />function main(string filename)<br />  fsfileinputstream fpi<br />  integer e, i, aval, zval<br />  string s, buf, c<br />  set chars<br />&#160;<br />  e = 0<br />  fpi <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="93aed3">[email&#160;protected]</a> fsfileinputstream.new(filename, error=e)<br />  if fpi <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="556815">[email&#160;protected]</a>= .nul<br />    s = &quot;Error, file &quot;&quot;&quot; + filename + &quot;&quot;&quot; not found{d}{a}&quot;<br />  else<br />    chars <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="7d403d">[email&#160;protected]</a> set.new()<br />    aval = .charval(&quot;a&quot;)<br />    zval = .charval(&quot;z&quot;)<br />    buf = .lcase(fpi.getstring(iBUFSIZE, 1))<br />    while not fpi.endofdata and buf &gt; &quot;&quot;<br />      i = 1<br />      while i &lt;= .len(buf)<br />        c = .substr(buf, i, 1)<br />        if .charval(c) &gt;= aval and .charval(c) &lt;= zval<br />          chars.addvalue(c)<br />        end if<br />        i = i + 1<br />      end while<br />      buf = .lcase(fpi.getstring(iBUFSIZE, 1))<br />    end while<br />&#160;<br />    s = &quot;Character counts for &quot;&quot;&quot; + filename + &quot;&quot;&quot;{d}{a}&quot;<br />    i = 1<br />    while i &lt;= chars.count()<br />      s = s + chars[i] + &quot;: &quot; + .tostr(chars.valuecount(chars[i]), 10) + &quot;{d}{a}&quot;<br />      i = i + 1<br />    end while<br />  end if<br />end function s</pre>
<p>The final stage simply reads the totals for each character. One caveat, if a character is unrepresented, then it will not show up at all in this second implementation.
</p>
<h2><span class="mw-headline" id="Tcl"><a href="/wiki/Category:Tcl" title="Category:Tcl">Tcl</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=87" title="Edit section: Tcl">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="tcl highlighted_source"><span class="kw1">proc</span> letterHistogram <span class="br0">&#123;</span>fileName<span class="br0">&#125;</span> <span class="br0">&#123;</span><br />    <span class="co1"># Initialize table (in case of short texts without every letter)</span><br />    <span class="kw1">for</span> <span class="br0">&#123;</span><span class="kw1">set</span> i <span class="nu0">97</span><span class="br0">&#125;</span> <span class="br0">&#123;</span><span class="re0">$i</span><span class="sy0">&lt;</span>=<span class="nu0">122</span><span class="br0">&#125;</span> <span class="br0">&#123;</span><span class="kw2">incr</span> i<span class="br0">&#125;</span> <span class="br0">&#123;</span><br />        <span class="kw1">set</span> frequency<span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw2">format</span> <span class="sy0">%</span>c <span class="re0">$i</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="nu0">0</span><br />    <span class="br0">&#125;</span><br />    <span class="co1"># Iterate over characters in file</span><br />    <span class="kw1">set</span> f <span class="br0">&#91;</span><span class="kw2">open</span> <span class="re0">$fileName</span><span class="br0">&#93;</span><br />    <span class="kw1">foreach</span> c <span class="br0">&#91;</span><span class="kw2">split</span> <span class="br0">&#91;</span><span class="kw2">read</span> <span class="re0">$f</span><span class="br0">&#93;</span> <span class="st0">&quot;&quot;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span><br />        <span class="co1"># Count them if they're alphabetic</span><br />        <span class="kw1">if</span> <span class="br0">&#123;</span><span class="br0">&#91;</span><span class="kw2">string</span> is alpha <span class="re0">$c</span><span class="br0">&#93;</span><span class="br0">&#125;</span> <span class="br0">&#123;</span><br />            <span class="kw2">incr</span> frequency<span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw2">string</span> tolower <span class="re0">$c</span><span class="br0">&#93;</span><span class="br0">&#41;</span><br />        <span class="br0">&#125;</span><br />    <span class="br0">&#125;</span><br />    <span class="kw2">close</span> <span class="re0">$f</span><br />    <span class="co1"># Print the histogram</span><br />    parray frequency<br /><span class="br0">&#125;</span><br />&#160;<br />letterHistogram the/sample.txt</pre>
<h2><span class="mw-headline" id="TUSCRIPT"><a href="/wiki/Category:TUSCRIPT" title="Category:TUSCRIPT">TUSCRIPT</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=88" title="Edit section: TUSCRIPT">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />$$ MODE TUSCRIPT<br />words = REQUEST (&quot;http://www.puzzlers.org/pub/wordlists/unixdict.txt&quot;)<br />&#160;<br />DICT letters create<br />MODE {}<br />COMPILE<br />LOOP word=words<br /> letters=SPLIT (word,|&quot;:?:&quot;)<br /> LOOP letter=letters<br />  DICT letters ADD/QUIET/COUNT letter<br /> ENDLOOP<br />ENDLOOP<br />ENDCOMPILE<br />DICT letters unload letter,size,cnt<br />&#160;<br />index    =DIGIT_INDEX (cnt)<br />index    =REVERSE (index)<br />letter   =INDEX_SORT (letter,index)<br />cnt      =INDEX_SORT (cnt,index)<br />frequency=JOIN (letter,&quot; --- &quot;,cnt)<br />&#160;<br />*{frequency}<br />&#160;</pre>
<p>Output:
</p>
<pre style="height:30ex;overflow:scroll">e --- 20144
a --- 16421
i --- 13980
r --- 13436
t --- 12836
o --- 12738
n --- 12097
s --- 10210
l --- 10061
c --- 8216
u --- 6489
m --- 5828
d --- 5799
p --- 5516
h --- 5208
g --- 4129
b --- 4115
y --- 3633
f --- 2662
w --- 1968
k --- 1925
v --- 1902
x --- 617
z --- 433
j --- 430
q --- 378
' --- 105
. --- 6
&amp; --- 6
1 --- 2
9 --- 1
8 --- 1
7 --- 1
6 --- 1
5 --- 1
4 --- 1
3 --- 1
2 --- 1
0 --- 1
</pre>
<h2><span class="mw-headline" id="TXR"><a href="/wiki/Category:TXR" title="Category:TXR">TXR</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=89" title="Edit section: TXR">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="TXR_Extraction_Language_plus_TXR_Lisp">TXR Extraction Language plus TXR Lisp</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=90" title="Edit section: TXR Extraction Language plus TXR Lisp">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre class="text highlighted_source">@(do (defvar h (hash&#160;:equal-based)))<br />@(repeat)<br />@(coll&#160;:vars ())@\<br />  @{letter /[A-Za-z]/}@(filter&#160;:upcase letter)@\<br />  @(do (inc [h letter 0]))@\<br />@(end)<br />@(end)<br />@(do (dohash (key value h)<br />       (format t &quot;~a: ~a\n&quot; key value)))</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>$ ./txr letterfreq.txr /usr/share/dict/words
A: 64123
B: 15524
C: 31569
[ ... abridged ... ]
X: 2124
Y: 12507
Z: 3238</pre>
<h3><span class="mw-headline" id="TXR_Lisp">TXR Lisp</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=91" title="Edit section: TXR Lisp">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre class="text highlighted_source">(let* ((s (open-file &quot;/usr/share/dict/words&quot; &quot;r&quot;))<br />       (chrs [keep-if* chr-isalpha (gun (get-char s))])<br />       (h [group-reduce (hash) chr-toupper (op succ @1) chrs 0]))<br />  (dohash (key value h)<br />    (put-line `@key: @value`)))</pre>
<h2><span class="mw-headline" id="Vala"><a href="/wiki/Category:Vala" title="Category:Vala">Vala</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=92" title="Edit section: Vala">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="examplemeta libheader"><b>Library:</b> <a href="/mw/index.php?title=Category:Gee&amp;action=edit&amp;redlink=1" class="new" title="Category:Gee (page does not exist)">Gee</a></div>
<p>Counts every character except new line character.
</p>
<pre class="vala highlighted_source">&#160;<br /><span class="kw1">using</span> <span class="co3">Gee</span><span class="sy0">;</span><br />&#160;<br /><span class="kw1">void</span> main<span class="br0">&#40;</span><span class="kw4">string</span><span class="br0">&#91;</span><span class="br0">&#93;</span> args<span class="br0">&#41;</span><span class="br0">&#123;</span><br />    <span class="kw4">string</span> filename <span class="sy0">=</span> args<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">;</span><br />    <span class="kw1">var</span> file <span class="sy0">=</span> FileStream.<span class="me1">open</span><span class="br0">&#40;</span>filename, <span class="st0">&quot;r&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br />    <span class="kw1">var</span>	counter	<span class="sy0">=</span> <span class="kw3">new</span> HashMap<span class="sy0">&lt;</span><span class="kw4">char</span>, <span class="kw4">int</span><span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />&#160;<br />    <span class="kw4">string</span> line <span class="sy0">=</span> file.<span class="me1">read_line</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />    <span class="kw1">while</span> <span class="br0">&#40;</span>line <span class="sy0">!=</span> <span class="kw1">null</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />        <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> x <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>	x <span class="sy0">&lt;</span> line.<span class="me1">length</span><span class="sy0">;</span> x<span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />            counter<span class="br0">&#91;</span>line<span class="br0">&#91;</span>x<span class="br0">&#93;</span><span class="br0">&#93;</span> <span class="sy0">=</span> counter<span class="br0">&#91;</span>line<span class="br0">&#91;</span>x<span class="br0">&#93;</span><span class="br0">&#93;</span> <span class="sy0">+</span> <span class="nu0">1</span><span class="sy0">;</span><br />	<span class="br0">&#125;</span><br />        line <span class="sy0">=</span> file.<span class="me1">read_line</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />    <span class="br0">&#125;</span><br />&#160;<br />    <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="kw1">var</span> elem <span class="kw1">in</span> counter.<span class="me1">entries</span><span class="br0">&#41;</span><span class="br0">&#123;</span><br />	stdout.<span class="me1">printf</span><span class="br0">&#40;</span><span class="st0">&quot;%c occured&#160;%d times<span class="es0">\n</span>&quot;</span>, elem.<span class="me1">key</span>, elem.<span class="kw1">value</span><span class="br0">&#41;</span><span class="sy0">;</span><br />    <span class="br0">&#125;</span><br /><span class="br0">&#125;</span><br />&#160;</pre>
<p>Sample output (run on its own source code) with several lines omitted:
</p>
<pre>v occured 5 times
, occured 4 times
w occured 2 times
	 occured 19 times
S occured 1 times
1 occured 2 times
! occured 1 times
k occured 1 times
l occured 22 times
</pre>
<h2><span class="mw-headline" id="VBA"><a href="/wiki/Category:VBA" title="Category:VBA">VBA</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=93" title="Edit section: VBA">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">&#160;<br />Public Sub LetterFrequency(fname)<br />'count number of letters in text file &quot;fname&quot; (ASCII-coded)<br />'note: we count all characters but print only the letter frequencies<br />&#160;<br />Dim Freqs(255) As Long<br />Dim abyte As Byte<br />Dim ascal as Byte 'ascii code for lowercase a<br />Dim ascau as Byte 'ascii code for uppercase a<br />&#160;<br />'try to open the file<br />On Error GoTo CantOpen<br />Open fname For Input As #1<br />On Error GoTo 0<br />&#160;<br />'initialize<br />For i = 0 To 255<br />  Freqs(i) = 0<br />Next i<br />&#160;<br />'process file byte-per-byte<br />While Not EOF(1)<br /> abyte = Asc(Input(1, #1))<br /> Freqs(abyte) = Freqs(abyte) + 1<br />Wend<br />Close #1<br />&#160;<br />'add lower and upper case together and print result<br />Debug.Print &quot;Frequencies:&quot;<br />ascal = Asc(&quot;a&quot;)<br />ascau = Asc(&quot;A&quot;)<br />For i = 0 To 25<br />  Debug.Print Chr$(ascal + i), Freqs(ascal + i) + Freqs(ascau + i)<br />Next i<br />Exit Sub<br />&#160;<br />CantOpen:<br />  Debug.Print &quot;can't find or read the file &quot;; fname<br />  Close<br />End Sub<br />&#160;</pre>
<p>Output:
</p>
<pre>LetterFrequency &quot;d:\largetext.txt&quot;
Frequencies:
a              24102 
b              4985 
c              4551 
d              19127 
e              61276 
f              2734 
g              10661 
h              8243 
i              21589 
j              4904 
k              7186 
l              12026 
m              7454 
n              31963 
o              19021 
p              4960 
q              37 
r              21166 
s              13403 
t              21090 
u              6117 
v              8612 
w              5017 
x              168 
y              299 
z              4159 
</pre>
<h2><span class="mw-headline" id="VBScript"><a href="/wiki/Category:VBScript" title="Category:VBScript">VBScript</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=94" title="Edit section: VBScript">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="vb highlighted_source">&#160;<br />filepath = <span class="st0">&quot;SPECIFY FILE PATH HERE&quot;</span><br />&#160;<br /><span class="kw4">Set</span> objfso = <span class="kw2">CreateObject</span>(<span class="st0">&quot;Scripting.FileSystemObject&quot;</span>)<br /><span class="kw4">Set</span> objdict = <span class="kw2">CreateObject</span>(<span class="st0">&quot;Scripting.Dictionary&quot;</span>)<br /><span class="kw4">Set</span> objfile = objfso.OpenTextFile(filepath,1)<br />&#160;<br />txt = objfile.ReadAll<br />&#160;<br /><span class="kw3">For</span> i = 1 <span class="kw3">To</span> Len(txt)<br />	char = Mid(txt,i,1)<br />	<span class="kw3">If</span> objdict.Exists(char) <span class="kw3">Then</span><br />		objdict.Item(char) = objdict.Item(char) + 1<br />	<span class="kw3">Else</span><br />		objdict.Add char,1<br />	<span class="kw3">End</span> <span class="kw3">If</span><br /><span class="kw3">Next</span><br />&#160;<br /><span class="kw3">For</span> <span class="kw3">Each</span> key <span class="kw3">In</span> objdict.Keys<br />	WScript.StdOut.WriteLine key &amp; <span class="st0">&quot; = &quot;</span> &amp; objdict.Item(key)<br /><span class="kw3">Next</span>	<br />&#160;<br />objfile.<span class="kw3">Close</span><br /><span class="kw4">Set</span> objfso = <span class="kw5">Nothing</span><br /><span class="kw4">Set</span> objdict = <span class="kw5">Nothing</span><br />&#160;</pre>
<h2><span class="mw-headline" id="Vedit_macro_language"><a href="/wiki/Category:Vedit_macro_language" title="Category:Vedit macro language">Vedit macro language</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=95" title="Edit section: Vedit macro language">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="vedit highlighted_source">File_Open<span class="br0">&#40;</span><span class="st0">&quot;c:\txt\a_text_file.txt&quot;</span><span class="br0">&#41;</span><br />Update<span class="br0">&#40;</span><span class="br0">&#41;</span><br />&#160;<br /><span class="kw1">for</span> <span class="br0">&#40;</span>#<span class="nu0">1</span><span class="sy0">=</span><span class="st0">'A'</span><span class="sy0">;</span> #<span class="nu0">1</span><span class="sy0">&lt;=</span><span class="st0">'Z'</span><span class="sy0">;</span> #<span class="nu0">1</span><span class="sy0">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />    Out_Reg<span class="br0">&#40;</span><span class="nu0">103</span><span class="br0">&#41;</span> Char_Dump<span class="br0">&#40;</span>#<span class="nu0">1</span><span class="sy0">,</span>NOCR<span class="br0">&#41;</span> Out_Reg<span class="br0">&#40;</span>CLEAR<span class="br0">&#41;</span><br />    #<span class="nu0">2</span> <span class="sy0">=</span> Search<span class="br0">&#40;</span>@103<span class="sy0">,</span> BEGIN<span class="sy0">+</span>ALL<span class="sy0">+</span>NOERR<span class="br0">&#41;</span><br />    Message<span class="br0">&#40;</span>@103<span class="br0">&#41;</span> Num_Type<span class="br0">&#40;</span>#<span class="nu0">2</span><span class="br0">&#41;</span><br /><span class="br0">&#125;</span></pre>
<p>Example output:
</p>
<pre>A   76
B   23
C   51
D   64
E  192
F   51
G   32
H   59
I  146
J    1
K    9
L   73
M   34
N   94
O  113
P   27
Q    1
R   92
S   89
T  138
U   63
V   26
W   35
X   16
Y   16
Z    2
</pre>
<h2><span class="mw-headline" id="Whitespace"><a href="/wiki/Category:Whitespace" title="Category:Whitespace">Whitespace</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=96" title="Edit section: Whitespace">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="whitespace highlighted_source"><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br />&#160;<br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br />&#160;<br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><br />&#160;<br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><br />&#160;<br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br /><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><br /><span class="re3">&#9;</span><br /><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re3">&#9;</span><br />&#160;<br /><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><span class="re3">&#9;</span><span class="re2">&#32;</span><span class="re2">&#32;</span><br /><span class="re2">&#32;</span><br />&#160;<br />&#160;<br />&#160;</pre>
<pre class="asm highlighted_source"><span class="kw1">push</span> <span class="nu0">127</span><br /><span class="co1">; Initialize a slot in the heap for each ASCII character.</span><br /><span class="nu0">0</span><span class="sy1">:</span><br />    dup<br />    <span class="kw1">push</span> <span class="nu0">0</span><br />    store<br />    <span class="kw1">push</span> <span class="nu0">1</span><br />    <span class="kw1">sub</span><br />    dup<br />    jn <span class="nu0">1</span><br />    jump <span class="nu0">0</span><br /><span class="co1">; Read until EOF, incrementing the relevant heap slot.</span><br /><span class="nu0">1</span><span class="sy1">:</span><br />    <span class="kw1">push</span> <span class="nu0">0</span><br />    dup<br />    ichr<br />    load<br />    dup<br />    jn <span class="nu0">2</span> <span class="co1">; Done reading, proceed to print.</span><br />    dup<br />    load<br />    <span class="kw1">push</span> <span class="nu0">1</span><br />    <span class="kw1">add</span><br />    store<br />    jump <span class="nu0">1</span><br /><span class="co1">; Stack is [-1 -1], but [0] would be nice.</span><br /><span class="nu0">2</span><span class="sy1">:</span><br />    <span class="kw1">sub</span><br /><span class="co1">; Print characters with tallies greater than 0.</span><br /><span class="nu0">3</span><span class="sy1">:</span><br />    <span class="kw1">push</span> <span class="nu0">1</span><br />    <span class="kw1">add</span><br />    dup<br />    <span class="kw1">push</span> <span class="nu0">128</span><br />    <span class="kw1">sub</span><br />    <span class="kw1">jz</span> <span class="nu0">4</span> <span class="co1">; All done.</span><br />    dup<br />    load<br />    <span class="kw1">jz</span> <span class="nu0">3</span> <span class="co1">; Don't print if no occurrences.</span><br />    dup<br />    ochr <span class="co1">; Display the character,</span><br />    <span class="kw1">push</span> <span class="nu0">32</span><br />    ochr <span class="co1">; a space,</span><br />    dup<br />    load<br />    onum <span class="co1">; its frequency,</span><br />    <span class="kw1">push</span> <span class="nu0">10</span><br />    ochr <span class="co1">; and a newline.</span><br />    jump <span class="nu0">3</span><br /><span class="nu0">4</span><span class="sy1">:</span><br />    <span class="kw1">pop</span><br />    exit</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>$ cat freq.ws | wspace freq.ws
	 64

 55
  119</pre>
<h2><span class="mw-headline" id="XPL0"><a href="/wiki/Category:XPL0" title="Category:XPL0">XPL0</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=97" title="Edit section: XPL0">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This takes advantage of DOS's ability to redirect input from a file to
the keyboard. The input file must be terminated with an end-of-file
character ($1A). Usage: count &lt;filename.ext
</p>
<pre class="text highlighted_source">include c:\cxpl\codes;          \intrinsic 'code' declarations<br />int A(256), C, I;<br />[for C:= 0 to 256-1 do A(C):= 0;<br />repeat  C:= ChIn(1);            \device 1 doesn't buffer nor echo chars<br />        A(C):= A(C)+1;          \count character<br />until   C=\EOF\$1A;<br />C:= 0;<br />for I:= 0 to 128-1 do           \only show 7-bit ASCII<br />        [ChOut(0, \tab\9);<br />        case C of<br />          $0A: ChOut(6, $19);   \line feed = down arrow<br />          $0D: ChOut(6, $1B)    \carriage return = left arrow<br />        other  ChOut(6, C);     \all other characters display on device 6<br />        ChOut(0, ^ );<br />        IntOut(0, A(C));        \show count<br />        C:= C+16;               \columnar order<br />        if (I&amp;7) = 7 then [CrLf(0);  C:= C-8*16+1];<br />        ];<br />]</pre>
<p>Example output of count.xpl counting itself:
<a href="/wiki/File:Count2XPL0.gif" class="image"><img alt="Count2XPL0.gif" src="/mw/images/2/24/Count2XPL0.gif" width="658" height="147" /></a>
</p>
<h2><span class="mw-headline" id="zkl"><a href="/wiki/Category:Zkl" title="Category:Zkl">zkl</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/mw/index.php?title=Letter_frequency&amp;action=edit&amp;section=98" title="Edit section: zkl">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<pre class="text highlighted_source">fcn ccnt(textInBitBucket){<br />   letters:=[&quot;a&quot;..&quot;z&quot;].pump(List().write,0); // array of 26 zeros<br />   textInBitBucket.howza(0).pump(Void,'wrap(c){  // pump text as ints<br />      if(97&lt;=c&lt;=122)     c-=97;<br />      else if(65&lt;=c&lt;=90) c-=65;<br />      else return(Void.Skip);<br />      letters[c]+=1<br />   });<br />   sum:=letters.sum(); println(sum,&quot; letters&quot;);<br />   letters.enumerate().pump(List,'wrap([(c,n)]){<br />      &quot;%s(%d:%d%)&quot;.fmt((c+65).toChar(),n,n*100/sum)})<br />   .concat(&quot;,&quot;).println();<br />}<br />&#160;<br />ccnt(Data(0,Int,&quot;This is a test&quot;));<br />ccnt(File(&quot;dict.txt&quot;).read());</pre>
<div>
<dl><dt>Output:</div></dt></dl>
<pre>11 letters
A(1:9%),B(0:0%),C(0:0%),D(0:0%),E(1:9%),F(0:0%),G(0:0%),H(1:9%),I(2:18%),J(0:0%),K(0:0%),L(0:0%),M(0:0%),N(0:0%),O(0:0%),P(0:0%),Q(0:0%),R(0:0%),S(3:27%),T(3:27%),U(0:0%),V(0:0%),W(0:0%),X(0:0%),Y(0:0%),Z(0:0%)

181171 letters
A(16421:9%),B(4115:2%),C(8216:4%),D(5799:3%),E(20144:11%),F(2662:1%),G(4129:2%),H(5208:2%),I(13980:7%),J(430:0%),K(1925:1%),L(10061:5%),M(5828:3%),N(12097:6%),O(12738:7%),P(5516:3%),Q(378:0%),R(13436:7%),S(10210:5%),T(12836:7%),U(6489:3%),V(1902:1%),W(1968:1%),X(617:0%),Y(3633:2%),Z(433:0%)
</pre>



</div><div class="printfooter">
Retrieved from "<a dir="ltr" href="http://rosettacode.org/mw/index.php?title=Letter_frequency&amp;oldid=258219">http://rosettacode.org/mw/index.php?title=Letter_frequency&amp;oldid=258219</a>"</div>
</div>

<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/wiki/Category:Programming_Tasks" title="Category:Programming Tasks">Programming Tasks</a></li><li><a href="/wiki/Category:Probability_and_statistics" title="Category:Probability and statistics">Probability and statistics</a></li><li><a href="/wiki/Category:Randomness" title="Category:Randomness">Randomness</a></li><li><a href="/wiki/Category:ACL2" title="Category:ACL2">ACL2</a></li><li><a href="/wiki/Category:Ada" title="Category:Ada">Ada</a></li><li><a href="/wiki/Category:Aikido" title="Category:Aikido">Aikido</a></li><li><a href="/wiki/Category:ALGOL_68" title="Category:ALGOL 68">ALGOL 68</a></li><li><a href="/wiki/Category:APL" title="Category:APL">APL</a></li><li><a href="/wiki/Category:AutoHotkey" title="Category:AutoHotkey">AutoHotkey</a></li><li><a href="/wiki/Category:AutoIt" title="Category:AutoIt">AutoIt</a></li><li><a href="/wiki/Category:AWK" title="Category:AWK">AWK</a></li><li><a href="/wiki/Category:BaCon" title="Category:BaCon">BaCon</a></li><li><a href="/wiki/Category:BBC_BASIC" title="Category:BBC BASIC">BBC BASIC</a></li><li><a href="/wiki/Category:Bracmat" title="Category:Bracmat">Bracmat</a></li><li><a href="/wiki/Category:C" title="Category:C">C</a></li><li><a href="/wiki/Category:C_sharp" title="Category:C sharp">C sharp</a></li><li><a href="/wiki/Category:C%2B%2B" title="Category:C++">C++</a></li><li><a href="/wiki/Category:Common_Lisp" title="Category:Common Lisp">Common Lisp</a></li><li><a href="/wiki/Category:Clojure" title="Category:Clojure">Clojure</a></li><li><a href="/wiki/Category:Component_Pascal" title="Category:Component Pascal">Component Pascal</a></li><li><a href="/wiki/Category:D" title="Category:D">D</a></li><li><a href="/wiki/Category:EchoLisp" title="Category:EchoLisp">EchoLisp</a></li><li><a href="/wiki/Category:Eiffel" title="Category:Eiffel">Eiffel</a></li><li><a href="/wiki/Category:Elixir" title="Category:Elixir">Elixir</a></li><li><a href="/wiki/Category:Erlang" title="Category:Erlang">Erlang</a></li><li><a href="/wiki/Category:ERRE" title="Category:ERRE">ERRE</a></li><li><a href="/wiki/Category:Euphoria" title="Category:Euphoria">Euphoria</a></li><li><a href="/wiki/Category:F_Sharp" title="Category:F Sharp">F Sharp</a></li><li><a href="/wiki/Category:FBSL" title="Category:FBSL">FBSL</a></li><li><a href="/wiki/Category:Factor" title="Category:Factor">Factor</a></li><li><a href="/wiki/Category:Forth" title="Category:Forth">Forth</a></li><li><a href="/wiki/Category:Fortran" title="Category:Fortran">Fortran</a></li><li><a href="/wiki/Category:FreeBASIC" title="Category:FreeBASIC">FreeBASIC</a></li><li><a href="/wiki/Category:Gambas" title="Category:Gambas">Gambas</a></li><li><a href="/wiki/Category:Go" title="Category:Go">Go</a></li><li><a href="/wiki/Category:Groovy" title="Category:Groovy">Groovy</a></li><li><a href="/wiki/Category:Harbour" title="Category:Harbour">Harbour</a></li><li><a href="/wiki/Category:Haskell" title="Category:Haskell">Haskell</a></li><li><a href="/wiki/Category:Icon" title="Category:Icon">Icon</a></li><li><a href="/wiki/Category:Unicon" title="Category:Unicon">Unicon</a></li><li><a href="/wiki/Category:Icon_Programming_Library" title="Category:Icon Programming Library">Icon Programming Library</a></li><li><a href="/wiki/Category:J" title="Category:J">J</a></li><li><a href="/wiki/Category:Java" title="Category:Java">Java</a></li><li><a href="/wiki/Category:JavaScript" title="Category:JavaScript">JavaScript</a></li><li><a href="/wiki/Category:Jq" title="Category:Jq">Jq</a></li><li><a href="/wiki/Category:Julia" title="Category:Julia">Julia</a></li><li><a href="/wiki/Category:K" title="Category:K">K</a></li><li><a href="/wiki/Category:Kotlin" title="Category:Kotlin">Kotlin</a></li><li><a href="/wiki/Category:Liberty_BASIC" title="Category:Liberty BASIC">Liberty BASIC</a></li><li><a href="/wiki/Category:Lasso" title="Category:Lasso">Lasso</a></li><li><a href="/wiki/Category:Lua" title="Category:Lua">Lua</a></li><li><a href="/wiki/Category:Maple" title="Category:Maple">Maple</a></li><li><a href="/wiki/Category:Mathematica" title="Category:Mathematica">Mathematica</a></li><li><a href="/wiki/Category:Wolfram_Language" title="Category:Wolfram Language">Wolfram Language</a></li><li><a href="/wiki/Category:MATLAB" title="Category:MATLAB">MATLAB</a></li><li><a href="/wiki/Category:Octave" title="Category:Octave">Octave</a></li><li><a href="/wiki/Category:NetRexx" title="Category:NetRexx">NetRexx</a></li><li><a href="/wiki/Category:Nim" title="Category:Nim">Nim</a></li><li><a href="/wiki/Category:Objeck" title="Category:Objeck">Objeck</a></li><li><a href="/wiki/Category:Objective-C" title="Category:Objective-C">Objective-C</a></li><li><a href="/wiki/Category:OCaml" title="Category:OCaml">OCaml</a></li><li><a href="/wiki/Category:OxygenBasic" title="Category:OxygenBasic">OxygenBasic</a></li><li><a href="/wiki/Category:PARI/GP" title="Category:PARI/GP">PARI/GP</a></li><li><a href="/wiki/Category:Pascal" title="Category:Pascal">Pascal</a></li><li><a href="/wiki/Category:Perl" title="Category:Perl">Perl</a></li><li><a href="/wiki/Category:Perl_6" title="Category:Perl 6">Perl 6</a></li><li><a href="/wiki/Category:Phix" title="Category:Phix">Phix</a></li><li><a href="/wiki/Category:PHP" title="Category:PHP">PHP</a></li><li><a href="/wiki/Category:PicoLisp" title="Category:PicoLisp">PicoLisp</a></li><li><a href="/wiki/Category:PL/I" title="Category:PL/I">PL/I</a></li><li><a href="/wiki/Category:PowerShell" title="Category:PowerShell">PowerShell</a></li><li><a href="/wiki/Category:Prolog" title="Category:Prolog">Prolog</a></li><li><a href="/wiki/Category:PureBasic" title="Category:PureBasic">PureBasic</a></li><li><a href="/wiki/Category:Python" title="Category:Python">Python</a></li><li><a href="/wiki/Category:R" title="Category:R">R</a></li><li><a href="/wiki/Category:Racket" title="Category:Racket">Racket</a></li><li><a href="/wiki/Category:Raven" title="Category:Raven">Raven</a></li><li><a href="/wiki/Category:REXX" title="Category:REXX">REXX</a></li><li><a href="/wiki/Category:Ring" title="Category:Ring">Ring</a></li><li><a href="/wiki/Category:Ruby" title="Category:Ruby">Ruby</a></li><li><a href="/wiki/Category:Run_BASIC" title="Category:Run BASIC">Run BASIC</a></li><li><a href="/wiki/Category:Rust" title="Category:Rust">Rust</a></li><li><a href="/wiki/Category:Scala" title="Category:Scala">Scala</a></li><li><a href="/wiki/Category:Scheme" title="Category:Scheme">Scheme</a></li><li><a href="/wiki/Category:Seed7" title="Category:Seed7">Seed7</a></li><li><a href="/wiki/Category:Sidef" title="Category:Sidef">Sidef</a></li><li><a href="/wiki/Category:SIMPOL" title="Category:SIMPOL">SIMPOL</a></li><li><a href="/wiki/Category:Tcl" title="Category:Tcl">Tcl</a></li><li><a href="/wiki/Category:TUSCRIPT" title="Category:TUSCRIPT">TUSCRIPT</a></li><li><a href="/wiki/Category:TXR" title="Category:TXR">TXR</a></li><li><a href="/wiki/Category:Vala" title="Category:Vala">Vala</a></li><li><a href="/mw/index.php?title=Category:Gee&amp;action=edit&amp;redlink=1" class="new" title="Category:Gee (page does not exist)">Gee</a></li><li><a href="/wiki/Category:VBA" title="Category:VBA">VBA</a></li><li><a href="/wiki/Category:VBScript" title="Category:VBScript">VBScript</a></li><li><a href="/wiki/Category:Vedit_macro_language" title="Category:Vedit macro language">Vedit macro language</a></li><li><a href="/wiki/Category:Whitespace" title="Category:Whitespace">Whitespace</a></li><li><a href="/wiki/Category:XPL0" title="Category:XPL0">XPL0</a></li><li><a href="/wiki/Category:Zkl" title="Category:Zkl">Zkl</a></li></ul></div></div>
</div>
</div>
</div>
<div class="row">
<div class="col-lg-12">

<nav class="navbar navbar-default p-tb " id="p-tb">
<ul class="nav navbar-nav small">
<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Letter_frequency" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Letter_frequency" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
<li id="t-print"><a href="/mw/index.php?title=Letter_frequency&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
<li id="t-permalink"><a href="/mw/index.php?title=Letter_frequency&amp;oldid=258219" title="Permanent link to this revision of the page">Permanent link</a></li>
<li id="t-info"><a href="/mw/index.php?title=Letter_frequency&amp;action=info" title="More information about this page">Page information</a></li>
<li id="t-smwbrowselink"><a href="/wiki/Special:Browse/Letter_frequency" rel="smw-browse">Browse properties</a></li>
</ul>
</nav>
</div>
</div>
<div class="row">
<div class="col-lg-12">

<ul class="footer-info list-unstyled small" id="footer-info">

<li> This page was last modified on 10 January 2018, at 13:35.</li>
<li>Content is available under <a class="external" rel="nofollow" href="http://www.gnu.org/licenses/fdl-1.2.html">GNU Free Documentation License 1.2</a> unless otherwise noted.</li>
</ul>
</div>
</div>
<div class="row">
<div class="col-lg-6">

<ul class="list-inline footer-places " id="footer-places">
<li><small><a href="/wiki/Rosetta_Code:Privacy_policy" title="Rosetta Code:Privacy policy">Privacy policy</a></small></li>
<li><small><a href="/wiki/Rosetta_Code:About" title="Rosetta Code:About">About Rosetta Code</a></small></li>
<li><small><a href="/wiki/Rosetta_Code:General_disclaimer" title="Rosetta Code:General disclaimer">Disclaimers</a></small></li>
</ul>
</div>
<div class="col-lg-6">

<ul class="list-inline pull-right footer-icons " id="footer-icons">

<li><a href="http://www.gnu.org/licenses/fdl-1.2.html"><img src="/mw/resources/assets/licenses/gnu-fdl.png" alt="GNU Free Documentation License 1.2" width="88" height="31" /></a></li>

<li><a href="//www.mediawiki.org/"><img src="/mw/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/mw/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /mw/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" /></a></li>
<li><a href="https://www.semantic-mediawiki.org/wiki/Semantic_MediaWiki"><img src="/mw/extensions/SemanticMediaWiki/includes/../resources/images/smw_button.png" alt="Powered by Semantic MediaWiki" width="88" height="31" /></a></li>
</ul>
</div>
</div>
</div><script data-cfasync="false" src="/cdn-cgi/scripts/d07b1474/cloudflare-static/email-decode.min.js"></script><script type="text/rocketscript">window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.state({"user":"ready","user.groups":"ready"});mw.loader.load(["mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.bootstrap.scripts"]);
} );</script>
<script type="text/rocketscript">
  var _gaq = _gaq || [];
  _gaq.push(["_setAccount", "UA-1219419-1"]);
  _gaq.push(["_trackPageview"]);

  (function() {
    var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
    ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
    var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<script type="text/rocketscript">window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgBackendResponseTime":820});
} );</script></body>
</html>